{
  "antiunify": "(datatype Expr\n  (Num i64)\n  (Var String)\n  (Add Expr Expr))\n\n(rewrite (Add x y) (Add y x))\n(rewrite (Add (Num x) (Num y)) (Num (+ x y)))\n\n;; antiunificaiton returns an expression that could unify with either\n;; of the input expressions\n;; (AU x y) can be considered a placeholder variable\n(constructor AU (Expr Expr) Expr)\n\n(rewrite (AU x x) x)\n(rewrite\n (AU (Add a b) (Add c d))\n (Add (AU a c) (AU b d)))\n\n(let e1 (Add (Var \"x\") (Add (Num 1) (Num 2))))\n(let e2 (Add (Num 3) (Var \"y\")))\n\n(let au12 (AU e1 e2))\n\n(run 4)\n(check (= au12 (Add (Num 3) (AU (Var \"x\") (Var \"y\")))))\n(query-extract au12)\n",
  "array": "; Smtlib theory of arrays\n; https://smtlib.cs.uiowa.edu/theories-ArraysEx.shtml\n; http://smtlib.cs.uiowa.edu/version1/theories/Arrays.smt\n\n(datatype Math\n  (Num i64)\n  (Var String)\n)\n\n\n(datatype Array\n  (Const i64)\n  (AVar String)\n)\n\n(constructor add (Math Math) Math)\n(constructor select (Array Math) Math)\n(constructor store (Array Math Math) Array)\n\n(relation neq (Math Math))\n\n(rule ((neq x y))\n      ((neq y x)))\n\n(rule ((neq x x))\n      ((panic \"query (neq x x) found something equal to itself\")))\n\n\n; injectivity rules take not equal to not equal.\n(rule  ((neq x y) (= (add x z) e))\n       ((neq (add x z) (add y z))))\n(rule  ((= (add x (Num i)) e) (!= i 0))\n       ((neq e x)))\n\n\n(rule ((= (Num a) n1) (= (Num b) n2) (!= a b))\n      ((neq n1 n2)))\n\n; select gets from store\n(rewrite (select (store mem i e) i) e)\n; select passes through wrong index\n(rule ((= (select (store mem i1 e) i2) e1) (neq i1 i2))\n      ((union (select mem i2) e1)))\n; aliasing writes destroy old value\n(rewrite (store (store mem i e1) i e2) (store mem i e2))\n; non-aliasing writes commutes\n(rule ((= (store (store mem i2 e2) i1 e1) mem1) (neq i1 i2))\n      ((union (store (store mem i1 e1) i2 e2) mem1)))\n\n; typical math rules\n(rewrite (add x y) (add y x))\n(rewrite (add (add x y) z) (add x (add y z)))\n(rewrite (add (Num x) (Num y)) (Num (+ x y)))\n(rewrite (add x (Num 0)) x)\n\n(push)\n(let r1 (Var \"r1\"))\n(let r2 (Var \"r2\"))\n(let r3 (Var \"r3\"))\n(let mem1 (AVar \"mem1\"))\n\n(neq r1 r2)\n(neq r2 r3)\n(neq r1 r3)\n(let test1 (select (store mem1 r1 (Num 42)) r1))\n(let test2 (select (store mem1 r1 (Num 42)) (add r1 (Num 17))))\n(let test3 (select (store (store mem1 (add r1 r2) (Num 1)) (add r2 r1) (Num 2)) (add r1 r3)))\n(let test4 (add (Num 1) (add (add (Num 1) (add (Num 1) r1)) (Num -3))))\n\n(run 5)\n(check (= test1 (Num 42)))\n(check (neq r1 r2))\n(check (neq r1 (add r1 (Num 17))))\n(check (= test2 (select mem1 (add r1 (Num 17)))))\n(check (= test3 (select mem1 (add r1 r3))))\n(check (= test4 r1))\n(pop)\n",
  "bdd": "; Binary Decision Diagrams are if-then-else trees/ compressed tries that hash cons their leaves\n; This is easily expressible in the facilities provided. Everything in egglog is automatcally shared\n; and Compression is easily expressible as a rule.\n\n; They are a notion of first class set useful for certain classes of uniformly describable sets.\n; https://en.wikipedia.org/wiki/Binary_decision_diagram\n; https://www.lri.fr/~filliatr/ftp/publis/hash-consing2.pdf Type-Safe Modular Hash-Consing - Section 3.3\n\n(datatype BDD\n    (ITE i64 BDD BDD) ; variables labelled by number\n)\n(constructor TrueConst () BDD)\n(let True (TrueConst))\n(constructor FalseConst () BDD)\n(let False (FalseConst))\n\n; compress unneeded nodes\n(rewrite (ITE n a a) a)\n\n(constructor bddand (BDD BDD) BDD)\n(rewrite (bddand x y) (bddand y x))\n(rewrite (bddand False n) False)\n(rewrite (bddand True x) x)\n\n; We use an order where low variables are higher in tree\n; Could go the other way.\n(rewrite (bddand (ITE n a1 a2) (ITE m b1 b2))\n    (ITE n (bddand a1 (ITE m b1 b2)) (bddand a2 (ITE m b1 b2)))\n    :when ((< n m))\n)\n(rewrite (bddand (ITE n a1 a2) (ITE n b1 b2))\n    (ITE n (bddand a1 b1) (bddand a2 b2))\n)\n\n(constructor bddor (BDD BDD) BDD)\n(rewrite (bddor x y) (bddor y x))\n(rewrite (bddor True n) True)\n(rewrite (bddor False x) x)\n(rewrite (bddor (ITE n a1 a2) (ITE m b1 b2))\n    (ITE n (bddor a1 (ITE m b1 b2)) (bddor a2 (ITE m b1 b2)))\n    :when ((< n m))\n)\n(rewrite (bddor (ITE n a1 a2) (ITE n b1 b2))\n    (ITE n (bddor a1 b1) (bddor a2 b2))\n)\n\n(constructor bddnot (BDD) BDD)\n(rewrite (bddnot True) False)\n(rewrite (bddnot False) True)\n(rewrite (bddnot (ITE n a1 a2)) (ITE n (bddnot a1) (bddnot a2)))\n\n\n(constructor bddxor (BDD BDD) BDD)\n(rewrite (bddxor x y) (bddxor y x))\n(rewrite (bddxor True n) (bddnot n))\n(rewrite (bddxor False x) x)\n\n(rewrite (bddxor (ITE n a1 a2) (ITE m b1 b2))\n    (ITE n (bddxor a1 (ITE m b1 b2)) (bddxor a2 (ITE m b1 b2)))\n    :when ((< n m))\n)\n(rewrite (bddxor (ITE n a1 a2) (ITE n b1 b2))\n    (ITE n (bddxor a1 b1) (bddxor a2 b2))\n)\n\n(push)\n;;; Tests\n\n(let v0 (ITE 0 True False))\n(let v1 (ITE 1 True False))\n(let v2 (ITE 2 True False))\n\n(let t0 (bddnot (bddnot v0)))\n(let t1 (bddor v0 (bddnot v0)))\n(let t2 (bddand v0 (bddnot v0)))\n(let t3 (bddand v0 v0))\n(let t4 (bddor v0 v0))\n(let t5 (bddxor (bddnot v0) v0))\n(let t6 (bddand (bddor v1 v2) v2))\n\n(let t7a (bddxor (bddnot v0) v1))\n(let t7b (bddxor v0 (bddnot v1)))\n(let t7c (bddnot (bddxor v0 v1)))\n\n(let t8 (bddand v1 v2))\n\n(let t9 (bddand (bddnot v1) (bddand (bddnot v0) (bddxor v0 v1))))\n(let t10 (bddor (bddnot v1) (bddor (bddnot v0) (bddxor  v0 (bddnot v1)))))\n\n(run 30)\n\n(check (= t0 v0)) ; bddnot cancels\n(check (= t1 True))\n(check (= t2 False))\n(check (= t3 v0))\n(check (= t4 v0))\n(check (= t5 True))\n(check (= t6 v2))\n\n(check (= t7a t7b))\n(check (= t7a t7c))\n\n(check (= t8 (ITE 1 (ITE 2 True False) False)))\n\n(check (= t9 False))\n(check (= t10 True))\n(pop)\n",
  "before-proofs": "(datatype Math\n    (Add Math Math)\n    (Sub Math Math)\n    (Const i64)\n    (Var String))\n\n(rewrite (Add a b) (Add (Add a b) (Const 0)))\n\n(rewrite (Add a b) (Add b a))\n\n\n(rewrite (Add a (Add b c))\n      (Add (Add a b) c))\n\n(let two 2)\n(let start1 (Add (Var \"x\") (Const two)))\n;; add original proofs\n\n(run 3)\n\n\n(check (!= (Var \"x\") (Const two)))\n(check (= (Add (Var \"x\") (Const two))\n          (Add (Const two) (Var \"x\"))))\n\n(let zero (Const 0))\n(let addx2 (Add (Var \"x\") (Const two)))\n(let addx20 (Add addx2 zero))\n(let addzerofront (Add (Add zero (Var \"x\")) (Const two)))\n\n(check (= addx2\n          addx20))\n",
  "bignum": "\n(let x (bigint -1234))\n(let y (from-string \"2\"))\n(let z (bigrat x y))\n(check (= (to-string (numer z)) \"-617\"))\n\n(function bignums (BigInt BigInt) BigRat :no-merge)\n(set (bignums x y) z)\n(check\n\t(= (bignums a b) c)\n\t(= (numer c) (>> a 1))\n\t(= (denom c) (>> b 1))\n)\n",
  "birewrite": "(datatype Math (Add Math Math) (Lit i64))\n\n(birewrite (Add (Add x y) z) (Add x (Add y z)))\n\n(let a (Lit 1))\n(let b (Lit 2))\n(let c (Lit 3))\n\n(let d (Lit 4))\n(let e (Lit 5))\n(let f (Lit 6))\n\n(let ex1 (Add (Add a b) c))\n(let ex2 (Add d (Add e f)))\n\n(run 10)\n(check (= ex1 (Add a (Add b c))))\n(check (= ex2 (Add (Add d e) f)))\n",
  "bitwise": "(check (= 0 (& 10 0)))\n(check (= 8 (& 8 10)))\n(check (= 10 (| 8 10)))\n(check (= 2 (^ 8 10)))\n(check (= 8 (<< 1 3)))\n(check (= 1 (>> 8 3)))\n(check (= 2 (% 8 3)))\n(check (= 2 (/ 8 3)))\n(check (= -1 (not-i64 0)))\n\n; bitsets\n;(function bs-union (i64 i64) i64)\n;(rewrite (bs-union a b) (| a b))\n\n;(function bs-inter (i64 i64) i64)\n;(rewrite (bs-inter a b) (& a b))\n\n;(function bs-comp (i64) i64)\n;(rewrite (bs-comp a) (bvnot a))\n\n; singleton set\n;(function bs-sing (i64) i64)\n;(rewrite (bs-sing a) (1 << a))\n\n;(function bs-insert (i64 i64) i64)\n;(rewrite (bs-insert s x) (| s (1 << a))\n\n;(function bs-diff (i64 i64) i64)\n;(rewrite (bs-diff a b) (^ a (bs-inter a b))\n\n;(let bs-empty 0)\n\n;(let bs-subset (i64 i64) bool)\n;(rewrite (bs-subset x y) (is-zero (bs-diff x y)))\n\n;(let bs-is-elem (i64 i64) bool)\n;(rewrite (bs-is-elem s x) (not (is-zero (bs-inter s (sing x)))))\n",
  "bool": "\n(check (= (and true true) true))\n(check (= (and true false) false))\n(check (= (or true false) true))\n(check (!= (or true false) false))\n\n(check (= (bool-= 1 1) true))\n(check (= (bool-= -5 -5) true))\n(check (= (bool-= 1 3) false))\n(check (= (bool-= 3 1) false))\n\n(check (= (bool-< 1 2) true))\n(check (= (bool-< 2 1) false))\n(check (= (bool-< 1 1) false))\n\n(check (= (bool-<= 1 2) true))\n(check (= (bool-<= 2 1) false))\n(check (= (bool-<= 1 1) true))\n\n(check (= (bool-> 1 2) false))\n(check (= (bool-> 2 1) true))\n(check (= (bool-> 1 1) false))\n\n(check (= (bool->= 1 2) false))\n(check (= (bool->= 2 1) true))\n(check (= (bool->= 1 1) true))\n\n; Test bool's tag\n(relation R (i64))\n(function F (i64) bool :no-merge)\n\n(rule\n    ((R i))\n    ((set (F i) true))\n)\n\n(R 0)\n\n(run 3)\n",
  "calc": "(datatype G)\n(constructor IConst () G)\n(let I (IConst))\n(constructor AConst () G)\n(let A (AConst))\n(constructor BConst () G)\n(let B (BConst))\n(constructor g* (G G) G)\n(constructor inv (G) G)\n(birewrite (g* (g* a b) c) (g* a (g* b c))) ; assoc\n(rewrite (g* I a) a) ; idl\n(rewrite (g* a I) a) ; idr\n(rewrite (g* (inv a) a) I) ; invl\n(rewrite (g* a (inv a)) I) ; invr\n\n; A is cyclic of period 4\n(rewrite (g* A (g* A (g* A A))) I)\n\n(let A2 (g* A A))\n(let A4 (g* A2 A2))\n(let A8 (g* A4 A4))\n\n\n(push)\n(g* A4 A4)\n\n(run 10000 :until (= (g* A4 A4) (g* (g* A2 A2) (g* A2 A2))))\n\n(check (= (g* A4 A4) (g* (g* A2 A2) (g* A2 A2))))\n(pop)\n\n(push)\n(g* (g* A2 A2) (g* A2 A2))\n\n(run 10000 :until (= (g* (g* A2 A2) (g* A2 A2))\n(g* A2 (g* A2 (g* A2 A2)))))\n(check (= (g* (g* A2 A2) (g* A2 A2))\n(g* A2 (g* A2 (g* A2 A2)))))\n(pop)\n\n\n(constructor aConst () G)\n(constructor bConst () G)\n(let a (aConst))\n(let b (bConst))\n(push)\n\n(g* (g* b (g* (inv a) a)) (inv b))\n\n(run 100000 :until (= (g* (g* b (g* (inv a) a)) (inv b)) (g* b (inv b))))\n\n(check (= (g* (g* b (g* (inv a) a)) (inv b)) (g* b (inv b))))\n\n(pop)\n\n(push)\n(g* b (inv b))\n(run 100000 :until (= (g* b (inv b)) I))\n(check (= (g* b (inv b)) I))\n\n(pop)\n",
  "combinators": "; Substitution in lambda-calculus via S/K/I combinators. Extremely slow, as\n; abstraction elimination does not pay attention to whether variables are free\n; in an expression before introducing 'S'.\n;\n; Provides an example of how to implement substitution by embedding in a\n; 'richer' data-type and then mapping back to syntax.\n\n(datatype Expr\n    (Var String :cost 100)\n    (Abs String Expr)\n    (If Expr Expr Expr)\n    (N i64)\n    (Add Expr Expr)\n    (App Expr Expr))\n(constructor TConst () Expr)\n(let T (TConst))\n(constructor FConst () Expr)\n(let F (FConst))\n\n\n; (\\x. (if x then 0 else 1) + 2) false\n(let test\n    (App \n        (Abs \"x\" (Add (If (Var \"x\") (N 0) (N 1)) (N 2))) F))\n\n(datatype CExpr\n    (CVar String :cost 10000) ; (variables that haven't been eliminated yet)\n    (CAbs String CExpr :cost 10000) ; (abstractions that haven't been eliminated yet)\n    (CN i64)\n    (CApp CExpr CExpr))\n(constructor CTConst () CExpr)\n(let CT (CTConst))\n(constructor CFConst () CExpr)\n(let CF (CFConst))\n(constructor CIfConst () CExpr)\n(let CIf (CIfConst))\n(constructor CAddConst () CExpr)\n(let CAdd (CAddConst))\n(constructor SConst () CExpr)\n(let S (SConst))\n(constructor KConst () CExpr)\n(let K (KConst))\n(constructor IConst () CExpr)\n(let I (IConst))\n\n;;;; Conversion functions\n(constructor Comb (Expr) CExpr :cost 1000000)\n(constructor Uncomb (CExpr) Expr)    \n(rewrite (Comb (Uncomb cx)) cx)\n(rewrite (Uncomb (Comb x)) x)\n\n; Mechanical mappings back and forth.\n; Note: we avoid resugaring S/K/I\n(rule ((= x (N n))) ((union (Comb x) (CN n))))\n(rule ((= cx (CN n))) ((union (Uncomb cx) (N n))))\n(rule ((= x T)) ((union (Comb x) CT)))\n(rule ((= cx CT)) ((union (Uncomb cx) T)))\n(rule ((= x F)) ((union (Comb x) CF)))\n(rule ((= cx CF)) ((union (Uncomb cx) F)))\n\n(rule ((= x (If c t f)))\n    ((union (Comb x) (CApp (CApp (CApp CIf (Comb c)) (Comb t)) (Comb f)))))\n(rule ((= cx (CApp (CApp (CApp CIf cc) ct) cf)))\n    ((union (Uncomb cx) (If (Uncomb cc) (Uncomb ct) (Uncomb cf)))))\n\n(rule ((= x (Add l r)))\n    ((union (Comb x) (CApp (CApp CAdd (Comb l)) (Comb r)))))\n(rule ((= cx (CApp (CApp CAdd cl) cr)))\n    ((union (Uncomb cx) (Add (Uncomb cl) (Uncomb cr)))))\n(rule ((= x (App f a))) ((union (Comb x) (CApp (Comb f) (Comb a)))))\n\n(rule ((= x (Var v))) ((union (Comb x) (CVar v))))\n(rule ((= x (Abs v body))) ((union (Comb x) (CAbs v (Comb body)))))\n\n;;;; Abstraction Elimination \n(rewrite (CAbs v (CVar v)) I)\n; Hacks, could be replaced by !free computation.\n(rewrite (CAbs v1 (CVar v2)) (CApp K (CVar v2)) \n    :when ((!= v1 v2)))\n(rewrite (CAbs v (CN n)) (CApp K (CN n)))\n(rewrite (CAbs v CT) (CApp K CT))\n(rewrite (CAbs v CF) (CApp K CF))\n(rewrite (CAbs v CIf) (CApp K CIf))\n(rewrite (CAbs v CAdd) (CApp K CAdd))\n(rewrite (CAbs v (CApp x y)) (CApp (CApp S (CAbs v x)) (CAbs v y)))\n; May be needed for multiple nested variables\n(rewrite (CAbs v (CApp K (CVar v))) K)\n\n;;;; Primitive Evaluation rules (letd on \"surface syntax\")\n(rewrite (If T t f) t)\n(rewrite (If F t f) f)\n(rewrite (Add (N n) (N m)) (N (+ n m)))\n\n;;;; Substitution Rules (letd on the combinator representation)\n(rewrite (CApp I cx) cx)\n(rewrite (CApp (CApp K cx) cy) cx)\n; Without demand, this can cause an explosion in DB size.\n(rewrite (CApp (CApp (CApp S cx) cy) cz) (CApp (CApp cx cz) (CApp cy cz)))\n\n(run 11)\n(query-extract (Comb test))\n(check (= test (N 3)))",
  "combined-nested": "(relation number (i64))\n\n\n(ruleset myrules1)\n(rule ()\n      ((number 1))\n      :ruleset myrules1)\n(ruleset myrules2)\n(rule ()\n      ((number 2))\n      :ruleset myrules2)\n\n(unstable-combined-ruleset rules1and2\n    myrules1 myrules2)\n\n;; allowed to add to myrules2 and the change is reflected\n(rule ()\n      ((number 3))\n      :ruleset myrules2)\n\n;; not allowed to add to combined ruleset\n(fail\n (rule ()\n    ((number 4))\n    :ruleset myrules1and2))\n\n\n(fail\n  (rule ()\n    ((number 4))\n    :ruleset unboundruleset))\n\n(ruleset myrules5)\n(rule ()\n      ((number 5))\n      :ruleset myrules5)\n\n(unstable-combined-ruleset rules1and2and5\n     rules1and2 myrules5)\n\n(run-schedule\n  rules1and2and5)\n\n(check (number 1))\n(check (number 2))\n(check (number 3))\n(check (number 5))\n(fail (check (number 4)))\n",
  "container-rebuild": "(push)\n(datatype Math\n  (Num i64))\n\n(sort MathVec (Vec Math))\n\n(let v1 (vec-of (Num 1) (Num 2)))\n(let v2 (vec-of (Num 2) (Num 2)))\n\n(union (Num 1) (Num 2))\n\n(check (= v1 v2))\n\n(constructor MyVec (MathVec) Math)\n\n(MyVec v1)\n\n(check (MyVec v2))\n\n(check (= (MyVec v1) (MyVec v2)))\n\n(let v3 (vec-of (Num 4) (Num 5)))\n\n(union (Num 4) (Num 6))\n(union (Num 5) (Num 7))\n\n;; We don't have any (MyVec v3) yet\n(fail (check (= (MyVec v3) (MyVec (vec-of (Num 6) (Num 7))))))\n\n(MyVec v3)\n(check (= (MyVec v3) (MyVec (vec-of (Num 6) (Num 7)))))\n\n(pop)\n\n(push)\n\n(datatype Math\n  (Num i64))\n\n(sort MathVec (Vec Math))\n\n\n(let v1 (vec-of (Num 1) (Num 2)))\n(let v2 (vec-of (Num 2) (Num 2)))\n\n(union (Num 1) (Num 2))\n\n(constructor MyVec (MathVec) Math)\n\n;; make a reference to v1\n(MyVec v1)\n\n(extract (MyVec v1))\n\n;; rebuilding creates (MyVec v2)\n(check (= (MyVec v1) (MyVec v2)))\n(pop)\n\n(push)\n(datatype Math\n  (Add i64 i64)\n  (Expensive :cost 100))\n\n(sort MathVec (Vec Math))\n\n(let myvec (vec-of (Expensive)))\n(let cheapvec (vec-of (Add 1 2)))\n\n(constructor VecContainer (MathVec) Math)\n\n(let myvecontainer (VecContainer cheapvec))\n\n\n(union myvecontainer (Expensive))\n\n;; (vec-push (vec-empty) (VecContainer (vec-push (vec-empty) (Add 1 2))))\n;; should have cost 4\n(extract myvec 0)\n\n(pop)",
  "cyk": "(datatype term (Term String))\n(datatype nonterm (NonTerm String))\n(datatype tree (NT String tree tree)\n                  (T String String))\n\n(function getString (i64) String :no-merge)\n\n(relation Prod (nonterm nonterm nonterm))\n(relation End (nonterm String))\n\n\n\n(relation P (i64 i64 nonterm))\n(constructor B (i64 i64 nonterm) tree :cost 1000)\n\n(rule ((End (NonTerm a) s)\n       (= s (getString pos)))\n      ((P 1 pos (NonTerm a))\n       (union (B 1 pos (NonTerm a)) (T a s)))) \n\n(rule ((Prod (NonTerm a) (NonTerm b) (NonTerm c)) ;; a -> bc\n       (P p1 s (NonTerm b))\n       (P p2 (+ s p1) (NonTerm c)))\n      ((P (+ p1 p2) s (NonTerm a))))\n\n\n(rule ((Prod (NonTerm a) (NonTerm b) (NonTerm c))\n       (= f1 (B p1 s (NonTerm b)))\n       (= f2 (B p2 (+ s p1) (NonTerm c))))\n      ((union (B (+ p1 p2) s (NonTerm a)) \n       (NT a f1 f2))))\n\n(push)\n\n\n(set (getString 1) \"she\")\n(set (getString 2) \"eats\")\n(set (getString 3) \"a\")\n(set (getString 4) \"fish\")\n(set (getString 5) \"with\")\n(set (getString 6) \"a\")\n(set (getString 7) \"fork\")\n\n\n(Prod (NonTerm \"S\") (NonTerm \"NP\") (NonTerm \"VP\"))\n(Prod (NonTerm \"VP\") (NonTerm \"VP\") (NonTerm \"PP\"))\n(Prod (NonTerm \"VP\") (NonTerm \"V\") (NonTerm \"NP\"))\n(End (NonTerm \"VP\")  \"eats\")\n(Prod (NonTerm \"PP\") (NonTerm \"P\") (NonTerm \"NP\"))\n(Prod (NonTerm \"NP\") (NonTerm \"DET\") (NonTerm \"N\"))\n(End (NonTerm \"NP\") \"she\")\n(End (NonTerm \"V\") \"eats\")\n(End (NonTerm \"P\") \"with\")\n(End (NonTerm \"N\") \"fish\")\n(End (NonTerm \"N\") \"fork\")\n(End (NonTerm \"DET\") \"a\")\n\n\n(run 100)\n\n(let test1 (B 7 1 (NonTerm \"S\")))\n\n(check (P 7 1 (NonTerm \"S\")))\n(fail (check (P 7 1 (NonTerm \"VP\"))))\n(fail (check (P 7 1 (NonTerm \"\"))))\n\n(query-extract test1)\n\n(pop)\n\n(push)\n\n(Prod (NonTerm \"S\") (NonTerm \"A\") (NonTerm \"B\"))\n(Prod (NonTerm \"S\") (NonTerm \"B\") (NonTerm \"C\"))\n(Prod (NonTerm \"A\") (NonTerm \"B\") (NonTerm \"A\"))\n(End (NonTerm \"A\") \"a\")\n(Prod (NonTerm \"B\") (NonTerm \"C\") (NonTerm \"C\"))\n(End (NonTerm \"B\") \"b\")\n(Prod (NonTerm \"C\") (NonTerm \"A\") (NonTerm \"B\"))\n(End (NonTerm \"C\") \"a\")\n\n(push)\n\n(set (getString 1) \"a\")\n(set (getString 2) \"b\")\n(set (getString 3) \"a\")\n(set (getString 4) \"a\")\n(set (getString 5) \"b\")\n\n(run 100)\n(check (P 5 1 (NonTerm \"S\")))\n(fail (check (P 5 1 (NonTerm \"B\"))))\n(let test2 (B 5 1 (NonTerm \"S\")))\n(query-extract :variants 10 test2)\n\n(pop)\n\n(push)\n\n(set (getString 1) \"a\")\n(set (getString 2) \"a\")\n(set (getString 3) \"a\")\n(set (getString 4) \"a\")\n(set (getString 5) \"a\")\n\n(run 100)\n(check (P 5 1 (NonTerm \"S\")))\n(check (P 5 1 (NonTerm \"A\")))\n(fail (check (P 5 1 (NonTerm \"B\"))))\n(fail (check (P 5 1 (NonTerm \"\"))))\n(fail (check (P 5 1 (NonTerm \"unrelated\"))))\n(let test3 (B 5 1 (NonTerm \"S\")))\n(query-extract :variants 10 test3)\n\n(pop)",
  "cykjson": "(datatype tree (NT String tree tree)\n                  (T String String))\n\n(function getString (i64) String :no-merge)\n\n(relation Prod (String String String))\n(relation End (String String))\n\n\n(relation P (i64 i64 String))\n(function B (i64 i64 String) tree :no-merge)\n\n(rule ((End a s)\n       (= s (getString pos)))\n      ((P 1 pos a)\n       (set (B 1 pos a) (T a s)))) \n\n(rule ((Prod a b c) ;; a -> bc\n       (P p1 s b)\n       (P p2 (+ s p1) c))\n      ((P (+ p1 p2) s a)))\n\n\n(rule ((Prod a b c)\n       (= f1 (B p1 s b))\n       (= f2 (B p2 (+ s p1) c)))\n      ((set (B (+ p1 p2) s a) \n       (NT a f1 f2))))\n\n\n(input Prod \"./tests/cykjson_Prod.csv\")\n(input End \"./tests/cykjson_End.csv\")\n\n; small size 801\n(input getString \"./tests/cykjson_small_token.csv\")\n\n; medium size 7821 but runs for 2 min.\n;(input getString \"./tests/cykjson_medium_token.csv\")\n\n(run 10000)\n\n(let test1 (B 801 1 \"VAL\"))\n\n(check (P 801 1 \"VAL\"))",
  "datatypes": "(datatype*\n    (Math\n        (Add Math Math)\n        (Sum MathVec)\n        (B Bool))\n    (sort MathVec (Vec Math))\n    (Bool\n        (True)\n        (False)))\n\n(let expr (Add (Sum (vec-of (B (True)) (B (False)))) (B (True))))\n",
  "delete": "(function foo (i64) i64 :no-merge)\n(set (foo 1) 7)\n(check (= (foo 1) 7))\n(delete (foo 1))\n(rule ((= x (foo 1))) ((panic \"foo 1 was there!\")))\n(run 1)",
  "eggcc-extraction": "\n(datatype Literal)\n(datatype Expr)\n(datatype Operand)\n(datatype Body)\n\n(sort VecOperandBase (Vec Operand))\n(datatype VecOperand (VO VecOperandBase))\n\n(sort VecVecOperandBase (Vec VecOperand))\n(datatype VecVecOperand (VVO VecVecOperandBase))\n\n;; Type\n(datatype Type\n    (IntT)\n    (BoolT)\n    (FloatT)\n    (CharT)\n    (PointerT Type))\n(datatype EffectType\n    (Bril Type)\n    (PrintState))\n(sort FuncSigs (Vec EffectType))\n(datatype OptionType\n    (SomeType Type)\n    (NoneType))\n;; Literal\n(constructor Num (i64) Literal)\n(constructor Float (f64) Literal)\n(constructor Char (String) Literal)\n(constructor Bool (bool) Literal)\n\n;; Expr\n(datatype ConstOps (const))\n(constructor Const (Type ConstOps Literal) Expr)\n;; Call may return multiple values but at most one of them\n;; is a value type, which is stored in OptionType.\n;; The last fields denotes how many return values it have\n;; Finally, we assume if call ever returns a value, \n;; it has to be the first one.\n(constructor Call (OptionType String VecOperand i64) Expr :cost 1000) ; TODO: fix cost model\n(constructor badd (Type Operand Operand) Expr)\n(constructor bsub (Type Operand Operand) Expr)\n(constructor bmul (Type Operand Operand) Expr)\n(constructor bfmul (Type Operand Operand) Expr)\n(constructor bdiv (Type Operand Operand) Expr)\n(constructor beq (Type Operand Operand) Expr)\n(constructor blt (Type Operand Operand) Expr)\n(constructor bgt (Type Operand Operand) Expr)\n(constructor ble (Type Operand Operand) Expr)\n(constructor bge (Type Operand Operand) Expr)\n(constructor bnot (Type Operand Operand) Expr)\n(constructor band (Type Operand Operand) Expr)\n(constructor bor (Type Operand Operand) Expr)\n(constructor PRINT (Operand Operand) Expr)\n\n;; Operand\n(constructor Arg (i64) Operand)\n(constructor Node (Body) Operand)\n(constructor Project (i64 Body) Operand)\n\n;; Body\n(constructor PureOp (Expr) Body)\n;; branching\n;; predicate (outside switch), inputs (outside switch),\n;; and for each branch a vector of outputs\n(constructor Gamma (Operand VecOperand VecVecOperand) Body)\n;; loops\n;; predicate (inside loop), inputs (outside loop), outputs (inside loop)\n(constructor Theta (Operand VecOperand VecOperand) Body)\n;; A body can also just be a VecOperand for convenience\n;; This has no corresponding node in rust, it can be\n;; removed during translation\n(constructor OperandGroup (VecOperand) Body)\n\n(datatype Function\n    ;;    name   input types    output types    body\n    (Func String FuncSigs       FuncSigs        VecOperand))\n\n\n;; procedure f(n):\n;;   i = 0\n;;   ans = 0\n;;   do:\n;;     ans += i*5;\n;;     i += 1\n;;   while(i < n);\n;;   return ansm\n\n;; ;; inputs: [n]\n; (Project 0\n;     (Theta\n;        ;     i       n\n;         (lt (Arg 1) (Arg 2)) ;; pred\n;         (vec-of ;; inputs\n;             (Node (PureOp (Const 0))) ;; accumulator\n;             (Node (PureOp (Const 0))) ;; loop var\n;             (Arg 0) ;; n\n;             )\n;         (vec-of ;; outputs\n;             (Node (PureOp (add (Arg 0) ;; ans\n;                 (Node (PureOp (mul \n;                     (Arg 1) ;; i\n;                     (Node (PureOp (Const 5))))))))) ;; ans = i*5\n;             (Node (PureOp (add (Arg 1) (Node (PureOp (Const 1)))))) ;; i += 1\n;             (Arg 2) ;; n\n;         ))\n; )\n\n\n\n(ruleset fast-analyses)\n\n          (constructor VecOperand-get (VecOperand i64) Operand)\n          (rule ((VO x) (> (vec-length x) 0))\n                ((union (VecOperand-get (VO x) 0) (vec-get x 0)))\n                :ruleset fast-analyses)\n          (rule ((VecOperand-get (VO x) j)\n                 (= i (+ j 1)) (< i (vec-length x)))\n                ((union (VecOperand-get (VO x) i) (vec-get x i)))\n                :ruleset fast-analyses)\n\n            (function VecOperand-length (VecOperand) i64 :no-merge)\n            (rule ((VO x))\n                  ((set (VecOperand-length (VO x)) (vec-length x)))\n                  :ruleset fast-analyses)\n        \n\n          (constructor VecVecOperand-get (VecVecOperand i64) VecOperand)\n          (rule ((VVO x) (> (vec-length x) 0))\n                ((union (VecVecOperand-get (VVO x) 0) (vec-get x 0)))\n                :ruleset fast-analyses)\n          (rule ((VecVecOperand-get (VVO x) j)\n                 (= i (+ j 1)) (< i (vec-length x)))\n                ((union (VecVecOperand-get (VVO x) i) (vec-get x i)))\n                :ruleset fast-analyses)\n\n            (function VecVecOperand-length (VecVecOperand) i64 :no-merge)\n            (rule ((VVO x))\n                  ((set (VecVecOperand-length (VVO x)) (vec-length x)))\n                  :ruleset fast-analyses)\n        \n\n        (relation Expr-is-pure (Expr))\n        (relation Operand-is-pure (Operand))\n        (relation Body-is-pure (Body))\n        (relation VecOperand-is-pure (VecOperand))\n        (function VecOperand-pure-prefix (VecOperand) i64 :merge (max old new))\n        (relation VecVecOperand-is-pure (VecVecOperand))\n        (function VecVecOperand-pure-prefix (VecVecOperand) i64 :merge (max old new))\n        (relation Function-is-pure (Function))\n    \n\n        (rule ((= f (Const ty ops lit)))\n              ((Expr-is-pure f))\n              :ruleset fast-analyses)\n\n        (rule ((= f (Call ty name args n-outs))\n               (Function-is-pure (Func name input-types output-types body)))\n              ((Expr-is-pure f))\n              :ruleset fast-analyses)\n    \n\n                (rule ((= f (badd type e1 e2))\n                       (Operand-is-pure e1)\n                       (Operand-is-pure e2))\n                      ((Expr-is-pure f))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((= f (bsub type e1 e2))\n                       (Operand-is-pure e1)\n                       (Operand-is-pure e2))\n                      ((Expr-is-pure f))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((= f (bmul type e1 e2))\n                       (Operand-is-pure e1)\n                       (Operand-is-pure e2))\n                      ((Expr-is-pure f))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((= f (bdiv type e1 e2))\n                       (Operand-is-pure e1)\n                       (Operand-is-pure e2))\n                      ((Expr-is-pure f))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((= f (blt type e1 e2))\n                       (Operand-is-pure e1)\n                       (Operand-is-pure e2))\n                      ((Expr-is-pure f))\n                      :ruleset fast-analyses)\n                \n\n        (rule ((= f (Arg x)))\n              ((Operand-is-pure f))\n              :ruleset fast-analyses)\n        (rule ((= f (Node body))\n               (Body-is-pure body))\n              ((Operand-is-pure f))\n              :ruleset fast-analyses)\n        (rule ((= f (Project i body))\n               (Body-is-pure body))\n              ((Operand-is-pure f))\n              :ruleset fast-analyses)\n    \n\n        (rule ((= f (PureOp e))\n               (Expr-is-pure e))\n              ((Body-is-pure f))\n              :ruleset fast-analyses)\n        (rule ((= f (Gamma pred inputs outputs))\n               (Operand-is-pure pred)\n               (VecOperand-is-pure inputs)\n               (VecVecOperand-is-pure outputs))\n              ((Body-is-pure f))\n              :ruleset fast-analyses)\n        (rule ((= f (Theta pred inputs outputs))\n               (Operand-is-pure pred)\n               (VecOperand-is-pure inputs)\n               (VecOperand-is-pure outputs))\n              ((Body-is-pure f))\n              :ruleset fast-analyses)\n        (rule ((= f (OperandGroup vec))\n               (VecOperand-is-pure vec))\n              ((Body-is-pure f))\n              :ruleset fast-analyses)\n    \n\n            (rule ((= f (VO vec)))\n                  ((set (VecOperand-pure-prefix f) 0))\n                  :ruleset fast-analyses)\n            (rule ((= i (VecOperand-pure-prefix f))\n                   (< i (VecOperand-length f))\n                   (Operand-is-pure (VecOperand-get f i)))\n                  ((set (VecOperand-pure-prefix f) (+ i 1)))\n                  :ruleset fast-analyses)\n            (rule ((= (VecOperand-length f) (VecOperand-pure-prefix f)))\n                  ((VecOperand-is-pure f))\n                  :ruleset fast-analyses)\n        \n\n            (rule ((= f (VVO vec)))\n                  ((set (VecVecOperand-pure-prefix f) 0))\n                  :ruleset fast-analyses)\n            (rule ((= i (VecVecOperand-pure-prefix f))\n                   (< i (VecVecOperand-length f))\n                   (VecOperand-is-pure (VecVecOperand-get f i)))\n                  ((set (VecVecOperand-pure-prefix f) (+ i 1)))\n                  :ruleset fast-analyses)\n            (rule ((= (VecVecOperand-length f) (VecVecOperand-pure-prefix f)))\n                  ((VecVecOperand-is-pure f))\n                  :ruleset fast-analyses)\n        \n\n        (rule ((= f (Func name input-types output-types body))\n               (VecOperand-is-pure body))\n              ((Function-is-pure f))\n              :ruleset fast-analyses)\n    \n\n        (relation Body-contains-Expr (Body i64 Expr))\n        (relation Body-contains-Operand (Body i64 Operand))\n        (relation Body-contains-Body (Body i64 Body))\n    \n\n        (rule ((= f (PureOp e)))\n              ((Body-contains-Expr f 0 e))\n              :ruleset fast-analyses)\n        ; A Gamma only contains its outputs\n        (rule ((= f (Gamma pred inputs outputs))\n               (= outputs-i (VecVecOperand-get outputs i))\n               (= x (VecOperand-get outputs-i j)))\n              ((Body-contains-Operand f i x))\n              :ruleset fast-analyses)\n        ; A Theta contains its pred and outputs\n        (rule ((= f (Theta pred inputs outputs)))\n              ((Body-contains-Operand f -1 pred))\n              :ruleset fast-analyses)\n        (rule ((= f (Theta pred inputs outputs))\n               (= x (VecOperand-get outputs i)))\n              ((Body-contains-Operand f i x))\n              :ruleset fast-analyses)\n        (rule ((= f (OperandGroup vec))\n               (= x (VecOperand-get vec i)))\n              ((Body-contains-Operand f i x))\n              :ruleset fast-analyses)\n    \n\n        (rule ((Body-contains-Body f i (PureOp e)))\n              ((Body-contains-Expr f i e))\n              :ruleset fast-analyses)\n        ; A Gamma's pred and inputs are in the outer context\n        (rule ((Body-contains-Body f i (Gamma pred inputs outputs)))\n              ((Body-contains-Operand f i pred))\n              :ruleset fast-analyses)\n        (rule ((Body-contains-Body f i (Gamma pred inputs outputs))\n               (= x (VecOperand-get inputs any)))\n              ((Body-contains-Operand f i x))\n              :ruleset fast-analyses)\n        ; A Theta's inputs are in the outer context\n        (rule ((Body-contains-Body f i (Theta pred inputs outputs))\n                (= x (VecOperand-get inputs any)))\n              ((Body-contains-Operand f i x))\n              :ruleset fast-analyses)\n        (rule ((Body-contains-Body f i (OperandGroup vec))\n               (= x (VecOperand-get vec any)))\n              ((Body-contains-Operand f i x))\n              :ruleset fast-analyses)\n    \n\n        (rule ((Body-contains-Expr f i (Call ty name args n-outs))\n               (= x (VecOperand-get args any)))\n              ((Body-contains-Operand f i x))\n              :ruleset fast-analyses)\n        (rule ((Body-contains-Expr f i (PRINT e1 e2)))\n              ((Body-contains-Operand f i e1)\n               (Body-contains-Operand f i e2))\n              :ruleset fast-analyses)\n    \n\n                (rule ((Body-contains-Expr f i (badd type e1 e2)))\n                      ((Body-contains-Operand f i e1)\n                       (Body-contains-Operand f i e2))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((Body-contains-Expr f i (bsub type e1 e2)))\n                      ((Body-contains-Operand f i e1)\n                       (Body-contains-Operand f i e2))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((Body-contains-Expr f i (bmul type e1 e2)))\n                      ((Body-contains-Operand f i e1)\n                       (Body-contains-Operand f i e2))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((Body-contains-Expr f i (bdiv type e1 e2)))\n                      ((Body-contains-Operand f i e1)\n                       (Body-contains-Operand f i e2))\n                      :ruleset fast-analyses)\n                \n\n                (rule ((Body-contains-Expr f i (blt type e1 e2)))\n                      ((Body-contains-Operand f i e1)\n                       (Body-contains-Operand f i e2))\n                      :ruleset fast-analyses)\n                \n\n        (rule ((Body-contains-Operand f i (Node body)))\n              ((Body-contains-Body f i body))\n              :ruleset fast-analyses)\n        (rule ((Body-contains-Operand f i (Project i body)))\n              ((Body-contains-Body f i body))\n              :ruleset fast-analyses)\n    \n(ruleset subst) (ruleset shift)\n\n        (relation can-subst-Expr-beneath (Body Expr Expr))\n        (relation can-subst-Operand-beneath (Body Operand Operand))\n        (relation can-subst-Body-beneath (Body Body Body))\n        (relation can-subst-VecVecOperand-beneath (Body VecVecOperand VecVecOperand))\n        (relation can-subst-VecOperand-beneath (Body VecOperand VecOperand))\n\n        ;; Base case 'do the substitution' rules\n        (rule ((can-subst-Operand-beneath above from to)\n               (= above     (Theta from inputs outputs)))\n              ((union above (Theta to   inputs outputs)))\n              :ruleset subst)\n        (rule ((can-subst-VecOperand-beneath above from to)\n               (= above     (Theta pred inputs from)))\n              ((union above (Theta pred inputs to)))\n              :ruleset subst)\n        (rule ((can-subst-Operand-beneath above pred-from pred-to)\n               (can-subst-VecOperand-beneath above outputs-from outputs-to)\n               (= above     (Theta pred-from inputs outputs-from)))\n              ((union above (Theta pred-from inputs outputs-to)))\n              :ruleset subst)\n        (rule ((can-subst-VecVecOperand-beneath above from to)\n               (= above     (Gamma pred inputs from)))\n              ((union above (Gamma pred inputs to)))\n              :ruleset subst)\n        (rule ((can-subst-VecOperand-beneath above from to)\n               (= above     (OperandGroup from)))\n              ((union above (OperandGroup to)))\n              :ruleset subst)\n\n        ;; Learn can-subst-Operand-beneath\n        (rule ((can-subst-Body-beneath above from to)\n               (= new-from (Node from)))\n              ((can-subst-Operand-beneath above new-from (Node to)))\n              :ruleset subst)\n        (rule ((can-subst-Body-beneath above from to)\n               (= new-from (Project i from)))\n              ((can-subst-Operand-beneath above new-from (Project i to)))\n              :ruleset subst)\n\n        ;; Learn can-subst-body-beneath\n        (rule ((can-subst-Expr-beneath above from to)\n               (= new-from (PureOp from)))\n              ((can-subst-Body-beneath above new-from (PureOp to)))\n              :ruleset subst)\n        ;; Propagates up same context (Gamma: pred & inputs, Theta: inputs)\n        ;; rtjoa: Is it sound to propagate up outputs if we renumber args?\n        (rule ((can-subst-Operand-beneath above from to)\n               (= new-from (Gamma from inputs outputs)))\n              ((can-subst-Body-beneath above new-from (Gamma to inputs outputs)))\n              :ruleset subst)\n        (rule ((can-subst-VecOperand-beneath above from to)\n               (= new-from (Gamma pred from outputs)))\n              ((can-subst-Body-beneath above new-from (Gamma pred to outputs)))\n              :ruleset subst)\n        (rule ((can-subst-VecOperand-beneath above from to)\n               (= new-from (Theta pred from outputs)))\n              ((can-subst-Body-beneath above new-from (Theta pred to outputs)))\n              :ruleset subst)\n        (rule ((can-subst-VecOperand-beneath above from to)\n               (= new-from (OperandGroup from)))\n              ((can-subst-Body-beneath above new-from (OperandGroup to)))\n              :ruleset subst)\n        \n\n      (rule ((can-subst-VecOperand-beneath above from to)\n              (= new-from (Call ty f from n-outs)))\n             ((can-subst-Expr-beneath above new-from (Call ty f to n-outs)))\n            :ruleset subst)\n\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (badd type from e2)))\n                     ((can-subst-Expr-beneath above new-from (badd type to e2)))\n                    :ruleset subst)\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (badd type e1 from)))\n                     ((can-subst-Expr-beneath above new-from (badd type e1 to)))\n                    :ruleset subst)\n                     \n\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (bsub type from e2)))\n                     ((can-subst-Expr-beneath above new-from (bsub type to e2)))\n                    :ruleset subst)\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (bsub type e1 from)))\n                     ((can-subst-Expr-beneath above new-from (bsub type e1 to)))\n                    :ruleset subst)\n                     \n\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (bmul type from e2)))\n                     ((can-subst-Expr-beneath above new-from (bmul type to e2)))\n                    :ruleset subst)\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (bmul type e1 from)))\n                     ((can-subst-Expr-beneath above new-from (bmul type e1 to)))\n                    :ruleset subst)\n                     \n\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (bdiv type from e2)))\n                     ((can-subst-Expr-beneath above new-from (bdiv type to e2)))\n                    :ruleset subst)\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (bdiv type e1 from)))\n                     ((can-subst-Expr-beneath above new-from (bdiv type e1 to)))\n                    :ruleset subst)\n                     \n\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (blt type from e2)))\n                     ((can-subst-Expr-beneath above new-from (blt type to e2)))\n                    :ruleset subst)\n              (rule ((can-subst-Operand-beneath above from to)\n                      (= new-from (blt type e1 from)))\n                     ((can-subst-Expr-beneath above new-from (blt type e1 to)))\n                    :ruleset subst)\n                     \n\n          (rule ((can-subst-Operand-beneath above from to)\n                 (= from (VecOperand-get (VO vec) i)))\n                ((can-subst-VecOperand-beneath\n                    above\n                    (VO vec)\n                    (VO (vec-set vec i to))))\n                :ruleset subst)\n\n          (rule ((can-subst-VecOperand-beneath above from to)\n                 (= from (VecVecOperand-get (VVO vec) i)))\n                ((can-subst-VecVecOperand-beneath\n                    above\n                    (VVO vec)\n                    (VVO (vec-set vec i to))))\n                :ruleset subst)\n(constructor SubstExpr (Expr i64 Operand) Expr :unextractable)\n(constructor SubstOperand (Operand i64 Operand) Operand :unextractable)\n(constructor SubstBody (Body i64 Operand) Body :unextractable)\n(constructor SubstVecOperand (VecOperand i64 Operand) VecOperand :unextractable)\n(constructor SubstVecVecOperand (VecVecOperand i64 Operand) VecVecOperand :unextractable)\n\n                (rewrite\n                    (SubstExpr (badd ty a b) x0 x1)\n                    (badd\n                        ty\n                        (SubstOperand a x0 x1)\n                        (SubstOperand b x0 x1))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExpr (bsub ty a b) x0 x1)\n                    (bsub\n                        ty\n                        (SubstOperand a x0 x1)\n                        (SubstOperand b x0 x1))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExpr (bmul ty a b) x0 x1)\n                    (bmul\n                        ty\n                        (SubstOperand a x0 x1)\n                        (SubstOperand b x0 x1))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExpr (bdiv ty a b) x0 x1)\n                    (bdiv\n                        ty\n                        (SubstOperand a x0 x1)\n                        (SubstOperand b x0 x1))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExpr (blt ty a b) x0 x1)\n                    (blt\n                        ty\n                        (SubstOperand a x0 x1)\n                        (SubstOperand b x0 x1))\n                    :ruleset subst)\n                     \n\n        (rewrite\n            (SubstExpr (Const ty ops lit) x0 x1)\n            (Const ty ops lit)\n            :ruleset subst)\n        (rewrite\n            (SubstExpr (Call ty f args n-outs) x0 x1)\n            (Call ty f (SubstVecOperand args x0 x1) n-outs)\n            :ruleset subst)\n        (rewrite\n            (SubstExpr (PRINT a b) x0 x1)\n            (PRINT (SubstOperand a x0 x1) (SubstOperand b x0 x1))\n            :ruleset subst)\n\n        (rewrite (SubstOperand (Arg x) x v) v :ruleset subst)\n        (rule ((= f (SubstOperand (Arg y) x v)) (!= y x))\n              ((union f (Arg y))) :ruleset subst)\n\n        (rewrite\n            (SubstOperand (Node b) x0 x1)\n            (Node (SubstBody b x0 x1))\n            :ruleset subst)\n        (rewrite\n            (SubstOperand (Project i b) x0 x1)\n            (Project i (SubstBody b x0 x1))\n            :ruleset subst)\n\n        (rewrite\n            (SubstBody (PureOp e) x0 x1)\n            (PureOp (SubstExpr e x0 x1))\n            :ruleset subst)\n        ;; Don't cross regions, so so we shift into the inputs but not outputs\n        ;; A Gamma's pred is on the outside, so it's affected, but not a Theta's\n        (rewrite\n            (SubstBody (Gamma pred inputs outputs) x0 x1)\n            (Gamma\n                (SubstOperand pred x0 x1)\n                (SubstVecOperand inputs x0 x1)\n                outputs)\n            :ruleset subst)\n        (rewrite\n            (SubstBody (Theta pred inputs outputs) x0 x1)\n            (Theta pred (SubstVecOperand inputs x0 x1) outputs)\n            :ruleset subst)\n\n            (constructor SubstVecOperand-helper (VecOperand i64 Operand i64) VecOperand)\n            (rewrite\n                (SubstVecOperand vec x0 x1)\n                (SubstVecOperand-helper vec x0 x1 0)\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecOperand-helper (VO vec) x0 x1 i))\n                 (< i (vec-length vec)))\n                ((union\n                    (SubstVecOperand-helper (VO vec) x0 x1 i)\n                    (SubstVecOperand-helper\n                        (VO (vec-set vec i (SubstOperand (vec-get vec i) x0 x1)))\n                        x0 x1 (+ i 1))))\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecOperand-helper (VO vec) x0 x1 i))\n                 (= i (vec-length vec)))\n                ((union\n                    (SubstVecOperand-helper (VO vec) x0 x1 i)\n                    (VO vec)))\n                :ruleset subst)\n\n            (constructor SubstVecVecOperand-helper (VecVecOperand i64 Operand i64) VecVecOperand)\n            (rewrite\n                (SubstVecVecOperand vec x0 x1)\n                (SubstVecVecOperand-helper vec x0 x1 0)\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecVecOperand-helper (VVO vec) x0 x1 i))\n                 (< i (vec-length vec)))\n                ((union\n                    (SubstVecVecOperand-helper (VVO vec) x0 x1 i)\n                    (SubstVecVecOperand-helper\n                        (VVO (vec-set vec i (SubstVecOperand (vec-get vec i) x0 x1)))\n                        x0 x1 (+ i 1))))\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecVecOperand-helper (VVO vec) x0 x1 i))\n                 (= i (vec-length vec)))\n                ((union\n                    (SubstVecVecOperand-helper (VVO vec) x0 x1 i)\n                    (VVO vec)))\n                :ruleset subst)\n(constructor SubstExprAll (Expr VecOperand) Expr :unextractable)\n(constructor SubstOperandAll (Operand VecOperand) Operand :unextractable)\n(constructor SubstBodyAll (Body VecOperand) Body :unextractable)\n(constructor SubstVecOperandAll (VecOperand VecOperand) VecOperand :unextractable)\n(constructor SubstVecVecOperandAll (VecVecOperand VecOperand) VecVecOperand :unextractable)\n\n                (rewrite\n                    (SubstExprAll (badd ty a b) x0)\n                    (badd\n                        ty\n                        (SubstOperandAll a x0)\n                        (SubstOperandAll b x0))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExprAll (bsub ty a b) x0)\n                    (bsub\n                        ty\n                        (SubstOperandAll a x0)\n                        (SubstOperandAll b x0))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExprAll (bmul ty a b) x0)\n                    (bmul\n                        ty\n                        (SubstOperandAll a x0)\n                        (SubstOperandAll b x0))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExprAll (bdiv ty a b) x0)\n                    (bdiv\n                        ty\n                        (SubstOperandAll a x0)\n                        (SubstOperandAll b x0))\n                    :ruleset subst)\n                     \n\n                (rewrite\n                    (SubstExprAll (blt ty a b) x0)\n                    (blt\n                        ty\n                        (SubstOperandAll a x0)\n                        (SubstOperandAll b x0))\n                    :ruleset subst)\n                     \n\n        (rewrite\n            (SubstExprAll (Const ty ops lit) x0)\n            (Const ty ops lit)\n            :ruleset subst)\n        (rewrite\n            (SubstExprAll (Call ty f args n-outs) x0)\n            (Call ty f (SubstVecOperandAll args x0) n-outs)\n            :ruleset subst)\n        (rewrite\n            (SubstExprAll (PRINT a b) x0)\n            (PRINT (SubstOperandAll a x0) (SubstOperandAll b x0))\n            :ruleset subst)\n\n        (rule ((= f (SubstOperandAll (Arg x) (VO ops)))\n               (< x (vec-length ops)))\n              ((union f (vec-get ops x))) :ruleset subst)\n\n        (rewrite\n            (SubstOperandAll (Node b) x0)\n            (Node (SubstBodyAll b x0))\n            :ruleset subst)\n        (rewrite\n            (SubstOperandAll (Project i b) x0)\n            (Project i (SubstBodyAll b x0))\n            :ruleset subst)\n\n        (rewrite\n            (SubstBodyAll (PureOp e) x0)\n            (PureOp (SubstExprAll e x0))\n            :ruleset subst)\n        ;; Don't cross regions, so so we shift into the inputs but not outputs\n        ;; A Gamma's pred is on the outside, so it's affected, but not a Theta's\n        (rewrite\n            (SubstBodyAll (Gamma pred inputs outputs) x0)\n            (Gamma\n                (SubstOperandAll pred x0)\n                (SubstVecOperandAll inputs x0)\n                outputs)\n            :ruleset subst)\n        (rewrite\n            (SubstBodyAll (Theta pred inputs outputs) x0)\n            (Theta pred (SubstVecOperandAll inputs x0) outputs)\n            :ruleset subst)\n\n            (constructor SubstVecOperandAll-helper (VecOperand VecOperand i64) VecOperand)\n            (rewrite\n                (SubstVecOperandAll vec x0)\n                (SubstVecOperandAll-helper vec x0 0)\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecOperandAll-helper (VO vec) x0 i))\n                 (< i (vec-length vec)))\n                ((union\n                    (SubstVecOperandAll-helper (VO vec) x0 i)\n                    (SubstVecOperandAll-helper\n                        (VO (vec-set vec i (SubstOperandAll (vec-get vec i) x0)))\n                        x0 (+ i 1))))\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecOperandAll-helper (VO vec) x0 i))\n                 (= i (vec-length vec)))\n                ((union\n                    (SubstVecOperandAll-helper (VO vec) x0 i)\n                    (VO vec)))\n                :ruleset subst)\n\n            (constructor SubstVecVecOperandAll-helper (VecVecOperand VecOperand i64) VecVecOperand)\n            (rewrite\n                (SubstVecVecOperandAll vec x0)\n                (SubstVecVecOperandAll-helper vec x0 0)\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecVecOperandAll-helper (VVO vec) x0 i))\n                 (< i (vec-length vec)))\n                ((union\n                    (SubstVecVecOperandAll-helper (VVO vec) x0 i)\n                    (SubstVecVecOperandAll-helper\n                        (VVO (vec-set vec i (SubstVecOperandAll (vec-get vec i) x0)))\n                        x0 (+ i 1))))\n                :ruleset subst)\n            (rule\n                ((= f (SubstVecVecOperandAll-helper (VVO vec) x0 i))\n                 (= i (vec-length vec)))\n                ((union\n                    (SubstVecVecOperandAll-helper (VVO vec) x0 i)\n                    (VVO vec)))\n                :ruleset subst)\n(constructor ShiftExpr (Expr i64 i64) Expr :unextractable)\n(constructor ShiftOperand (Operand i64 i64) Operand :unextractable)\n(constructor ShiftBody (Body i64 i64) Body :unextractable)\n(constructor ShiftVecOperand (VecOperand i64 i64) VecOperand :unextractable)\n(constructor ShiftVecVecOperand (VecVecOperand i64 i64) VecVecOperand :unextractable)\n\n                (rewrite\n                    (ShiftExpr (badd ty a b) x0 x1)\n                    (badd\n                        ty\n                        (ShiftOperand a x0 x1)\n                        (ShiftOperand b x0 x1))\n                    :ruleset shift)\n                     \n\n                (rewrite\n                    (ShiftExpr (bsub ty a b) x0 x1)\n                    (bsub\n                        ty\n                        (ShiftOperand a x0 x1)\n                        (ShiftOperand b x0 x1))\n                    :ruleset shift)\n                     \n\n                (rewrite\n                    (ShiftExpr (bmul ty a b) x0 x1)\n                    (bmul\n                        ty\n                        (ShiftOperand a x0 x1)\n                        (ShiftOperand b x0 x1))\n                    :ruleset shift)\n                     \n\n                (rewrite\n                    (ShiftExpr (bdiv ty a b) x0 x1)\n                    (bdiv\n                        ty\n                        (ShiftOperand a x0 x1)\n                        (ShiftOperand b x0 x1))\n                    :ruleset shift)\n                     \n\n                (rewrite\n                    (ShiftExpr (blt ty a b) x0 x1)\n                    (blt\n                        ty\n                        (ShiftOperand a x0 x1)\n                        (ShiftOperand b x0 x1))\n                    :ruleset shift)\n                     \n\n        (rewrite\n            (ShiftExpr (Const ty ops lit) x0 x1)\n            (Const ty ops lit)\n            :ruleset shift)\n        (rewrite\n            (ShiftExpr (Call ty f args n-outs) x0 x1)\n            (Call ty f (ShiftVecOperand args x0 x1) n-outs)\n            :ruleset shift)\n        (rewrite\n            (ShiftExpr (PRINT a b) x0 x1)\n            (PRINT (ShiftOperand a x0 x1) (ShiftOperand b x0 x1))\n            :ruleset shift)\n\n        (rule ((= f (ShiftOperand (Arg x) last-unshifted amt)) (<= x last-unshifted))\n              ((union f (Arg x))) :ruleset shift)\n        (rule ((= f (ShiftOperand (Arg x) last-unshifted amt)) (> x last-unshifted))\n              ((union f (Arg (+ x amt)))) :ruleset shift)\n\n        (rewrite\n            (ShiftOperand (Node b) x0 x1)\n            (Node (ShiftBody b x0 x1))\n            :ruleset shift)\n        (rewrite\n            (ShiftOperand (Project i b) x0 x1)\n            (Project i (ShiftBody b x0 x1))\n            :ruleset shift)\n\n        (rewrite\n            (ShiftBody (PureOp e) x0 x1)\n            (PureOp (ShiftExpr e x0 x1))\n            :ruleset shift)\n        ;; Don't cross regions, so so we shift into the inputs but not outputs\n        ;; A Gamma's pred is on the outside, so it's affected, but not a Theta's\n        (rewrite\n            (ShiftBody (Gamma pred inputs outputs) x0 x1)\n            (Gamma\n                (ShiftOperand pred x0 x1)\n                (ShiftVecOperand inputs x0 x1)\n                outputs)\n            :ruleset shift)\n        (rewrite\n            (ShiftBody (Theta pred inputs outputs) x0 x1)\n            (Theta pred (ShiftVecOperand inputs x0 x1) outputs)\n            :ruleset shift)\n\n            (constructor ShiftVecOperand-helper (VecOperand i64 i64 i64) VecOperand)\n            (rewrite\n                (ShiftVecOperand vec x0 x1)\n                (ShiftVecOperand-helper vec x0 x1 0)\n                :ruleset shift)\n            (rule\n                ((= f (ShiftVecOperand-helper (VO vec) x0 x1 i))\n                 (< i (vec-length vec)))\n                ((union\n                    (ShiftVecOperand-helper (VO vec) x0 x1 i)\n                    (ShiftVecOperand-helper\n                        (VO (vec-set vec i (ShiftOperand (vec-get vec i) x0 x1)))\n                        x0 x1 (+ i 1))))\n                :ruleset shift)\n            (rule\n                ((= f (ShiftVecOperand-helper (VO vec) x0 x1 i))\n                 (= i (vec-length vec)))\n                ((union\n                    (ShiftVecOperand-helper (VO vec) x0 x1 i)\n                    (VO vec)))\n                :ruleset shift)\n\n            (constructor ShiftVecVecOperand-helper (VecVecOperand i64 i64 i64) VecVecOperand)\n            (rewrite\n                (ShiftVecVecOperand vec x0 x1)\n                (ShiftVecVecOperand-helper vec x0 x1 0)\n                :ruleset shift)\n            (rule\n                ((= f (ShiftVecVecOperand-helper (VVO vec) x0 x1 i))\n                 (< i (vec-length vec)))\n                ((union\n                    (ShiftVecVecOperand-helper (VVO vec) x0 x1 i)\n                    (ShiftVecVecOperand-helper\n                        (VVO (vec-set vec i (ShiftVecOperand (vec-get vec i) x0 x1)))\n                        x0 x1 (+ i 1))))\n                :ruleset shift)\n            (rule\n                ((= f (ShiftVecVecOperand-helper (VVO vec) x0 x1 i))\n                 (= i (vec-length vec)))\n                ((union\n                    (ShiftVecVecOperand-helper (VVO vec) x0 x1 i)\n                    (VVO vec)))\n                :ruleset shift)\n;; ####################################\n;; implementation of PassThroughArguments\n;; Creates a vec of arguments\n;; (vec-of (Arg 0) (Arg 1) ...) with length i\n(constructor PassThroughArguments (i64) VecOperand :unextractable)\n\n\n\n;; (how many arguments to generate, vector so far)\n(constructor PassThroughArgumentsHelper (i64 VecOperand) VecOperand :unextractable)\n\n(rewrite (PassThroughArguments i)\n  (PassThroughArgumentsHelper i (VO (vec-of)))\n  :ruleset subst)\n\n(rule ((= lhs (PassThroughArgumentsHelper i (VO rest)))\n       (< (vec-length rest) i))\n      ((union lhs\n        (PassThroughArgumentsHelper i\n            (VO (vec-push rest (Arg (vec-length rest)))))))\n      :ruleset subst)\n\n(rule ((= lhs (PassThroughArgumentsHelper i (VO rest)))\n       (= (vec-length rest) i))\n      ((union lhs (VO rest)))\n      :ruleset subst)\n\n\n\n;; Project each argument out of a body\n(constructor BodyToVecOperand (i64 Body) VecOperand :unextractable)\n;; current index, body length, body, and vector so far\n(constructor BodyToVecOperandHelper (i64 i64 Body VecOperandBase) VecOperand :unextractable)\n\n(rewrite (BodyToVecOperand body-len body)\n         (BodyToVecOperandHelper 0 body-len body (vec-of)))\n(rule\n  ((= helper (BodyToVecOperandHelper index body-len body so-far))\n   (< index body-len))\n  ((union helper\n          (BodyToVecOperandHelper (+ index 1) body-len body\n                                  (vec-push so-far \n                                   (Project index body)))))\n  :ruleset subst)\n\n(rule\n  ((= helper (BodyToVecOperandHelper index body-len body so-far))\n   (= index body-len))\n  ((union helper (VO so-far)))\n  :ruleset subst)\n\n\n\n;; constant_fold.rs adds most constant folding operations\n;; this file is for special cases\n\n\n;; eliminate gamma nodes for true and false cases\n(rule ((= gamma\n          ;; gamma predicate is true\n          (Gamma (Node (PureOp (Const (BoolT) (const) (Bool true))))\n                 inputs\n                 (VVO outputs))))\n      (\n        ;; replace use of the gamma with\n        ;; the true case\n        (union\n          gamma\n          (OperandGroup\n              (SubstVecOperandAll\n                (vec-get outputs 1)\n                inputs)))))\n\n\n\n(rule ((= gamma\n          ;; gamma predicate is false\n          (Gamma (Node (PureOp (Const (BoolT) (const) (Bool false))))\n                 inputs\n                 (VVO outputs))))\n      (\n        ;; replace use of the gamma with\n        ;; the false case\n        (union\n          gamma\n          (OperandGroup\n              (SubstVecOperandAll (vec-get outputs 0) inputs)))))\n\n;; Eliminate theta\n;; Unroll one layer and get rid of loop\n(rule ((= theta\n          ;; gamma predicate is false\n          (Theta (Node (PureOp (Const (BoolT) (const) (Bool false))))\n                 (VO inputs)\n                 (VO outputs))))\n      ((let after-one-iter (SubstVecOperandAll (VO outputs) (VO inputs)))\n       (union theta\n          (OperandGroup after-one-iter))))\n\n\n\n\n\n(rewrite (badd output_type\n                    (Node (PureOp (Const ty2 (const) (Num n1))))\n                    (Node (PureOp (Const ty3 (const) (Num n2)))))\n                  (Const output_type (const) (Num (+ n1 n2))))\n(rewrite (bsub output_type\n                    (Node (PureOp (Const ty2 (const) (Num n1))))\n                    (Node (PureOp (Const ty3 (const) (Num n2)))))\n                  (Const output_type (const) (Num (- n1 n2))))\n(rewrite (bmul output_type\n                    (Node (PureOp (Const ty2 (const) (Num n1))))\n                    (Node (PureOp (Const ty3 (const) (Num n2)))))\n                  (Const output_type (const) (Num (* n1 n2))))\n(rewrite (bdiv output_type\n                    (Node (PureOp (Const ty2 (const) (Num n1))))\n                    (Node (PureOp (Const ty3 (const) (Num n2)))))\n                  (Const output_type (const) (Num (/ n1 n2))))\n(rewrite (blt output_type\n                  (Node (PureOp (Const ty2 (const) (Num n1))))\n                  (Node (PureOp (Const ty3 (const) (Num n2)))))\n                (Const output_type (const) (Bool (bool-< n1 n2))))\n(sort TermAndCost)\n(constructor Smaller (TermAndCost TermAndCost) TermAndCost)\n\n;; manual, bottom-up extraction of terms using this function\n(function ExtractedExpr (Expr) TermAndCost\n            :merge (Smaller old new))\n;; Store a term and its cost for this type\n(constructor ExprAndCost (Expr i64) TermAndCost)\n\n;; Perform smaller using the next two rules\n(rule ((= lhs (Smaller (ExprAndCost t1 cost1)\n                       (ExprAndCost t2 cost2)))\n       (<= cost1 cost2))\n      ((union lhs (ExprAndCost t1 cost1)))\n       :ruleset fast-analyses)\n  \n(rule ((= lhs (Smaller (ExprAndCost t1 cost1)\n                       (ExprAndCost t2 cost2)))\n       (> cost1 cost2))\n      ((union lhs (ExprAndCost t2 cost2)))\n       :ruleset fast-analyses)\n\n\n;; manual, bottom-up extraction of terms using this function\n(function ExtractedOperand (Operand) TermAndCost\n            :merge (Smaller old new))\n;; Store a term and its cost for this type\n(constructor OperandAndCost (Operand i64) TermAndCost)\n\n;; Perform smaller using the next two rules\n(rule ((= lhs (Smaller (OperandAndCost t1 cost1)\n                       (OperandAndCost t2 cost2)))\n       (<= cost1 cost2))\n      ((union lhs (OperandAndCost t1 cost1)))\n       :ruleset fast-analyses)\n  \n(rule ((= lhs (Smaller (OperandAndCost t1 cost1)\n                       (OperandAndCost t2 cost2)))\n       (> cost1 cost2))\n      ((union lhs (OperandAndCost t2 cost2)))\n       :ruleset fast-analyses)\n\n\n;; manual, bottom-up extraction of terms using this function\n(function ExtractedBody (Body) TermAndCost\n            :merge (Smaller old new))\n;; Store a term and its cost for this type\n(constructor BodyAndCost (Body i64) TermAndCost)\n\n;; Perform smaller using the next two rules\n(rule ((= lhs (Smaller (BodyAndCost t1 cost1)\n                       (BodyAndCost t2 cost2)))\n       (<= cost1 cost2))\n      ((union lhs (BodyAndCost t1 cost1)))\n       :ruleset fast-analyses)\n  \n(rule ((= lhs (Smaller (BodyAndCost t1 cost1)\n                       (BodyAndCost t2 cost2)))\n       (> cost1 cost2))\n      ((union lhs (BodyAndCost t2 cost2)))\n       :ruleset fast-analyses)\n\n\n;; manual, bottom-up extraction of terms using this function\n(function ExtractedVecOperand (VecOperand) TermAndCost\n            :merge (Smaller old new))\n;; Store a term and its cost for this type\n(constructor VecOperandAndCost (VecOperand i64) TermAndCost)\n\n;; Perform smaller using the next two rules\n(rule ((= lhs (Smaller (VecOperandAndCost t1 cost1)\n                       (VecOperandAndCost t2 cost2)))\n       (<= cost1 cost2))\n      ((union lhs (VecOperandAndCost t1 cost1)))\n       :ruleset fast-analyses)\n  \n(rule ((= lhs (Smaller (VecOperandAndCost t1 cost1)\n                       (VecOperandAndCost t2 cost2)))\n       (> cost1 cost2))\n      ((union lhs (VecOperandAndCost t2 cost2)))\n       :ruleset fast-analyses)\n\n\n;; manual, bottom-up extraction of terms using this function\n(function ExtractedVecVecOperand (VecVecOperand) TermAndCost\n            :merge (Smaller old new))\n;; Store a term and its cost for this type\n(constructor VecVecOperandAndCost (VecVecOperand i64) TermAndCost)\n\n;; Perform smaller using the next two rules\n(rule ((= lhs (Smaller (VecVecOperandAndCost t1 cost1)\n                       (VecVecOperandAndCost t2 cost2)))\n       (<= cost1 cost2))\n      ((union lhs (VecVecOperandAndCost t1 cost1)))\n       :ruleset fast-analyses)\n  \n(rule ((= lhs (Smaller (VecVecOperandAndCost t1 cost1)\n                       (VecVecOperandAndCost t2 cost2)))\n       (> cost1 cost2))\n      ((union lhs (VecVecOperandAndCost t2 cost2)))\n       :ruleset fast-analyses)\n\n\n(rule ((= lhs (badd ty a b))\n       (= (OperandAndCost expr1 cost1) (ExtractedOperand a))\n       (= (OperandAndCost expr2 cost2) (ExtractedOperand b)))\n      ((set (ExtractedExpr lhs)\n            (ExprAndCost (badd ty expr1 expr2)\n                         (+ 1 (+ cost1 cost2)))))\n        :ruleset fast-analyses)\n\n\n(rule ((= lhs (bsub ty a b))\n       (= (OperandAndCost expr1 cost1) (ExtractedOperand a))\n       (= (OperandAndCost expr2 cost2) (ExtractedOperand b)))\n      ((set (ExtractedExpr lhs)\n            (ExprAndCost (bsub ty expr1 expr2)\n                         (+ 1 (+ cost1 cost2)))))\n        :ruleset fast-analyses)\n\n\n(rule ((= lhs (bmul ty a b))\n       (= (OperandAndCost expr1 cost1) (ExtractedOperand a))\n       (= (OperandAndCost expr2 cost2) (ExtractedOperand b)))\n      ((set (ExtractedExpr lhs)\n            (ExprAndCost (bmul ty expr1 expr2)\n                         (+ 1 (+ cost1 cost2)))))\n        :ruleset fast-analyses)\n\n\n(rule ((= lhs (bdiv ty a b))\n       (= (OperandAndCost expr1 cost1) (ExtractedOperand a))\n       (= (OperandAndCost expr2 cost2) (ExtractedOperand b)))\n      ((set (ExtractedExpr lhs)\n            (ExprAndCost (bdiv ty expr1 expr2)\n                         (+ 1 (+ cost1 cost2)))))\n        :ruleset fast-analyses)\n\n\n(rule ((= lhs (blt ty a b))\n       (= (OperandAndCost expr1 cost1) (ExtractedOperand a))\n       (= (OperandAndCost expr2 cost2) (ExtractedOperand b)))\n      ((set (ExtractedExpr lhs)\n            (ExprAndCost (blt ty expr1 expr2)\n                         (+ 1 (+ cost1 cost2)))))\n        :ruleset fast-analyses)\n\n\n(rule ((= lhs (PRINT a b))\n        (= (OperandAndCost expr1 cost1) (ExtractedOperand a))\n        (= (OperandAndCost expr2 cost2) (ExtractedOperand b)))\n      ((set (ExtractedExpr lhs)\n            (ExprAndCost (PRINT expr1 expr2)\n                         (+ 1 (+ cost1 cost2)))))\n      :ruleset fast-analyses)\n\n;; TODO fix this HACK\n;; this is how we get an empty vector of vectors in egglog because of\n;; typechecking bug in egglog https://github.com/egraphs-good/egglog/issues/113\n(let empty-vvo \n  (vec-pop (vec-of (VO (vec-of)))))\n\n\n(function ExtractedVecOperandHelper (VecOperand i64) TermAndCost :merge (Smaller old new))\n\n;; base case: extract nothing\n(rule\n   ((VO vec))\n   ((set (ExtractedVecOperandHelper (VO vec) 0)\n         (VecOperandAndCost (VO (vec-of)) 0)))\n    :ruleset fast-analyses)\n\n;; extract one more thing\n(rule\n   ((= (VecOperandAndCost (VO current) current-cost)\n       (ExtractedVecOperandHelper (VO vec) index))\n    (< index (vec-length vec))\n    (= (ExtractedOperand (VecOperand-get (VO vec) index)) (OperandAndCost expr expr-cost)))\n   ((set (ExtractedVecOperandHelper (VO vec) (+ index 1))\n         (VecOperandAndCost\n             (VO (vec-push current expr))\n             (+ current-cost expr-cost))))\n    :ruleset fast-analyses)\n    \n\n            \n;; finished extracting, create result\n(rule\n  ((= result\n      (ExtractedVecOperandHelper (VO vec) index))\n   ;; at the end\n   (= index (vec-length vec)))\n  ((set (ExtractedVecOperand (VO vec))\n        result))\n  :ruleset fast-analyses)\n      \n\n(function ExtractedVecVecOperandHelper (VecVecOperand i64) TermAndCost :merge (Smaller old new))\n\n;; base case: extract nothing\n(rule\n   ((VVO vec))\n   ((set (ExtractedVecVecOperandHelper (VVO vec) 0)\n         (VecVecOperandAndCost (VVO empty-vvo) 0)))\n    :ruleset fast-analyses)\n\n;; extract one more thing\n(rule\n   ((= (VecVecOperandAndCost (VVO current) current-cost)\n       (ExtractedVecVecOperandHelper (VVO vec) index))\n    (< index (vec-length vec))\n    (= (ExtractedVecOperand (VecVecOperand-get (VVO vec) index)) (VecOperandAndCost expr expr-cost)))\n   ((set (ExtractedVecVecOperandHelper (VVO vec) (+ index 1))\n         (VecVecOperandAndCost\n             (VVO (vec-push current expr))\n             (+ current-cost expr-cost))))\n    :ruleset fast-analyses)\n    \n\n            \n;; finished extracting, create result\n(rule\n  ((= result\n      (ExtractedVecVecOperandHelper (VVO vec) index))\n   ;; at the end\n   (= index (vec-length vec)))\n  ((set (ExtractedVecVecOperand (VVO vec))\n        result))\n  :ruleset fast-analyses)\n      \n\n;; Constant gets cost of 1\n(rule\n  ((= lhs (Const ty ops lit)))\n  ((set (ExtractedExpr lhs) (ExprAndCost lhs 1)))\n  :ruleset fast-analyses)\n\n;; arg gets cost of 1\n(rule\n  ((= lhs (Arg index)))\n  ((set (ExtractedOperand lhs) (OperandAndCost lhs 1)))\n  :ruleset fast-analyses)\n\n\n;; PureOp doesn't add cost\n(rule\n  ((= lhs (PureOp expr))\n   (= (ExprAndCost expr-extracted expr-cost)\n      (ExtractedExpr expr)))\n   ((set (ExtractedBody lhs) (BodyAndCost (PureOp expr-extracted) expr-cost)))\n    :ruleset fast-analyses)\n\n;; Nor does Node\n(rule\n  ((= lhs (Node body))\n   (= (BodyAndCost body-extracted body-cost)\n      (ExtractedBody body)))\n   ((set (ExtractedOperand lhs) (OperandAndCost (Node body-extracted) body-cost)))\n    :ruleset fast-analyses)\n\n;; Theta gets a cost of 1 for now\n(rule\n  ((= lhs (Theta pred inputs outputs))\n   (= (OperandAndCost pred-extracted pred-cost)\n      (ExtractedOperand pred))\n   (= (VecOperandAndCost inputs-extracted inputs-cost)\n      (ExtractedVecOperand inputs))\n   (= (VecOperandAndCost outputs-extracted outputs-cost)\n      (ExtractedVecOperand outputs)))\n   ((set (ExtractedBody lhs)\n         (BodyAndCost\n            (Theta pred-extracted inputs-extracted outputs-extracted)\n            (+ 1 (+ pred-cost (+ inputs-cost outputs-cost))))))\n    :ruleset fast-analyses)\n\n;; Gamma gets a cost of 1 for now\n(rule\n  ((= lhs (Gamma pred inputs outputs))\n   (= (OperandAndCost pred-extracted pred-cost)\n      (ExtractedOperand pred))\n   (= (VecOperandAndCost inputs-extracted inputs-cost)\n      (ExtractedVecOperand inputs))\n   (= (VecVecOperandAndCost outputs-extracted outputs-cost)\n      (ExtractedVecVecOperand outputs)))\n  ((set (ExtractedBody lhs)\n        (BodyAndCost\n          (Gamma pred-extracted inputs-extracted outputs-extracted)\n          (+ 1 (+ pred-cost (+ inputs-cost outputs-cost))))))\n    :ruleset fast-analyses)\n\n\n;; Project is also free\n(rule ((= lhs (Project index body))\n       (= (BodyAndCost body-extracted body-cost)\n          (ExtractedBody body)))\n      ((set (ExtractedOperand lhs)\n            (OperandAndCost (Project index body-extracted) body-cost)))\n      :ruleset fast-analyses)\n        \n\n\n;; If a theta passes along argument,\n;; can extract the input instead.\n(rule ((= lhs (Project index loop))\n        (= loop (Theta pred inputs outputs))\n        (= (VecOperand-get outputs index) (Arg index))\n        (= passedthrough (ExtractedOperand (VecOperand-get inputs index)))\n      )\n      ((set (ExtractedOperand lhs) passedthrough))\n      :ruleset fast-analyses)\n\n;; If a gamma passes along an argument in both branches,\n;; extract the input instead.\n(rule ((= lhs (Project index loop))\n       (= loop (Gamma pred inputs outputs))\n       (= outputs (VVO outputs-inner))\n       (= 2 (vec-length outputs-inner))\n       (= outputs0 (VecVecOperand-get outputs 0))\n       (= outputs1 (VecVecOperand-get outputs 1))\n       (= (VecOperand-get outputs0 index) (Arg index))\n       (= (VecOperand-get outputs1 index) (Arg index))\n       (= passedthrough (ExtractedOperand (VecOperand-get inputs index))))\n      ((set (ExtractedOperand lhs) passedthrough))\n      :ruleset fast-analyses)\n\n\n;; if we reach a new context, union\n(rule ((= theta (Theta pred inputs outputs))\n       (= (BodyAndCost extracted cost)\n          (ExtractedBody theta)))\n      ((union theta extracted))\n      :ruleset fast-analyses)\n(rule ((= gamma (Gamma pred inputs outputs))\n       (= (BodyAndCost extracted cost)\n          (ExtractedBody gamma)))\n      ((union gamma extracted))\n      :ruleset fast-analyses)\n\n\n;; if we reach the function at the top level, union\n(rule ((= func (Func name intypes outtypes body))\n       (= (VecOperandAndCost extracted cost)\n          (ExtractedVecOperand body)))\n      ((union func\n              (Func name intypes outtypes extracted)))\n      :ruleset fast-analyses)\n        \n;;\tif a && b:\n;;\t\tA\n;;\telse:\n;;\t\tB\n;; ----------\n;;\tif a:\n;;\t\tif b:\n;;\t\t\tA\n;;\t\telse:\n;;\t\t\tB\n;;\telse:\n;;\t\tB\n(rule ((= gamma (Gamma (Node (PureOp (band (BoolT) a b))) (VO inputs) (VVO outputs)))\n       (= (vec-length outputs) 2)\n       (= (vec-get outputs 1) (VO A))\n       (= (vec-get outputs 0) (VO B))\n       (= args (vec-length inputs))\n       (= rets (vec-length B)))\n      ((let inner (Gamma (Arg args) ; we pass b as an extra argument to the outer gamma\n                         (PassThroughArguments args)\n                         (VVO (vec-of (VO B)\n                                      (VO A)))))\n       (union gamma (Gamma a\n                           (VO (vec-push inputs b)) ; pass b as an extra argument\n                           (VVO (vec-of (VO B)\n                                        (BodyToVecOperand rets inner)))))))\n\n;;\tif a || b:\n;;\t\tA\n;;\telse:\n;;\t\tB\n;; -----------\n;;\tif a:\n;;\t\tA\n;;\telse:\n;;\t\tif b:\n;;\t\t\tA\n;;\t\telse:\n;;\t\t\tB\n(rule ((= gamma (Gamma (Node (PureOp (bor (BoolT) a b))) (VO inputs) (VVO outputs)))\n       (= (vec-length outputs) 2)\n       (= (vec-get outputs 1) (VO A))\n       (= (vec-get outputs 0) (VO B))\n       (= args (vec-length inputs))\n       (= rets (vec-length B)))\n      ((let inner (Gamma (Arg args) ; we pass b as an extra argument to the outer gamma\n                         (PassThroughArguments args)\n                         (VVO (vec-of (VO B)\n                                      (VO A)))))\n       (union gamma (Gamma a\n                           (VO (vec-push inputs b)) ; pass b as an extra argument\n                           (VVO (vec-of (BodyToVecOperand rets inner)\n                                        (VO A)))))))\n\n;;\tif a:\n;;\t\tA\n;;\telse:\n;;\t\tA\n;; ------\n;;\tA\n(rule ((= gamma (Gamma condition inputs (VVO outputs)))\n       (= (vec-length outputs) 2)\n       (= (vec-get outputs 0) (vec-get outputs 1)))\n      ((union gamma (OperandGroup (SubstVecOperandAll (vec-get outputs 0) inputs)))))\n\n\n;; unroll loops\n(rule ((= theta (Theta pred (VO inputs) (VO outputs))))\n                          ;;            arguments body\n      ((let after-one-iter\n         (SubstVecOperandAll (VO outputs) (VO inputs)))\n       ;; (vec-of (Arg 0) (Arg 1) ...)\n       (let pass-through (PassThroughArguments (vec-length outputs)))\n       (union theta\n          (Gamma\n            (SubstOperandAll pred after-one-iter)\n            after-one-iter\n            (VVO\n              (vec-of\n                ;; in the false case, we are done\n                pass-through\n                ;; otherwise do the rest of the loop\n                (BodyToVecOperand\n                (vec-length outputs)\n                (Theta pred pass-through\n                            (VO outputs)))))))))\n\n\n\n(datatype Interval\n  (BoolI bool bool)\n  (IntI i64 i64)\n  (interval-intersect Interval Interval)\n  (interval-union Interval Interval))\n\n\n(rewrite (interval-intersect (IntI la ha) (IntI lb hb))\n      (IntI (max la lb) (min ha hb)))\n(rewrite (interval-union (IntI la ha) (IntI lb hb))\n      (IntI (min la lb) (max ha hb)))\n\n(rewrite (interval-intersect (BoolI la ha) (BoolI lb hb))\n      (BoolI (or la lb) (and ha hb)))\n(rewrite (interval-union (BoolI la ha) (BoolI lb hb))\n      (BoolI (and la lb) (or ha hb)))\n\n(function ival (Operand) Interval\n  :merge (interval-intersect old new))\n\n; context-specific intervals (because Args need to have interval analysis but are not globally unique)\n(function context-ival (Operand Body) Interval\n  :merge (interval-intersect old new))\n\n(rule ((= lhs (Node (PureOp (Const (BoolT) (const) (Bool b))))))\n      ((set (ival lhs) (BoolI b b))))\n\n(rule ((= lhs (Node (PureOp (Const (IntT) (const) (Num n))))))\n      ((set (ival lhs) (IntI n n))))\n\n\n; < a b interval (< ha lb) (< la hb)\n(rule ((= lhs (Node (PureOp (blt (BoolT) a b))))\n       (= (IntI la ha) (ival a))\n       (= (IntI lb hb) (ival b)))\n      ((set (ival lhs) (BoolI (bool-< ha lb) (bool-< la hb)))))\n\n; Rule that unions intervals for a gamma\n(rule (\n        (= lhs (Project i (Gamma pred ins (VVO outs))))\n        (= (VO thens) (vec-get outs 1))\n        (= (VO elses) (vec-get outs 0))\n        (= thenival (ival (vec-get thens i)))\n        (= elseival (ival (vec-get elses i)))\n      )\n      (\n        (set (ival lhs) (interval-union thenival elseival))\n      )\n)\n\n; Eliminate gamma with interval analysis\n(rule (\n        (= gamma (Gamma pred inputs (VVO outputs)))\n        (= (BoolI true true) (ival pred))\n      )\n      (\n        (union gamma (OperandGroup (SubstVecOperandAll (vec-get outputs 1) inputs)))\n      )\n)\n(rule (\n        (= gamma (Gamma pred inputs (VVO outputs)))\n        (= (BoolI false false) (ival pred))\n      )\n      (\n        (union gamma (OperandGroup (SubstVecOperandAll (vec-get outputs 0) inputs)))\n      )\n)\n\n(rule  \n    (\n        ; Match on PureOp because all exprs are converted to bodies\n        ; Will refactor Call in the future\n        (= return (PureOp (Call ty name args num)) )\n        (Func name input-types output-types body)\n    )\n    ((\n        union \n        return\n        (OperandGroup (SubstVecOperandAll body args))\n    ))\n)\n\n     (rule\n      ((= num (Node (PureOp (Const (IntT) (const) (Num n1)))))\n       (= lhs (badd (IntT) other num)))\n      ((union lhs (badd (IntT) num other))))\n\n     (rule\n      ((= num (Node (PureOp (Const (IntT) (const) (Num n1)))))\n       (= lhs (bmul (IntT) other num)))\n      ((union lhs (bmul (IntT) num other))))\n\n      (rule\n        ((= lhs (badd (IntT)\n                      (Node (PureOp (badd (IntT) a b)))\n                      c)))\n        ((union lhs\n                (badd (IntT)\n                      a\n                      (Node (PureOp (badd (IntT) b c)))))))\n      \n\n        (rule\n          ((= lhs (badd (IntT)\n                        a\n                        (Node (PureOp (badd (IntT) b c)))))\n           (= b (Node (PureOp (Const (IntT) (const) (Num n1)))))            \n          )\n          ((union lhs\n             (badd (IntT)\n                   b\n                   (Node (PureOp (badd (IntT) a c))))))               \n        )\n      \n\n      (rule\n        ((= lhs (badd (IntT)\n                      a\n                      (Node (PureOp (badd (IntT) b c)))))\n         (= a (Node (PureOp (Const (IntT) (const) (Num n1)))))\n         (= b (Node (PureOp (Const (IntT) (const) (Num n2))))))\n\n        ((union lhs\n          (badd (IntT)\n            (Node (PureOp (Const (IntT) (const) (Num (+ n1 n2)))))\n            c))))      \n\n\n(let v0 \"main\")\n(let v1 (IntT))\n(let v2 (Bril v1))\n(let v3 (PrintState))\n(let v4 (vec-of v2 v2 v3))\n(let v5 (vec-of v3))\n(let v6 1)\n(let v7 2)\n(let v8 (BoolT))\n(let v9 (Arg v6))\n(let v10 4)\n(let v11 (Arg v10))\n(let v12 (blt v8 v9 v11))\n(let v13 (PureOp v12))\n(let v14 (Node v13))\n(let v15 0)\n(let v16 (Arg v15))\n(let v17 (Arg v7))\n(let v18 3)\n(let v19 (Arg v18))\n(let v20 (vec-of v16 v9 v17 v19 v11))\n(let v21 (VO v20))\n(let v22 (const))\n(let v23 (Num v15))\n(let v24 (Const v1 v22 v23))\n(let v25 (PureOp v24))\n(let v26 (Node v25))\n(let v27 (vec-of v16 v9 v26 v17 v19 v11))\n(let v28 (VO v27))\n(let v29 (blt v8 v19 v11))\n(let v30 (PureOp v29))\n(let v31 (Node v30))\n(let v32 5)\n(let v33 (Arg v32))\n(let v34 (vec-of v16 v9 v17 v19 v11 v33))\n(let v35 (VO v34))\n(let v36 (vec-of v16 v9 v17 v26 v19 v11 v33))\n(let v37 (VO v36))\n(let v38 (bmul v1 v9 v11))\n(let v39 (PureOp v38))\n(let v40 (Node v39))\n(let v41 (badd v1 v40 v19))\n(let v42 (PureOp v41))\n(let v43 (Node v42))\n(let v44 (PRINT v43 v16))\n(let v45 (PureOp v44))\n(let v46 (Node v45))\n(let v47 (Num v6))\n(let v48 (Const v1 v22 v47))\n(let v49 (PureOp v48))\n(let v50 (Node v49))\n(let v51 (badd v1 v19 v17))\n(let v52 (PureOp v51))\n(let v53 (Node v52))\n(let v54 (vec-of v46 v9 v17 v50 v53 v11 v33))\n(let v55 (VO v54))\n(let v56 (vec-of v37 v55))\n(let v57 (VVO v56))\n(let v58 (Gamma v31 v35 v57))\n(let v59 (Project v18 v58))\n(let v60 (vec-of v16 v9 v17 v26 v19 v11))\n(let v61 (VO v60))\n(let v62 (Project v15 v58))\n(let v63 (Project v6 v58))\n(let v64 (Project v7 v58))\n(let v65 (Project v10 v58))\n(let v66 (Project v32 v58))\n(let v67 6)\n(let v68 (Project v67 v58))\n(let v69 (vec-of v62 v63 v64 v65 v66 v68))\n(let v70 (VO v69))\n(let v71 (Theta v59 v61 v70))\n(let v72 (Project v15 v71))\n(let v73 (Project v6 v71))\n(let v74 (Project v7 v71))\n(let v75 (badd v1 v73 v74))\n(let v76 (PureOp v75))\n(let v77 (Node v76))\n(let v78 (Project v10 v71))\n(let v79 (Project v32 v71))\n(let v80 (vec-of v72 v77 v50 v74 v78 v79))\n(let v81 (VO v80))\n(let v82 (vec-of v28 v81))\n(let v83 (VVO v82))\n(let v84 (Gamma v14 v21 v83))\n(let v85 (Project v7 v84))\n(let v86 (vec-of v17 v26 v50 v9 v16))\n(let v87 (VO v86))\n(let v88 (Project v15 v84))\n(let v89 (Project v6 v84))\n(let v90 (Project v18 v84))\n(let v91 (Project v10 v84))\n(let v92 (Project v32 v84))\n(let v93 (vec-of v88 v89 v90 v91 v92))\n(let v94 (VO v93))\n(let v95 (Theta v85 v87 v94))\n(let v96 (Project v6 v95))\n(let v97 (Project v15 v95))\n(let v98 (PRINT v96 v97))\n(let v99 (PureOp v98))\n(let v100 (Node v99))\n(let v101 (vec-of v100))\n(let v102 (VO v101))\n(let v103 (Func v0 v4 v5 v102))\n\n(run-schedule\n        ; only repeating twice to reduce benchmark CI performance\n        ; increasing to 3 times will change benchmark time from 4 minutes to 40+ minutes\n        (repeat 2 (saturate fast-analyses)\n                  (run)\n                  (saturate subst)))",
  "eqsat-basic-multiset": ";; Example showing how to use multisets to hold associative & commutative operations\n\n(datatype*\n  (Math\n    (Num i64)\n    (Var String)\n    (Add Math Math)\n    (Mul Math Math)\n    (Product MathMultiSet)\n    (Sum MathMultiSet))\n  (sort MathToMath (UnstableFn (Math) Math))\n  (sort MathMultiSet (MultiSet Math)))\n\n;; expr1 = 2 * (x + 3)\n(let expr1 (Mul (Num 2) (Add (Var \"x\") (Num 3))))\n;; expr2 = 6 + 2 * x\n(let expr2 (Add (Num 6) (Mul (Num 2) (Var \"x\"))))\n\n(rewrite (Add a b) (Sum (multiset-of a b)))\n(rewrite (Mul a b) (Product (multiset-of a b)))\n\n;; 0 or 1 elements sums/products also can be extracted back to numbers\n(rule\n  (\n    (= sum (Sum sum-inner))\n    (= 0 (multiset-length sum-inner))\n  )\n  ((union sum (Num 0)))\n)\n(rule\n  (\n    (= sum (Sum sum-inner))\n    (= 1 (multiset-length sum-inner))\n  )\n  ((union sum (multiset-pick sum-inner)))\n)\n\n(rule\n  (\n    (= product (Product product-inner))\n    (= 0 (multiset-length product-inner))\n  )\n  ((union product (Num 1)))\n)\n(rule\n  (\n    (= product (Product product-inner))\n    (= 1 (multiset-length product-inner))\n  )\n  ((union product (multiset-pick product-inner)))\n)\n\n; (rewrite (Mul a (Add b c))\n;          (Add (Mul a b) (Mul a c)))\n\n; -> we would like to write it like this, but cannot (yet) bc we can't match on the inner structure of the multisets\n;    and we don't support anonymous functions\n\n; (rewrite (Product (multiset-insert a (Sum bc)))\n;          (Sum (multiset-map (lambda (x) (Product (multiset-insert a x))) bc)))\n\n\n;; so instead we can define a function and partially apply it to get the same function as the lambda\n(constructor tmp-fn (MathMultiSet Math) Math)\n(rewrite (tmp-fn xs x) (Product (multiset-insert xs x)))\n\n(rule\n  (\n    ;; and we can do a cross product search of all possible pairs of products/sums to find one we want\n    (= sum (Sum bc))\n    (= product (Product product-inner))\n    (multiset-contains product-inner sum)\n    (> (multiset-length product-inner) 1)\n    (= a (multiset-remove product-inner sum))\n  )\n  (\n    (union product (Sum\n      (unstable-multiset-map\n        (unstable-fn \"tmp-fn\" a)\n        bc)\n    ))\n  )\n)\n\n; (rewrite (Add (Num a) (Num b))\n;          (Num (+ a b)))\n\n(rule\n  (\n    (= sum (Sum sum-inner))\n    (= num-a (Num a))\n    (multiset-contains sum-inner num-a)\n    (= without-a (multiset-remove sum-inner num-a))\n    (= num-b (Num b))\n    (multiset-contains without-a num-b)\n  )\n  (\n    (union sum\n     (Sum (multiset-insert (multiset-remove without-a num-b) (Num (+ a b))))\n   )\n  )\n)\n\n; (rewrite (Mul (Num a) (Num b))\n;          (Num (* a b)))\n\n(rule\n  (\n    (= product (Product product-inner))\n    (= num-a (Num a))\n    (multiset-contains product-inner num-a)\n    (= without-a (multiset-remove product-inner num-a))\n    (= num-b (Num b))\n    (multiset-contains without-a num-b)\n  )\n  (\n    (union product\n     (Product (multiset-insert (multiset-remove without-a num-b) (Num (* a b))))\n   )\n  )\n)\n\n(run 100)\n(check (= expr1 expr2))\n",
  "eqsat-basic": "(datatype Math\n  (Num i64)\n  (Var String)\n  (Add Math Math)\n  (Mul Math Math))\n\n;; expr1 = 2 * (x + 3)\n(let expr1 (Mul (Num 2) (Add (Var \"x\") (Num 3))))\n;; expr2 = 6 + 2 * x\n(let expr2 (Add (Num 6) (Mul (Num 2) (Var \"x\"))))\n\n\n;; (rule ((= __root (Add a b)))\n;;       ((union __root (Add b a)))\n(rewrite (Add a b)\n         (Add b a))\n(rewrite (Mul a (Add b c))\n         (Add (Mul a b) (Mul a c)))\n(rewrite (Add (Num a) (Num b))\n         (Num (+ a b)))\n(rewrite (Mul (Num a) (Num b))\n         (Num (* a b)))\n\n(run 10)\n(check (= expr1 expr2))\n",
  "eqsolve": "(datatype Expr\n  (Add Expr Expr)\n  (Neg Expr)\n  (Num i64)\n  (Mul Expr Expr)\n  (Var String)\n)\n\n(rewrite (Add x y) (Add y x))\n(rewrite (Add (Add x y) z) (Add x (Add y z)))\n(rewrite (Add (Num x) (Num y)) (Num (+ x y)))\n(rule ((= (Add x y) z))\n      ((union (Add z (Neg y)) x)))\n(rewrite (Neg (Neg x)) x)\n(rewrite (Neg (Num n)) (Num (- 0 n)))\n\n(rule ((= x (Var v))) ((union (Mul (Num 1) x) x)))\n(rule ((= x (Add x1 x2))) ((union (Mul (Num 1) x) x)))\n(rewrite (Add (Mul y x) (Mul z x)) (Mul (Add y z) x))\n(rewrite (Mul x y) (Mul y x))\n(rule ((= (Mul (Num x) y) (Num z))\n       (= (% z x) 0))\n      ((union y (Num (/ z x)))))\n\n; system 1: x + 2 = 7\n(union (Add (Var \"x\") (Num 2)) (Num 7))\n; system 2: z + y = 6, 2z = y\n(union (Add (Var \"z\") (Var \"y\")) (Num 6))\n(union (Add (Var \"z\") (Var \"z\")) (Var \"y\"))\n\n(run 5)\n(query-extract (Var \"x\"))\n(query-extract (Var \"y\"))\n(query-extract (Var \"z\"))\n(check (= (Var \"z\") (Add (Num 6) (Neg (Var \"y\")))))\n(check (= (Var \"y\") (Add (Add (Num 6) (Neg (Var \"y\"))) (Add (Num 6) (Neg (Var \"y\"))))))\n(check (= (Var \"y\") (Add (Add (Num 12) (Neg (Var \"y\"))) (Neg (Var \"y\")))))\n(check (= (Add (Var \"y\") (Var \"y\")) \n          (Add (Num 12) (Neg (Var \"y\")))))\n(check (= (Add (Add (Var \"y\") (Var \"y\")) (Var \"y\"))\n          (Num 12)))\n(check (= (Add (Mul (Num 2) (Var \"y\")) (Var \"y\"))\n          (Num 12)))\n(check (= (Mul (Num 3) (Var \"y\"))\n          (Num 12)))\n",
  "f64": "(check (= (neg 1.5) -1.5))\n(check (= (+ 1.5 9.2) 10.7))\n(check (= (/ 12.5 2.0) 6.25))\n(check (< 1.5 9.2))\n(check (>= 9.2 1.5))\n(check (= (^ 9.0 2.5) 243.0))\n(fail (check (= (^ 4.0 2.5) 31.99)))\n(fail (check (< 9.2 1.5)))\n(fail (check (= (+ 1.5 9.2) 10.6)))\n(check (= (to-f64 1) 1.0))\n(check (= (to-i64 1.0) 1))\n(check (= (to-string 1.2) \"1.2\"))\n(check (= (to-string 1.0) \"1.0\"))\n",
  "arity-mismatch": "(+ 1 2 3)\n",
  "constructor_non_sort": "(constructor f () i64)",
  "looking_up_nonconstructor_in_action_case_let": "(function f () i64)\n(function g () i64 :merge (min old new))\n(datatype E)\n(function h () E :merge old)\n(rule (\n) (\n      (let x (f))\n))\n(rule (\n) (\n      (let x (g))\n))\n(rule (\n) (\n      (let x (h))\n))\n(run 1)",
  "looking_up_nonconstructor_in_action_case_set": "(datatype E)\n(function f () E :merge old)\n(rule (\n) (\n      (set (f) (f))\n))\n\n(run 1)",
  "looking_up_nonconstructor_in_action_case_union": "(function f (i64) i64)\n(datatype E \n    (Sum i64 i64))\n(rule (\n    (= 1 (f 2))\n) (\n    (union\n        (Sum 3 4)\n        (Sum 5 (+ 6 (f 7)))\n    )\n))\n(run 1)",
  "looking_up_nonconstructor_in_birewrite": "(function f (i64) i64)\n(datatype E \n    (Sum i64 i64))\n(birewrite \n    (Sum 5 (+ 6 (f 7)))\n    (Sum 3 4)\n)\n(run 1)",
  "looking_up_nonconstructor_in_rewrite": "(function f (i64) i64)\n(datatype E \n    (Sum i64 i64))\n(rewrite \n    (Sum 3 4)\n    (Sum 5 (+ 6 (f 7)))\n)\n(run 1)",
  "semi_naive_set_function": ";; From issue#93. The change happened in right-hand-side of a rule may also impact output in semi-naive cases\n(push)\n(function f (i64) i64 :merge (max old new))\n\n(set (f 0) 0)\n(set (f 3) 0)\n\n(rule ((= f0 (f 0))) ((set (f 1) f0)))\n(rule ((= f1 (f 1))) ((set (f 2) f1)))\n\n;; update f3 some iters later to make sure f(0) is inactive\n(rule ((= f2 (f 2))) ((set (f 3) 3)))\n\n(push)\n\n;; This rule should fire and set f(0) to be 3, but because f0 is inactive, \n;; it does not fire (despite that f3 is active now)\n(rule ((= f0 (f 0))) ((set (f 0) (f 3))))\n\n(run 100)\n(print-function f 100) ;; f0 is expected to have value 3, but has 0 in reality.\n\n(check (= (f 0) 3))\n(check (= (f 1) 3))\n(check (= (f 2) 3))\n(check (= (f 3) 3))\n\n(pop)\n(push)\n\n;; variants of the last rule.\n(rule ((= f0 (f 0)) (= x 3) (= y x))  ((set (f 0) (f y))))\n\n(run 100)\n(check (= (f 0) 3))\n(check (= (f 1) 3))\n(check (= (f 2) 3))\n(check (= (f 3) 3))\n\n(pop)\n(push)\n\n;; adding let binding\n(rule ((= f0 (f 0))) ((let x 3) (let y x) (set (f 0) (f y))))\n\n(run 100)\n(check (= (f 0) 3))\n(check (= (f 1) 3))\n(check (= (f 2) 3))\n(check (= (f 3) 3))\n\n(pop)\n(push)\n\n(function g (i64) i64 :merge (max old new))\n(set (g 0) 3)\n\n;; bind to another function\n(rule ((= f0 (f 0))) ((let x (g 0)) (let y x) (set (f 0) (f y))))\n\n(run 100)\n(check (= (f 0) 3))\n(check (= (f 1) 3))\n(check (= (f 2) 3))\n(check (= (f 3) 3))\n\n(pop)\n(pop)\n\n;; more complicated case, when the evaluation never finish\n;; the semi_naive and naive behavior diverage a bit\n(function f (i64) i64 :merge (max old new))\n\n(set (f 0) 0)\n(set (f 3) 0)\n\n(rule ((= f0 (f 0))) ((set (f 1) (+ 1 f0))))\n(rule ((= f1 (f 1))) ((set (f 2) (+ 1 f1))))\n\n(push)\n\n(rule ((= f2 (f 2))) ((set (f 3) 1)))\n(rule ((= f0 (f 0))) ((set (f 0) (f (f 3)))))\n\n\n(run 100)\n(print-function f 100) \n(check (!= 0 (f 0)))\n(check (!= 0 (f 1)))\n(check (!= 0 (f 2)))\n\n(pop)\n\n\n;; id function that will set all int values, but need strong induction.\n(function g (i64) i64 :merge (max old new))\n(set (g 0) 0)\n(set (g 1) 1)\n(rule ((= x (g x)) (= y (g (- x 1)))) ((set (g (+ x 1)) (+ y 2))))\n\n(run 100)\n(print-function g 100) \n\n(check (= 20 (g 20)))",
  "set-a-primitive": "(set (+ 1 2) 3)\n",
  "unbound": "(datatype Math\n    (Add Math Math)\n    (Sub Math Math)\n)\n\n(rule ((= e (Add x y))) ((Add x i)))\n",
  "union_non_sort": "(function f () i64 :no-merge)\n(set (f) 1)\n(function g () i64 :no-merge)\n(set (g) 2)\n(union (f) (g))",
  "unstable-fn-wrong-args-type": ";; test that you can't resolve a function with the wrong type of args\n\n(datatype Math\n    (Zero)\n    (Inc Math))\n\n(sort Fn (UnstableFn (i64) Math))\n(unstable-fn \"Inc\")\n",
  "unstable-fn-wrong-args": ";; test that applying a function with the wrong number of args will violate the type checker\n\n\n(datatype Math\n    (Inc Math))\n\n(sort Fn (UnstableFn (Math) Math))\n(unstable-app (unstable-fn \"Inc\") 10)\n",
  "unstable-fn-wrong-return-type": ";; test that you can't resolve a function with the wrong return type\n\n(datatype Math\n    (Zero)\n    (Inc Math))\n\n(sort Fn (UnstableFn (Math) i64))\n(unstable-fn \"Inc\")\n",
  "unstable-fn-wrong-return": ";; test that the value of a applied function is well typed\n\n\n(datatype Math\n    (Zero)\n    (Inc Math))\n\n(sort Fn (UnstableFn (Math) Math))\n(let x (unstable-app (unstable-fn \"Inc\") (Zero)))\n\n(+ x 10)\n",
  "fail_wrong_assertion": ";; This test ensure check test fails for wrong assertion\n(function f (i64) i64 :merge (min old new))\n\n(set (f 1) 4)\n(set (f 1) 5)\n\n(check (= (f 1) 4))\n(fail (check (= (f 1) 2)))\n\n(delete (f 1))\n(fail (check (= (f 1) 4)))\n\n(function g (i64 i64) i64 :merge (min old new))\n\n(set (g 1 2) 3)\n(set (g 2 3) 3)\n\n(check (= (g 1 2) (g 2 3)))\n(fail (check (!= (g 1 2) (g 2 3))))\n(fail (check (= (g 0 2) (g 2 3))))\n(check (= x (g 1 2)))\n(fail (check (= x (g 1 3))))\n(check (= x (g 1 2)) (= y (g 2 3)) (= x y))\n(fail (check (= x (g 0 0)) (= y (g 1 1)) (= x y)))",
  "fibonacci-demand": "(datatype Expr \n  (Num i64 :cost 1)\n  (Add Expr Expr :cost 5))\n\n(constructor Fib (i64) Expr :cost 10)\n\n(rewrite (Add (Num a) (Num b)) (Num (+ a b)))\n(rewrite (Fib x) (Add (Fib (- x 1)) (Fib (- x 2)))\n         :when ((> x 1)))\n(rewrite (Fib x) (Num x)\n         :when ((<= x 1)))\n\n(let f7 (Fib 7))\n(run 1000)\n(print-function Fib 10)\n(extract f7)\n(check (= f7 (Num 13)))\n       \n ",
  "fibonacci": "(function fib (i64) i64 :no-merge)\n(set (fib 0) 0)\n(set (fib 1) 1)\n\n(rule ((= f0 (fib x))\n       (= f1 (fib (+ x 1))))\n      ((set (fib (+ x 2)) (+ f0 f1))))\n\n(run 7)\n\n(check (= (fib 7) 13))",
  "fusion": "(datatype Var)\n(datatype Term\n    (App Term Term)\n    (Lam Var Term)\n    (TVar Var)\n    (Let Var Term Term)\n    (Add Term Term)\n    (Num i64)\n    (CaseSplit Term Term Term)\n    (Cons Term Term))\n(constructor NilConst () Term)\n(let Nil (NilConst))\n\n(constructor V (String) Var) \n(constructor From (Term) Var)\n\n;; ==== FV ====\n(sort StringSet (Set Var))\n(function freer (Term) StringSet :merge (set-intersect old new))\n(rule ((= e (App e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 fv2))))\n(rule ((= e (Lam var body))\n       (= (freer body) fv))\n      ((set (freer e) (set-remove fv var))))\n(rule ((= e (TVar v)))\n      ((set (freer e) (set-insert (set-empty) v))))\n(rule ((= e (Let var e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 (set-remove fv2 var)))))\n(rule ((= e (Add e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 fv2))))\n(rule ((= e (Num v)))\n      ((set (freer e) (set-empty))))\n(rule ((= e (CaseSplit e1 e2 e3))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2)\n       (= (freer e3) fv3))\n      ((set (freer e) (set-union (set-union fv1 fv2) fv3))))\n(rule ((= e (Cons e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 fv2))))\n(rule ((= e Nil))\n      ((set (freer e) (set-empty))))\n\n;; ==== eval ====\n; beta\n(rewrite (App (Lam v body) e) (Let v e body))\n; case-split-nil\n(rewrite (CaseSplit Nil e1 e2) e1)\n; case-split-cons\n(rewrite (CaseSplit (Cons x xs) e1 e2) (App (App e2 x) xs))\n\n; let-num\n(rewrite (Let v e (Num n)) (Num n))\n; let-nil\n(rewrite (Let v e Nil) Nil)\n; let-var-same\n(rewrite (Let v1 e (TVar v1)) e)\n; let-var-diff\n(rewrite (Let v1 e (TVar v2)) (TVar v2) :when ((!= v1 v2)))\n\n; let-lam-close\n(rewrite (Let v1 e expr) expr :when ((set-not-contains (freer expr) v1)))      \n; let-app\n(rewrite (Let v e expr) (App (Let v e a) (Let v e b)) :when ((= expr (App a b)) (set-contains (freer expr) v)))\n; let-add\n(rewrite (Let v e expr) (Add (Let v e a) (Let v e b)) :when ((= expr (Add a b)) (set-contains (freer expr) v)))\n; let-cons\n(rewrite (Let v e expr) (Cons (Let v e x) (Let v e xs)) :when ((= expr (Cons x xs)) (set-contains (freer expr) v)))\n; let-case-split\n(rewrite (Let v e expr) \n         (CaseSplit (Let v e e1) (Let v e e2) (Let v e e3))\n    :when ((= expr (CaseSplit e1 e2 e3))\n           (set-contains (freer expr) v)))\n; let-lam-same\n(rewrite (Let v1 e (Lam v1 body)) (Lam v1 body))\n; let-lam-diff\n(rewrite (Let v1 e (Lam v2 body)) (Lam v2 (Let v1 e body))\n      :when ((set-contains (freer body) v1)\n             (!= v1 v2)\n             (= fvs (freer e))\n             (set-not-contains fvs v2)))\n(rule ((= expr (Let v1 e (Lam v2 body)))\n       (set-contains (freer body) v1)\n       (!= v1 v2)\n       (= fvs (freer e))\n       (set-contains fvs v2))\n      ((union expr (Lam (From expr) (Let v1 e (Let v2 (TVar (From expr)) body))))))\n\n(constructor pushdown (Term Term) Term :cost 10000)\n(rewrite (App f (App (Lam x e) e2))\n         (App (Lam x (pushdown f e)) e2))\n\n(rewrite (pushdown f (CaseSplit e e1 (Lam x (Lam xs e2)))) \n         (CaseSplit e (App f e1) (Lam x (Lam xs (App f e2)))))\n\n(relation is-tail (Term))\n(rule ((= demand (pushdown f e)) (= e (App e1 e2))) ((is-tail e)))\n(rule ((= demand (pushdown f e)) (= e (Lam x e))) ((is-tail e)))\n(rule ((= demand (pushdown f e)) (= e (TVar x))) ((is-tail e)))\n(rule ((= demand (pushdown f e)) (= e (Cons e1 e2))) ((is-tail e)))\n(rule ((= demand (pushdown f e)) (= e Nil)) ((is-tail e)))\n(rule ((= demand (pushdown f e)) (= e (Add e1 e2))) ((is-tail e)))\n(rule ((= demand (pushdown f e)) (= e (Num n1))) ((is-tail e)))\n(rewrite (pushdown f e) (App f e) :when ((is-tail e)))\n\n;; ==== definition ====\n\n(constructor sum () Term :cost 1000)\n(constructor mapf () Term :cost 1000)\n(constructor sum-o-mapf () Term)\n(rewrite (App (sum) (App (mapf) x)) (App (sum-o-mapf) x))\n(union (sum) (Lam (V \"xs\")\n    (CaseSplit (TVar (V \"xs\")) \n        (Num 0)\n        (Lam (V \"x\") (Lam (V \"xs'\") \n            (Add (TVar (V \"x\")) (App (sum) (TVar (V \"xs'\")))))))))\n\n(union (mapf) (Lam (V \"xs\")\n    (CaseSplit (TVar (V \"xs\"))\n        Nil\n        (Lam (V \"x\") (Lam (V \"xs'\")\n            (Cons (Add (TVar (V \"x\")) (Num 1))\n                  (App (mapf) (TVar (V \"xs'\")))))))))\n\n(set (freer (sum)) (set-empty))\n(set (freer (mapf)) (set-empty))\n\n(let expr (App (sum) (App (mapf) (TVar (V \"expr\")))))\n\n(run 100)\n\n(query-extract (freer expr))\n\n\n(let my-output\n    (CaseSplit (TVar (V \"expr\")) (Num 0) \n           (Lam (V \"x\") (Lam (V \"xs'\") \n                (Add (Add (TVar (V \"x\")) (Num 1)) \n                     (App (sum-o-mapf) (TVar (V \"xs'\"))))))))\n\n(check (= (App (sum-o-mapf) (TVar (V \"expr\")))\n          (CaseSplit (TVar (V \"expr\")) (Num 0) \n                 (Lam (V \"x\") (Lam (V \"xs'\") \n                      (Add (Add (TVar (V \"x\")) (Num 1)) \n                           (App (sum-o-mapf) (TVar (V \"xs'\")))))))))\n",
  "herbie-tutorial": "(datatype Math\n  (Num BigRat)\n  (Var String)\n  (Add Math Math)\n  (Div Math Math)\n  (Mul Math Math))\n\n(let zero (Num (bigrat (bigint 0) (bigint 1))))\n(let one (Num (bigrat (bigint 1) (bigint 1))))\n(let two (Num (bigrat (bigint 2) (bigint 1))))\n\n(rewrite (Add a b) (Add b a))\n(rewrite (Add a zero) a)\n(rewrite (Add (Num r1) (Num r2))\n         (Num (+ r1 r2)))\n\n(let one-two (Add one two))\n\n(push)\n(run 1)\n;; yay, constant folding works\n(check (= one-two (Num (bigrat (bigint 3) (bigint 1)))))\n;; also, commutativity works\n(check (= (Add two one) one-two))\n(pop)\n\n(push)\n;; rule is like rewrite, but more general\n;; the following rule doesn't union (Num r) with the result:\n(rule ((Num r))\n      ((union one (Div (Num r) (Num r)))))\n;; uh oh, division by zero!\n(run 1)\n\n(pop)\n\n;; we need to detect when things are non-zero\n(function lower-bound (Math) BigRat :merge (max old new))\n(function upper-bound (Math) BigRat :merge (min old new))\n\n(rule ((Num r))\n      ((set (lower-bound (Num r)) r)\n       (set (upper-bound (Num r)) r)))\n(rule ((= e (Add a b)) (= x (lower-bound a)) (= y (lower-bound b)))\n      ((set (lower-bound e) (+ x y))))\n(rule ((= e (Add a b)) (= x (upper-bound a)) (= y (upper-bound b)))\n      ((set (upper-bound e) (+ x y))))\n(rule ((= e (Mul a b))\n       (= lba (lower-bound a))\n       (= lbb (lower-bound b))\n       (= uba (upper-bound a))\n       (= ubb (upper-bound b))\n      )\n      ((set (lower-bound e)\n            (min (* lba lbb)\n                 (min (* lba ubb)\n                 (min (* uba lbb)\n                      (* uba ubb)))))\n       (set (upper-bound e)\n            (min (* lba lbb)\n                 (min (* lba ubb)\n                 (min (* uba lbb)\n                      (* uba ubb)))))))\n\n(rule ((= e (Add a b))\n       (> (lower-bound e) (bigrat (bigint 0) (bigint 1))))\n      ((union one (Div (Add a b) (Add a b)))))\n\n(let x (Var \"x\"))\n(let x1 (Add x one))\n\n(push)\n(set (lower-bound x) (bigrat (bigint 0) (bigint 1)))\n(set (upper-bound x) (bigrat (bigint 1) (bigint 1)))\n\n(run 3)\n\n(query-extract (lower-bound x1))\n(query-extract (upper-bound x1))\n(check (= one (Div x1 x1)))\n\n(pop)\n\n\n;; Set the variable x to a particular input value 200/201\n(set (lower-bound x) (bigrat (bigint 200) (bigint 201)))\n(set (upper-bound x) (bigrat (bigint 200) (bigint 201)))\n\n(run 3)\n\n(query-extract (lower-bound x1))\n(query-extract (upper-bound x1))\n\n(function true-value (Math) f64 :no-merge)\n\n(rule ((= (to-f64 (lower-bound e))\n          (to-f64 (upper-bound e)))\n       (= lbe (lower-bound e))\n      )\n      ((set (true-value e)\n            (to-f64 lbe))))\n\n(run 1)\n(query-extract (true-value x1))\n\n(function best-error (Math) f64 :merge new)\n\n(rule ((Num n))\n      ((set (best-error (Num n)) (to-f64 n))))\n(rule ((Add a b)) ((set (best-error (Add a b)) (to-f64 (bigrat (bigint 10000) (bigint 1))))))\n\n;; finally, the mega rule for finding more accurate programs\n(rule ((= expr (Add a b))\n       (= (best-error a) va)\n       (= (best-error b) vb)\n       (= true-v (true-value (Add a b)))\n       (= computed (+ va vb))\n       (< (abs (- computed true-v))\n          (best-error (Add a b))))\n      ((set (best-error (Add a b)) computed)))\n\n\n\n(push)\n\n(let target\n  (Add \n    (Add (Num (bigrat (bigint 1) (bigint 100))) (Num (bigrat (bigint 1) (bigint 100))))\n    (Num (bigrat (bigint -2) (bigint 100)))))\n\n(run 1)\n\n;; set a default\n(set (best-error target) (to-f64 (bigrat (bigint 10000) (bigint 1))))\n;; error is bad, constant folding hasn't fired enough\n(query-extract (best-error target))\n\n(run 1)\n\n;; error is good, constant folding has fired enough\n(query-extract (best-error target))\n\n\n(pop)",
  "herbie": ";; Implements part of the simplification layer of herbie in egglog\ud83e\udee1\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;\n;; Datatypes\n\n(datatype Math\n  ; Ground terms\n  (Num BigRat)\n  (Var String)\n\n  ; Custom ops\n  (Const String)\n  (Unary String Math)\n  ; unneeded for now\n  ; (Binary String Math Math)\n\n  ; Constant-folding ops\n  (Add Math Math)\n  (Sub Math Math)\n  (Mul Math Math)\n  (Div Math Math)\n  (Pow Math Math)\n  (Neg Math)\n  (Sqrt Math)\n  (Cbrt Math) ; cube root\n  (Fabs Math)\n  (Ceil Math)\n  (Floor Math)\n  (Round Math)\n  (Log Math))\n\n(let r-zero (bigrat (bigint 0) (bigint 1)))\n(let r-one  (bigrat (bigint 1) (bigint 1)))\n(let r-two  (bigrat (bigint 2) (bigint 1)))\n(let zero (Num r-zero))\n(let one  (Num r-one))\n(let two  (Num r-two))\n(let three (Num (bigrat (bigint 3) (bigint 1))))\n(let neg-one (Neg one))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;\n;; Analyses\n;; --------\n;; This example has three analyses:\n;; an interval analysis consisting of a hi and lo component\n;; and a non-zero analysis.\n;; The non-zero analysis is built off the interval analysis (in order to prove\n;; that rewrites are sound, even if some parts of an expr can't be const-evaled)\n\n; TODO: unbounded intervals?\n(function hi (Math) BigRat :merge (min old new))\n(function lo (Math) BigRat :merge (max old new))\n(relation non-zero (Math))\n\n;; First, constant folding!\n;; We don't need an explicit constant folding analysis, we can just union\n;; with nums when we can\n\n; Cases\n(rewrite (Add (Num a) (Num b)) (Num (+ a b)))\n(rewrite (Sub (Num a) (Num b)) (Num (- a b)))\n(rewrite (Mul (Num a) (Num b)) (Num (* a b)))\n(rewrite (Div (Num a) denom) (Num (/ a b)) :when ((= denom (Num b)) (non-zero denom)))\n(rewrite (Pow (Num a) (Num b)) (Num res) :when ((= res (pow a b))))\n(rewrite (Neg (Num a)) (Num (neg a)))\n;; TODO unimplemented\n;; (rewrite (Sqrt (Num a)) (Num res) :when ((= res (sqrt a))))\n;; (rewrite (Cbrt (Num a)) (Num res) :when ((= res (cbrt a))))\n(rewrite (Fabs (Num a)) (Num (abs a)))\n(rewrite (Ceil (Num a)) (Num (ceil a)))\n(rewrite (Floor (Num a)) (Num (floor a)))\n(rewrite (Round (Num a)) (Num (round a)))\n(rewrite (Log (Num a)) (Num res) :when ((= res (log a))))\n\n;; To check if something is zero, we check that zero is not contained in the\n;; interval. There are two possible (overlapping!) cases:\n;; - There exists a lo interval, in which case it must be larger than 0\n;; - There exists a hi interval, in which case it must be smaller than 0\n;; This assumes that intervals are well-formed: lo <= hi at all times.\n(rule ((= l (lo e))\n       (> l r-zero))\n      ((non-zero e)))\n(rule ((= h (hi e))\n       (< h r-zero))\n      ((non-zero e)))\n\n(rule ((= e (Num ve)))\n      ((set (lo e) ve)\n       (set (hi e) ve)))\n\n;; The interval analyses are similar to the constant-folding analysis,\n;; except we have to take the lower/upper bound of the results we get\n(rule ((= e (Add a b))\n       (= la (lo a))\n       (= lb (lo b)))\n      ((set (lo e) (+ la lb))))\n(rule ((= e (Add a b))\n       (= ha (hi a))\n       (= hb (hi b)))\n      ((set (hi e) (+ ha hb))))\n      \n(rule ((= e (Sub a b))\n       (= la (lo a))\n       (= ha (hi a))\n       (= lb (lo b))\n       (= hb (hi b)))\n      ((set (lo e) \n          (min (min (- la lb) (- la hb))\n               (min (- ha lb) (- ha hb))))\n       (set (hi e) \n          (max (max (- la lb) (- la hb))\n               (max (- ha lb) (- ha hb))))))\n\n(rule ((= e (Mul a b))\n       (= la (lo a))\n       (= ha (hi a))\n       (= lb (lo b))\n       (= hb (hi b)))\n      ((set (lo e) \n          (min (min (* la lb) (* la hb))\n               (min (* ha lb) (* ha hb))))\n       (set (hi e) \n          (max (max (* la lb) (* la hb))\n               (max (* ha lb) (* ha hb))))))\n\n(rule ((= e (Div a b))\n       (= la (lo a))\n       (= ha (hi a))\n       (= lb (lo b))\n       (= hb (hi b)))\n      ((set (lo e) \n          (min (min (/ la lb) (/ la hb))\n               (min (/ ha lb) (/ ha hb))))\n       (set (hi e) \n          (max (max (/ la lb) (/ la hb))\n               (max (/ ha lb) (/ ha hb))))))\n\n; TODO: Pow\n\n(rule ((= e (Neg a))\n       (= la (lo a))\n       (= ha (hi a)))\n      ((set (lo e) (neg ha))\n       (set (hi e) (neg la))))\n\n; TODO: Sqrt\n; TODO: Cbrt\n\n(rule ((= e (Fabs a))\n       (= la (lo a))\n       (= ha (hi a)))\n      ((set (lo e) (min (abs la) (abs ha)))\n       (set (hi e) (max (abs la) (abs ha)))))\n\n(rule ((= e (Ceil a))\n       (= la (lo a)))\n      ((set (lo e) (ceil la))))\n(rule ((= e (Ceil a))\n       (= ha (hi a)))\n      ((set (hi e) (ceil ha))))\n\n(rule ((= e (Floor a))\n       (= la (lo a)))\n      ((set (lo e) (floor la))))\n(rule ((= e (Floor a))\n       (= ha (hi a)))\n      ((set (hi e) (floor ha))))\n\n(rule ((= e (Round a))\n       (= la (lo a)))\n      ((set (lo e) (round la))))\n(rule ((= e (Round a))\n       (= ha (hi a)))\n      ((set (hi e) (round ha))))\n\n; TODO: Log\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;\n;; Rewrites\n;; --------\n;; These rewrites were compiled from src/syntax/rules.rkt in the herbie repo,\n;; using all rewrites in the `simplify` rewrite group.\n\n;; Commutativity\n(rewrite (Add a b) (Add b a))\n(rewrite (Mul a b) (Mul b a))\n\n;; Associativity\n(rewrite (Add a (Add b c)) (Add (Add a b) c))\n(rewrite (Add (Add a b) c) (Add a (Add b c)))\n(rewrite (Add a (Sub b c)) (Sub (Add a b) c))\n(rewrite (Add (Sub a b) c) (Sub a (Sub b c)))\n(rewrite (Sub a (Add b c)) (Sub (Sub a b) c))\n(rewrite (Sub (Add a b) c) (Add a (Sub b c)))\n(rewrite (Sub (Sub a b) c) (Sub a (Add b c)))\n(rewrite (Sub a (Sub b c)) (Add (Sub a b) c))\n(rewrite (Mul a (Mul b c)) (Mul (Mul a b) c))\n(rewrite (Mul (Mul a b) c) (Mul a (Mul b c)))\n(rewrite (Mul a (Div b c)) (Div (Mul a b) c))\n(rewrite (Mul (Div a b) c) (Div (Mul a c) b))\n(rewrite (Div a (Mul b c)) (Div (Div a b) c))\n(rewrite (Div (Mul b c) a) (Div b (Div a c)) :when ((non-zero c)))\n(rewrite (Div a (Div b c)) (Mul (Div a b) c) :when ((non-zero c)))\n(rewrite (Div (Div b c) a) (Div b (Mul a c)) :when ((non-zero a)))\n\n;; Counting\n(rewrite (Add x x) (Mul two x))\n\n;; Distributivity\n(rewrite (Mul a (Add b c))         (Add (Mul a b) (Mul a c)))\n(rewrite (Mul a (Add b c))         (Add (Mul b a) (Mul c a)))\n(rewrite (Add (Mul a b) (Mul a c)) (Mul a (Add b c)))\n(rewrite (Sub (Mul a b) (Mul a c)) (Mul a (Sub b c)))\n(rewrite (Add (Mul b a) (Mul c a)) (Mul a (Add b c)))\n(rewrite (Sub (Mul b a) (Mul c a)) (Mul a (Sub b c)))\n(rewrite (Add (Mul b a) a)         (Mul (Add b one) a))\n(rewrite (Add a (Mul c a))         (Mul (Add c one) a))\n\n(rewrite (Neg (Mul a b))       (Mul (Neg a) b))\n(rewrite (Neg (Mul a b))       (Mul a (Neg b)))\n(rewrite (Mul (Neg a) b)       (Neg (Mul a b)))\n(rewrite (Mul a (Neg b))       (Neg (Mul a b)))\n(rewrite (Neg (Add a b))       (Add (Neg a) (Neg b)))\n(rewrite (Add (Neg a) (Neg b)) (Neg (Add a b)))\n(rewrite (Div (Neg a) b)       (Neg (Div a b)))\n(rewrite (Neg (Div a b))       (Div (Neg a) b))\n\n(rewrite (Sub a (Mul (Neg b) c)) (Add a (Mul b c)))\n(rewrite (Sub a (Mul b c))       (Add a (Mul (Neg b) c)))\n\n;; Difference of squares\n(rewrite (Mul (Mul a b) (Mul a b))                           (Mul (Mul a a) (Mul b b)))\n(rewrite (Mul (Mul a a) (Mul b b))                           (Mul (Mul a b) (Mul a b)))\n(rewrite (Sub (Mul a a) (Mul b b))                           (Mul (Add a b) (Sub a b)))\n(rewrite (Sub (Mul a a) one)                (Mul (Add a one) (Sub a one)))\n(rewrite (Add (Mul a a) (Neg one))          (Mul (Add a one) (Sub a one)))\n(rewrite (Pow a b) (Mul (Pow a (Div b two)) (Pow a (Div b two))))\n(rewrite (Mul (Pow a b) (Pow a b))                           (Pow a (Mul two b)))\n\n;; Identity\n;; This isn't subsumed by const folding since this can return results\n;; even if we can't evaluate a precise value for x\n(rewrite (Div one (Div one x))\n         x\n         :when ((non-zero x)))\n(rewrite (Mul x (Div one x))\n         one\n         :when ((non-zero x)))\n(rewrite (Mul (Div one x) x)\n         one\n         :when ((non-zero x)))\n\n(rewrite (Sub x x) zero)\n(rewrite (Div x x) one\n         :when ((non-zero x)))\n(rewrite (Div zero x) zero\n         :when ((non-zero x)))\n(rewrite (Mul zero x) zero)\n(rewrite (Mul x zero) zero)\n\n(rewrite (Add zero x) x)\n(rewrite (Add x zero) x)\n(rewrite (Sub zero x) (Neg x))\n(rewrite (Sub x zero) x)\n(rewrite (Neg (Neg x)) x)\n(rewrite (Mul one x) x)\n(rewrite (Mul x one) x)\n(rewrite (Div x one) x)\n(rewrite (Mul neg-one x) (Neg x))\n \n(rewrite (Sub a b) (Add a (Neg b)))\n(rewrite (Add a (Neg b)) (Sub a b))\n(rewrite (Neg x) (Sub zero x))\n(rewrite (Neg x) (Mul neg-one x))\n\n(rewrite (Div x y) (Mul x (Div one y)))\n(rewrite (Mul x (Div one y)) (Div x y))\n(rewrite (Div x y) (Div one (Div y x))\n  :when ((non-zero x)\n         (non-zero y)))\n\n; FIXME: this rule can't be expressed in its full generality;\n;        we can't express the general rule x -> 1/x since\n;        we can't quantify over Math yet\n;        for now we just apply it to vars\n;        it's also p slow lmao\n(rewrite (Var x) (Mul one (Var x)))\n\n;; Fractions\n(rewrite (Div (Sub a b) c)         (Sub (Div a c) (Div b c)))\n(rewrite (Div (Mul a b) (Mul c d)) (Mul (Div a c) (Div b d)))\n\n;; Square root\n(rewrite (Mul (Sqrt x) (Sqrt x)) x)\n(rewrite (Sqrt (Mul x x)) (Fabs x))\n\n(rewrite (Mul (Neg x) (Neg x)) (Mul x x))\n(rewrite (Mul (Fabs x) (Fabs x)) (Mul x x))\n\n;; Absolute values\n(rewrite (Fabs (Fabs x)) (Fabs x))\n(rewrite (Fabs (Sub a b)) (Fabs (Sub b a)))\n(rewrite (Fabs (Neg x)) (Fabs x))\n(rewrite (Fabs (Mul x x)) (Mul x x))\n(rewrite (Fabs (Mul a b)) (Mul (Fabs a) (Fabs b)))\n(rewrite (Fabs (Div a b)) (Div (Fabs a) (Fabs b)))\n\n;; Cube root\n(rewrite (Pow (Cbrt x) three)    x)\n(rewrite (Cbrt (Pow x three))    x)\n(rewrite (Mul (Mul (Cbrt x) (Cbrt x)) (Cbrt x)) x)\n(rewrite (Mul (Cbrt x) (Mul (Cbrt x) (Cbrt x))) x)\n(rewrite (Pow (Neg x) three)     (Neg (Pow x three)))\n\n(rewrite (Pow (Mul x y) three)\n         (Mul (Pow x three) (Pow y three)))\n(rewrite (Pow (Div x y) three)\n         (Div (Pow x three) (Pow y three)))\n \n(rewrite (Pow x three) (Mul x (Mul x x)))\n; FIXME: this rewrite is slow and has the potential to blow up the egraph\n;        this is bc this rule and the second-to-last difference of squares rule\n;        have some cyclic behavior goin on\n;        the last identity rule compounds this behavior\n(rewrite (Mul x (Mul x x)) (Pow x three))\n\n;; Exponentials\n(rewrite (Unary \"exp\" (Log x)) x)\n(rewrite (Log (Unary \"exp\" x)) x)\n\n(rewrite (Unary \"exp\" zero) one)\n(rewrite (Unary \"exp\" one) (Const \"E\"))\n;; (rewrite one               (Unary \"exp\" zero))\n(rewrite (Const \"E\")       (Unary \"exp\" one))\n\n(rewrite (Unary \"exp\" (Add a b)) (Mul (Unary \"exp\" a) (Unary \"exp\" b)))\n(rewrite (Unary \"exp\" (Sub a b)) (Div (Unary \"exp\" a) (Unary \"exp\" b)))\n(rewrite (Unary \"exp\" (Neg a))   (Div one (Unary \"exp\" a)))\n\n(rewrite (Mul (Unary \"exp\" a) (Unary \"exp\" b))      (Unary \"exp\" (Add a b)))\n(rewrite (Div one (Unary \"exp\" a)) (Unary \"exp\" (Neg a)))\n(rewrite (Div (Unary \"exp\" a) (Unary \"exp\" b))      (Unary \"exp\" (Sub a b)))\n(rewrite (Unary \"exp\" (Mul a b))                    (Pow (Unary \"exp\" a) b))\n(rewrite (Unary \"exp\" (Div a two)) (Sqrt (Unary \"exp\" a)))\n(rewrite (Unary \"exp\" (Div a three)) (Cbrt (Unary \"exp\" a)))\n(rewrite (Unary \"exp\" (Mul a two)) (Mul (Unary \"exp\" a) (Unary \"exp\" a)))\n(rewrite (Unary \"exp\" (Mul a three)) (Pow (Unary \"exp\" a) three))\n\n;; Powers\n(rewrite (Pow a neg-one) (Div one a))\n(rewrite (Pow a one) a)\n\n; 0^0 is undefined\n(rewrite (Pow a zero) one :when ((non-zero a)))\n(rewrite (Pow one a) one)\n\n(rewrite (Unary \"Exp\" (Mul (Log a) b)) (Pow a b))\n(rewrite (Mul (Pow a b) a) (Pow a (Add b one)))\n(rewrite (Pow a (Num (bigrat (bigint 1) (bigint 2)))) (Sqrt a))\n(rewrite (Pow a two) (Mul a a))\n(rewrite (Pow a (Num (bigrat (bigint 1) (bigint 3)))) (Cbrt a))\n(rewrite (Pow a three) (Mul (Mul a a) a))\n\n; 0^0 is undefined\n(rewrite (Pow zero a) zero :when ((non-zero a)))\n\n;; Logarithms\n(rewrite (Log (Mul a b)) (Add (Log a) (Log b)))\n(rewrite (Log (Div a b)) (Sub (Log a) (Log b)))\n(rewrite (Log (Div one a)) (Neg (Log a)))\n(rewrite (Log (Pow a b)) (Mul b (Log a)))\n(rewrite (Log (Const \"E\")) one)\n\n;; Trigonometry\n(rewrite (Add (Mul (Unary \"cos\" a) (Unary \"cos\" a)) (Mul (Unary \"sin\" a) (Unary \"sin\" a)))\n         one)\n(rewrite (Sub one (Mul (Unary \"cos\" a) (Unary \"cos\" a)))\n         (Mul (Unary \"sin\" a) (Unary \"sin\" a)))\n(rewrite (Sub one (Mul (Unary \"sin\" a) (Unary \"sin\" a)))\n         (Mul (Unary \"cos\" a) (Unary \"cos\" a)))\n(rewrite (Add (Mul (Unary \"cos\" a) (Unary \"cos\" a)) (Num (bigrat (bigint -1) (bigint 1)))) \n         (Neg (Mul (Unary \"sin\" a) (Unary \"sin\" a))))\n(rewrite (Add (Mul (Unary \"sin\" a) (Unary \"sin\" a)) (Num (bigrat (bigint -1) (bigint 1)))) \n         (Neg (Mul (Unary \"cos\" a) (Unary \"cos\" a))))\n(rewrite (Sub (Mul (Unary \"cos\" a) (Unary \"cos\" a)) one)  \n         (Neg (Mul (Unary \"sin\" a) (Unary \"sin\" a))))\n(rewrite (Sub (Mul (Unary \"sin\" a) (Unary \"sin\" a)) one)  \n         (Neg (Mul (Unary \"cos\" a) (Unary \"cos\" a))))\n(rewrite (Unary \"sin\" (Div (Const \"PI\") (Num (bigrat (bigint 6) (bigint 1)))))       \n         (Num (bigrat (bigint 1) (bigint 2))))\n(rewrite (Unary \"sin\" (Div (Const \"PI\") (Num (bigrat (bigint 4) (bigint 1)))))       \n         (Div (Sqrt two) two))\n(rewrite (Unary \"sin\" (Div (Const \"PI\") three))       \n         (Div (Sqrt three) two))\n(rewrite (Unary \"sin\" (Div (Const \"PI\") two))       \n         one)\n(rewrite (Unary \"sin\" (Const \"PI\"))             \n         zero)\n(rewrite (Unary \"sin\" (Add x (Const \"PI\")))       \n         (Neg (Unary \"sin\" x)))\n(rewrite (Unary \"sin\" (Add x (Div (Const \"PI\") two))) \n         (Unary \"cos\" x))\n(rewrite (Unary \"cos\" (Div (Const \"PI\") (Num (bigrat (bigint 6) (bigint 1)))))       \n         (Div (Sqrt three) two))\n(rewrite (Unary \"cos\" (Div (Const \"PI\") (Num (bigrat (bigint 4) (bigint 1)))))       \n         (Div (Sqrt two) two))\n(rewrite (Unary \"cos\" (Div (Const \"PI\") three))       \n         (Num (bigrat (bigint 1) (bigint 2))))\n(rewrite (Unary \"cos\" (Div (Const \"PI\") two))       \n         zero)\n(rewrite (Unary \"cos\" (Const \"PI\"))             \n         (Num (bigrat (bigint -1) (bigint 1))))\n(rewrite (Unary \"cos\" (Add x (Const \"PI\")))       \n         (Neg (Unary \"cos\" x)))\n(rewrite (Unary \"cos\" (Add x (Div (Const \"PI\") two))) \n         (Neg (Unary \"sin\" x)))\n(rewrite (Unary \"tan\" (Div (Const \"PI\") (Num (bigrat (bigint 6) (bigint 1)))))       \n         (Div one (Sqrt three)))\n(rewrite (Unary \"tan\" (Div (Const \"PI\") (Num (bigrat (bigint 4) (bigint 1)))))       \n         one)\n(rewrite (Unary \"tan\" (Div (Const \"PI\") three))       \n         (Sqrt three))\n(rewrite (Unary \"tan\" (Const \"PI\"))             \n         zero)\n(rewrite (Unary \"tan\" (Add x (Const \"PI\")))       \n         (Unary \"tan\" x))\n(rewrite (Unary \"tan\" (Add x (Div (Const \"PI\") two))) \n         (Div neg-one (Unary \"tan\" x)))\n(rewrite (Div (Unary \"sin\" a) (Add one (Unary \"cos\" a)))    \n         (Unary \"tan\" (Div a two)))\n(rewrite (Div (Neg (Unary \"sin\" a)) (Add one (Unary \"cos\" a)))\n         (Unary \"tan\" (Div (Neg a) two)))\n(rewrite (Div (Sub one (Unary \"cos\" a)) (Unary \"sin\" a))    \n         (Unary \"tan\" (Div a two)))\n(rewrite (Div (Sub one (Unary \"cos\" a)) (Neg (Unary \"sin\" a)))\n         (Unary \"tan\" (Div (Neg a) two)))\n(rewrite (Div (Add (Unary \"sin\" a) (Unary \"sin\" b)) (Add (Unary \"cos\" a) (Unary \"cos\" b)))\n         (Unary \"tan\" (Div (Add a b) two)))\n(rewrite (Div (Sub (Unary \"sin\" a) (Unary \"sin\" b)) (Add (Unary \"cos\" a) (Unary \"cos\" b)))\n         (Unary \"tan\" (Div (Sub a b) two)))\n\n(rewrite (Unary \"sin\" zero) zero)\n(rewrite (Unary \"cos\" zero) one)\n(rewrite (Unary \"tan\" zero) zero)\n\n(rewrite (Unary \"sin\" (Neg x)) (Neg (Unary \"sin\" x)))\n(rewrite (Unary \"cos\" (Neg x)) (Unary \"cos\" x))\n(rewrite (Unary \"tan\" (Neg x)) (Neg (Unary \"cos\" x)))\n\n; Hyperbolics\n(rewrite (Unary \"sinh\" x) (Div (Sub (Unary \"exp\" x) (Unary \"exp\" (Neg x))) two))\n(rewrite (Unary \"cosh\" x) (Div (Add (Unary \"exp\" x) (Unary \"exp\" (Neg x))) two))\n(rewrite (Unary \"tanh\" x) (Div (Sub (Unary \"exp\" x) (Unary \"exp\" (Neg x))) (Add (Unary \"exp\" x) (Unary \"exp\" (Neg x)))))\n(rewrite (Unary \"tanh\" x) (Div (Sub (Unary \"exp\" (Mul two x)) one) (Add (Unary \"exp\" (Mul two x)) one)))\n(rewrite (Unary \"tanh\" x) (Div (Sub one (Unary \"exp\" (Mul (Num (bigrat (bigint -2) (bigint 1))) x))) (Add one (Unary \"exp\" (Mul (Num (bigrat (bigint -2) (bigint 1))) x)))))\n(rewrite (Sub (Mul (Unary \"cosh\" x) (Unary \"cosh\" x)) (Mul (Unary \"sinh\" x) (Unary \"sinh\" x))) one)\n(rewrite (Add (Unary \"cosh\" x) (Unary \"sinh\" x)) (Unary \"exp\" x))\n(rewrite (Sub (Unary \"cosh\" x) (Unary \"sinh\" x)) (Unary \"exp\" (Neg x)))\n\n;; Unimplemented: misc. rewrites (conditionals, specialized numerical fns)\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;\n;; Testing\n;; -------\n;; In actuality, herbie would be responsible for plugging exprs in here.\n;; For our purposes, we take some test cases from herbie\n;; (src/core/simplify.rkt)\n\n(push)\n(let e (Add one zero))\n(run 1)\n(check (= e one))\n(pop)\n\n(push)\n(let five (Num (bigrat (bigint 5) (bigint 1))))\n(let six (Num (bigrat (bigint 6) (bigint 1))))\n(let e2 (Add one five))\n(run 1)\n(check (= e2 six))\n(pop)\n\n(let x (Var \"x\"))\n\n(push)\n(let e3 (Add x zero))\n(run 1)\n(check (= e3 x))\n(pop)\n\n(push)\n(let e4 (Sub x zero))\n(run 1)\n(check (= e4 x))\n(pop)\n\n(push)\n\n(let e5 (Mul x one))\n(run 1)\n(check (= e5 x))\n(pop)\n\n(push)\n\n(let e6 (Div x one))\n(run 1)\n(check (= e6 x))\n(pop)\n\n(push)\n\n(let e7 (Sub (Mul one x) (Mul (Add x one) one)))\n(run 3)\n(check (= e7 (Num (bigrat (bigint -1) (bigint 1)))))\n(pop)\n\n(push)\n\n(let e8 (Sub (Add x one) x))\n(run 4)\n(check (= e8 one))\n(pop)\n\n(push)\n\n(let e9 (Sub (Add x one) one))\n(run 4)\n(check (= e9 x))\n(pop)\n\n(push)\n\n(set (lo x) r-one)\n(let e10 (Div (Mul x three) x))\n(run 3)\n(check (= e10 three))\n(pop)\n\n(push)\n\n(let e11 (Sub (Mul (Sqrt (Add x one)) (Sqrt (Add x one))) (Mul (Sqrt x) (Sqrt x))))\n(run 5)\n(check (= one e11))\n(pop)\n\n(push)\n(let e12 (Add (Num (bigrat (bigint 1) (bigint 5))) (Num (bigrat (bigint 3) (bigint 10)))))\n(run 1)\n(check (= e12 (Num (bigrat (bigint 1) (bigint 2)))))\n(pop)\n\n(push)\n(let e13 (Unary \"cos\" (Const \"PI\")))\n(run 1)\n(check (= e13 (Num (bigrat (bigint -1) (bigint 1)))))\n(pop)\n\n(push)\n(let sqrt5 (Sqrt (Num (bigrat (bigint 5) (bigint 1)))))\n(let e14\n  (Div one (Sub (Div (Add one sqrt5) two) (Div (Sub one sqrt5) two))))\n(let tgt (Div one sqrt5))\n(run 6)\n(check (= e14 tgt))\n(pop)",
  "i64": "(check (= (to-string 20) \"20\"))\n",
  "include": "(include \"tests/path.egg\")\n(check (path 1 3))\n",
  "integer_math": "(datatype Math\n    (Diff Math Math)\n    (Integral Math Math)\n    \n    (Add Math Math)\n    (Sub Math Math)\n    (Mul Math Math)\n    (Div Math Math)\n    (Pow Math Math)\n    (RShift Math Math)\n    (LShift Math Math)\n    (Mod Math Math)\n    (Not Math)\n    \n    (Const i64)\n    (Var String))\n\n(relation MathU (Math))\n(rule ((= e (Diff x y))) ((MathU e)))\n(rule ((= e (Integral x y))) ((MathU e)))\n(rule ((= e (Add x y))) ((MathU e)))\n(rule ((= e (Sub x y))) ((MathU e)))\n(rule ((= e (Mul x y))) ((MathU e)))\n(rule ((= e (Div x y))) ((MathU e)))\n(rule ((= e (Pow x y))) ((MathU e)))\n(rule ((= e (Const x))) ((MathU e)))\n(rule ((= e (Var x))) ((MathU e)))\n(rule ((= e (RShift x y))) ((MathU e)))\n(rule ((= e (LShift x y))) ((MathU e)))\n(rule ((= e (Mod x y))) ((MathU e)))\n(rule ((= e (Not x))) ((MathU e)))\n\n(relation evals-to (Math i64))\n(rule ((evals-to x vx)) ((union x (Const vx))))\n(rule ((= e (Const c))) ((evals-to e c)))\n\n(relation is-not-zero (Math))\n(rule ((MathU a) (!= a (Const 0))) ((is-not-zero a)))\n\n;; Evaluation\n(rewrite (Add (Const a) (Const b))\n         (Const (+ a b)))\n(rewrite (Sub (Const a) (Const b))\n            (Const (- a b)))\n(rewrite (Mul (Const a) (Const b)) (Const (* a b)))\n(rewrite (Div (Const a) (Const b)) (Const (/ a b)) :when ((!= 0 b)))\n(rewrite (RShift (Const a) (Const b)) (Const (>> a b)))\n(rewrite (LShift (Const a) (Const b)) (Const (<< a b)))\n(rewrite (Not (Const a)) (Const (not-i64 a)))\n\n;; Properties\n(rewrite (Add a b) (Add b a))\n(rewrite (Mul a b) (Mul b a))\n(rewrite (Add a (Add b c)) (Add (Add a b) c))\n(rewrite (Mul a (Mul b c)) (Mul (Mul a b) c))\n\n(rewrite (Sub a b) (Add a (Mul (Const -1) b)))\n\n(rewrite (Add a (Const 0)) a)\n(rewrite (Mul a (Const 0)) (Const 0))\n(rewrite (Mul a (Const 1)) a)\n\n(rule ((MathU a) (!= a (Const 0))) ((union a (Add a (Const 0)))))\n(rule ((MathU a) (!= a (Const 1))) ((union a (Mul a (Const 1)))))\n\n(rewrite (Sub a a) (Const 0))\n(rewrite (Div a a) (Const 1) :when ((is-not-zero a)))\n\n(rewrite (Mul a (Add b c)) (Add (Mul a b) (Mul a c)))\n(rewrite (Add (Mul a b) (Mul a c)) (Mul a (Add b c)))\n\n; This rule doesn't work when pow is negative - consider 2^-1 * 2^1, which is 0, but 2^0 = 1\n(rewrite (Mul (Pow a b) (Pow a c)) (Pow a (Add b c)) :when ((is-not-zero b) (is-not-zero c)))\n\n(rewrite (Pow x (Const 0)) (Const 1) :when ((is-not-zero x)))\n(rewrite (Pow x (Const 1 )) x)\n(rewrite (Pow x (Const 2)) (Mul x x))\n\n(rewrite (Pow x (Const -1)) (Div (Const 1) x) :when ((is-not-zero x)))\n\n(rewrite (Mul x (Pow (Const 2) y)) (LShift x y))\n(rewrite (Div x (Pow (Const 2) y)) (RShift x y))\n\n(rewrite (Not (Not x)) x)\n\n\n;; Tests\n(let start-expr (Div (\n                        Mul (Var \"a\") (Pow (Const 2) (Const 3))\n                    ) (\n                        Add (Var \"c\") (\n                            Sub (Mul (Var \"b\") (Const 2)) (Mul (Var \"b\") (Const 2))\n                        )\n                    )))\n\n(let equiv-expr (Div (\n                    LShift (Var \"a\") (Const 3)\n                ) (\n                    Mul (Var \"c\") (Not (Not (Const 1)))\n                )\n                ))\n\n(run 4)\n\n(check (= start-expr equiv-expr))\n\n",
  "intersection": ";; computes \"e-graph intersection\"\n\n(datatype Expr\n    (Var String)\n    (f Expr))\n\n(constructor intersect (Expr Expr) Expr)\n\n(rule (\n    (= x3 (intersect x1 x2))\n    (= f1 (f x1))\n    (= f2 (f x2))\n)(\n    (union (intersect f1 f2) (f x3))\n))\n\n(let a1 (Var \"a1\")) (let a2 (Var \"a2\")) (let a3 (Var \"a3\"))\n(let b1 (Var \"b1\")) (let b2 (Var \"b2\")) (let b3 (Var \"b3\"))\n\n;; e-graph 1: f(a) = f(b), f(f(a))\n(let t1 (f (f a1)))\n(let fb1 (f b1))\n(union (f a1) fb1)\n\n;; e-graph 2: f(f(a)) = f(f(b))\n(let t2  (f (f a2)))\n(let t2p (f (f b2)))\n(union t2 t2p)\n\n(union (intersect a1 a2) a3)\n(union (intersect b1 b2) b3)\n\n(run 100)\n\n(let t3 (f (f a3)))\n(query-extract :variants 5 t3)\n\n;; f(f(a)) = f(f(b)) is preserved\n(check (= (f (f a3)) (f (f b3))))\n;; but not f(a) = f(b), it was only in e-graph 1\n(check (!= (f a3) (f b3)))",
  "interval": "(datatype Math\n  (Num i64)\n  (Var String)\n  (Mul Math Math))\n\n(function hi (Math) i64 :merge (min old new))\n(function lo (Math) i64 :merge (max old new))\n\n(rule ((= mul (Mul a b))\n       (= loa (lo a))\n       (= lob (lo b))\n       (= hia (hi a))\n       (= hib (hi b))\n      )\n      ((set (lo mul) \n          (min (min (* loa lob) (* loa hib))\n               (min (* hia lob) (* hia hib))))))\n\n(let x (Var \"x\"))\n(let e (Mul x x))\n\n(set (lo x) -10)\n(set (hi x) 10)\n\n(run 1)\n\n(check (= (lo e) -100))\n\n(rule ((= mul (Mul a a))\n       (= loa (lo a))\n      )\n      ((set (lo mul) (* loa loa))))\n\n(run 1)\n(check (= (lo e) 100))\n\n;; testing extraction of rationals\n(query-extract (lo e))\n",
  "knapsack": "(datatype expr \n    (Num i64)\n    (Add expr expr)\n    (Max expr expr))\n(rewrite (Add (Num a) (Num b)) (Num (+ a b)))\n(rewrite (Max (Num a) (Num b)) (Num (max a b)))\n\n; List of (weight, value) pairs\n(datatype objects\n    (Cons i64 i64 objects))\n(constructor NilConst () objects)\n(let Nil (NilConst))\n\n; Given a capacity and a list of objects, finds the maximum value of a\n; collection of objects whose total weight does not exceed the capacity.\n(constructor Knap (i64 objects) expr)\n\n(rule ((= f (Knap capacity (Cons weight val rest))) (<= weight capacity))\n      ((union (Knap capacity (Cons weight val rest))\n            (Max\n                (Add (Num val) (Knap (- capacity weight) rest))\n                (Knap capacity rest)))))\n\n(rule ((= f (Knap capacity (Cons weight val rest))) (> weight capacity))\n      ((union (Knap capacity (Cons weight val rest))\n            (Knap capacity rest))))\n\n(rule ((= f (Knap capacity Nil)))\n      ((union (Knap capacity Nil) (Num 0))))\n\n(let test1 (Knap 13 (Cons 5 5 (Cons 3 3 (Cons 12 12 (Cons 5 5 Nil))))))\n\n(let test2 (Knap 5 (Cons 6 6 Nil)))\n\n(let test3 (Knap 5 (Cons 1 1 (Cons 1 1 (Cons 1 1 Nil)))))\n\n(let test4 (Knap 15 (Cons 12 40 (Cons 2 20 (Cons 1 20 (Cons 1 10 (Cons 4 100 Nil)))))))\n\n; turn a (Num n) into n\n(function Unwrap (expr) i64 :no-merge)\n(rule ((= x (Num n))) ((set (Unwrap (Num n)) n)))\n\n(run 100)\n\n(check (= test1 (Num 13)))\n\n",
  "lambda": ";; NOTE: This file contains several unsafe operations\n(datatype Value (Num i64))\n(constructor TrueConst () Value)\n(let True (TrueConst))\n(constructor FalseConst () Value)\n(let False (FalseConst))\n(datatype VarType)\n(datatype Term\n    (Val Value)\n    (Var VarType)\n    (Add Term Term)\n    (Eq Term Term)\n    (App Term Term)\n    (Lam VarType Term)\n    (Let VarType Term Term)\n    (Fix VarType Term)\n    (If Term Term Term))\n(constructor V (String) VarType) \n(constructor From (Term) VarType)\n\n; All free variables are free,\n; but some free variables are more free than others\n; Freer variables will only contain variables\n; that will affect the evaluation\n; of the corresponding term\n; e.g., x is free in x - x, but not freer in x - x\n(sort StringSet (Set VarType))\n(function freer (Term) StringSet :merge (set-intersect old new))\n(rule ((= e (Val v)))\n      ((set (freer e) (set-empty))))\n(rule ((= e (Var v)))\n      ((set (freer e) (set-insert (set-empty) v))))\n(rule ((= e (Add e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 fv2))))\n(rule ((= e (Eq e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 fv2))))\n(rule ((= e (App e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 fv2))))\n(rule ((= e (Lam var body))\n       (= (freer body) fv))\n      ((set (freer e) (set-remove fv var))))\n(rule ((= e (Let var e1 e2))\n       (= (freer e1) fv1)\n       (= (freer e2) fv2))\n      ((set (freer e) (set-union fv1 (set-remove fv2 var)))))\n(rule ((= e (Fix var body))\n       (= (freer body) fv))\n      ((set (freer e) (set-remove fv var))))\n(rule ((= e (If c e1 e2))\n       (= (freer c) fv1)\n       (= (freer e1) fv2)\n       (= (freer e2) fv3))\n      ((set (freer e) (set-union fv1 (set-union fv2 fv3)))))\n\n;; START evals-to\n(function evals-to (Term) Value :no-merge)\n\n(rule ((= e (Val val)))\n      ((set (evals-to e) val)))\n(rule ((= e (Add a b))\n       (= (Num va) (evals-to a))\n       (= (Num vb) (evals-to b)))\n      ((set (evals-to e) (Num (+ va vb)))))\n(rule ((= e (Eq a b))\n       (= (evals-to b) (evals-to a)))\n      ((set (evals-to e) True)))\n(rule ((= e (Eq a b))\n       (= va (evals-to a))\n       (= vb (evals-to b))\n       (!= va vb)) ; TODO: if true and false are non-mergeable datatype, \n                   ; we should be able to do != over it\n      ((set (evals-to e) False)))\n(rule ((= v (evals-to e)))\n      ((union e (Val v))))\n;; END evals-to\n\n; if-true\n(rewrite (If (Val True) then else) then)\n; if-false\n(rewrite (If (Val False) then else) else)\n; if-elim\n(rule ((= term (If (Eq (Var x) e) then else)))\n      ((Let x e then)\n       (Let x e else)))\n(rewrite (If (Eq (Var x) e) then else) else\n    :when ((= (Let x e then) (Let x e else))))\n\n; add-comm\n(rewrite (Add a b) (Add b a))\n; add-assoc\n(rewrite (Add (Add a b) c) (Add a (Add b c)))\n; eq-comm\n(rewrite (Eq a b) (Eq b a))\n\n; fix\n(rewrite (Fix v e) (Let v (Fix v e) e))\n; beta\n(rewrite (App (Lam v body) e) (Let v e body))\n; let-app\n(rewrite (Let v e (App a b)) (App (Let v e a) (Let v e b)))\n; let-add\n(rewrite (Let v e (Add a b)) (Add (Let v e a) (Let v e b)))\n; let-eq\n(rewrite (Let v e (Eq a b)) (Eq (Let v e a) (Let v e b)))\n; let-const\n(rewrite (Let v e c) c :when ((= const (evals-to c))))\n; let-if\n(rewrite (Let v e (If cond then else)) \n         (If (Let v e cond) (Let v e then) (Let v e else)))\n; let-var-same\n(rewrite (Let v1 e (Var v1)) e)\n; let-var-diff\n(rewrite (Let v1 e (Var v2)) (Var v2) :when ((!= v1 v2)))\n; let-lam-same\n(rewrite (Let v1 e (Lam v1 body)) (Lam v1 body))\n; let-lam-diff\n(rewrite (Let v1 e (Lam v2 body)) (Lam v2 (Let v1 e body))\n      :when ((!= v1 v2)\n             (= fvs (freer e))\n             (set-not-contains fvs v2)))\n(rule ((= expr (Let v1 e (Lam v2 body)))\n       (!= v1 v2)\n       (= fvs (freer e))\n       (set-contains fvs v2))\n      ((union expr (Lam (From expr) (Let v1 e (Let v2 (Var (From expr)) body))))))\n\n;; lambda_under\n(push)\n(let e \n        (Lam (V \"x\") \n             (Add (Val (Num 4))\n                  (App (Lam (V \"y\") (Var (V \"y\"))) (Val (Num 4))))))\n(run 10)\n(check (= e (Lam (V \"x\") (Val (Num 8)))))\n(pop)\n\n;; lambda_if_elim\n(push)\n(let e2 (If (Eq (Var (V \"a\")) (Var (V \"b\")))\n              (Add (Var (V \"a\")) (Var (V \"a\")))\n              (Add (Var (V \"a\")) (Var (V \"b\")))))\n(run 10)\n(check (= e2 (Add (Var (V \"a\")) (Var (V \"b\")))))\n(pop)\n\n;; lambda_let_simple\n(push)\n(let e3 (Let (V \"x\") (Val (Num 0))\n          (Let (V \"y\") (Val (Num 1))\n          (Add (Var (V \"x\")) (Var (V \"y\"))))))\n(run 10)\n(check (= e3 (Val (Num 1))))\n(pop)\n\n;; lambda_capture\n(push)\n(let e4 (Let (V \"x\") (Val (Num 1)) \n          (Lam (V \"x\") (Var (V \"x\")))))\n(run 10)\n(fail (check (= e4 (Lam (V \"x\") (Val (Num 1))))))\n(pop)\n\n;; lambda_capture_free\n(push)\n(let e5  (Let (V \"y\") (Add (Var (V \"x\")) (Var (V \"x\"))) \n           (Lam (V \"x\") (Var (V \"y\")))))\n(run 10)\n(check (set-contains (freer (Lam (V \"x\") (Var (V \"y\")))) (V \"y\")))\n(fail (check (= e5 (Lam (V \"x\") (Add (Var (V \"x\")) (Var (V \"x\")))))))\n(pop)\n\n;; lambda_closure_not_seven\n(push)\n(let e6\n     (Let (V \"five\") (Val (Num 5))\n     (Let (V \"add-five\") (Lam (V \"x\") (Add (Var (V \"x\")) (Var (V \"five\"))))\n     (Let (V \"five\") (Val (Num 6))\n     (App (Var (V \"add-five\")) (Val (Num 1)))))))\n(run 10)\n(fail (check (= e6 (Val (Num 7)))))\n(check (= e6 (Val (Num 6))))\n(pop)\n\n\n;; lambda_compose\n(push)\n(let e7\n    (Let (V \"compose\") (Lam (V \"f\") \n                       (Lam (V \"g\") \n                       (Lam (V \"x\") (App (Var (V \"f\"))\n                                         (App (Var (V \"g\")) \n                                              (Var (V \"x\")))))))\n    (Let (V \"add1\") (Lam (V \"y\") (Add (Var (V \"y\")) (Val (Num 1))))\n    (App (App (Var (V \"compose\")) (Var (V \"add1\"))) (Var (V \"add1\"))))))\n(run 20)\n(check (= e7 (Lam x (Add (Var x) (Val (Num 2))))))\n(pop)\n\n;; lambda_if_simple\n(push)\n(let e10 (If (Eq (Val (Num 1)) (Val (Num 1))) (Val (Num 7)) (Val (Num 9))))\n(run 4)\n(check (= e10 (Val (Num 7))))\n(pop)\n\n;; lambda_compose_many\n(push)\n(let e11\n    (Let (V \"compose\") (Lam (V \"f\") (Lam (V \"g\") (Lam (V \"x\") (App (Var (V \"f\"))\n                                                              (App (Var (V \"g\")) (Var (V \"x\")))))))\n    (Let (V \"add1\") (Lam (V \"y\") (Add (Var (V \"y\")) (Val (Num 1))))\n    (App (App (Var (V \"compose\")) (Var (V \"add1\")))\n         (App (App (Var (V \"compose\")) (Var (V \"add1\")))\n              (App (App (Var (V \"compose\")) (Var (V \"add1\")))\n                   (App (App (Var (V \"compose\")) (Var (V \"add1\")))\n                        (App (App (Var (V \"compose\")) (Var (V \"add1\")))\n                             (App (App (Var (V \"compose\")) (Var (V \"add1\")))\n                                  (Var (V \"add1\")))))))))))\n\n(run 30)\n(check (= e11 (Lam x (Add (Var x) (Val (Num 7))))))\n(pop)\n\n;; lambda_if\n(push)\n(let e8\n    (Let (V \"zeroone\") (Lam (V \"x\")\n         (If (Eq (Var (V \"x\")) (Val (Num 0)))\n             (Val (Num 0))\n             (Val (Num 1))))\n         (Add (App (Var (V \"zeroone\")) (Val (Num 0)))\n              (App (Var (V \"zeroone\")) (Val (Num 10)))))\n)\n(run 20)\n(check (= e8 (Val (Num 1))))\n(pop)\n",
  "levenshtein-distance": "; Datatypes\n\n(datatype expr \n    (Num i64)\n    (Add expr expr)\n    (Min expr expr expr))\n(rewrite (Add (Num a) (Num b)) (Num (+ a b)))\n(rewrite (Min (Num a) (Num b) (Num c)) (Num (min (min a b) c)))\n\n; `String` supports limited operations, let's just use it as a char type\n(datatype str\n    (Cons String str))\n(constructor EmptyConst () str)\n(let Empty (EmptyConst))\n\n; Length function\n\n(constructor Length (str) expr)\n\n(rule ((= f (Length Empty)))\n      ((union (Length Empty) (Num 0))))\n\n(rule ((= f (Length (Cons c cs))))\n      ((union (Length (Cons c cs)) (Add (Num 1) (Length cs)))))\n\n; EditDist function\n\n(constructor EditDist (str str) expr)\n\n(rule ((= f (EditDist Empty s)))\n      ((union (EditDist Empty s) (Length s))))\n\n(rule ((= f (EditDist s Empty)))\n      ((union (EditDist s Empty) (Length s))))\n\n(rule ((= f (EditDist (Cons head rest1) (Cons head rest2))))\n      ((union (EditDist (Cons head rest1) (Cons head rest2))\n            (EditDist rest1 rest2))))\n\n(rule ((= f (EditDist (Cons head1 rest1) (Cons head2 rest2))) (!= head1 head2))\n      ((union (EditDist (Cons head1 rest1) (Cons head2 rest2))\n            (Add (Num 1)\n                 (Min (EditDist rest1 rest2)\n                      (EditDist (Cons head1 rest1) rest2)\n                      (EditDist rest1 (Cons head2 rest2)))))))\n\n; Unwrap function - turn a (Num n) into n\n\n(function Unwrap (expr) i64 :no-merge)\n(rule ((= x (Num n))) ((set (Unwrap (Num n)) n)))\n\n; Tests\n(let HorseStr (Cons \"h\" (Cons \"o\" (Cons \"r\" (Cons \"s\" (Cons \"e\" Empty))))))\n(let RosStr (Cons \"r\" (Cons \"o\" (Cons \"s\" Empty))))\n(let IntentionStr (Cons \"i\" (Cons \"n\" (Cons \"t\" (Cons \"e\" (Cons \"n\" (Cons \"t\" (Cons \"i\" (Cons \"o\" (Cons \"n\" Empty))))))))))\n(let ExecutionStr (Cons \"e\" (Cons \"x\" (Cons \"e\" (Cons \"c\" (Cons \"u\" (Cons \"t\" (Cons \"i\" (Cons \"o\" (Cons \"n\" Empty))))))))))\n\n(let Test1 (EditDist HorseStr RosStr))\n(let Test2 (EditDist IntentionStr ExecutionStr))\n(let Test3 (EditDist HorseStr Empty))\n\n(run 100)\n\n(extract (Unwrap Test1))\n(check (= Test1 (Num 3)))\n\n(extract (Unwrap Test2))\n(check (= Test2 (Num 5)))\n\n(extract (Unwrap Test3))\n(check (= Test3 (Num 5)))",
  "list": "(datatype List\n\t(Nil)\n\t(Cons i64 List))\n\n(ruleset list-ruleset)\n\n(function list-length (List) i64 :no-merge)\n(relation list-length-demand (List))\n(rule\n\t((list-length-demand (Nil)))\n\t((set (list-length (Nil)) 0))\n\t:ruleset list-ruleset)\n(rule\n\t((list-length-demand (Cons head tail)))\n\t((list-length-demand tail))\n\t:ruleset list-ruleset)\n(rule\n\t(\t(list-length-demand (Cons head tail))\n\t\t(= (list-length tail) tail-length))\n\t((set (list-length (Cons head tail)) (+ tail-length 1)))\n\t:ruleset list-ruleset)\n\n(function list-get (List i64) i64 :no-merge)\n(relation list-get-demand (List i64))\n(rule\n\t(\t(list-get-demand list 0)\n\t\t(= list (Cons head tail)))\n\t((set (list-get list 0) head))\n\t:ruleset list-ruleset)\n(rule\n\t(\t(list-get-demand list n) (> n 0)\n\t\t(= list (Cons head tail)))\n\t((list-get-demand tail (- n 1)))\n\t:ruleset list-ruleset)\n(rule\n\t(\t(list-get-demand list n)\n\t\t(= list (Cons head tail))\n\t\t(= item (list-get tail (- n 1))))\n\t((set (list-get list n) item))\n\t:ruleset list-ruleset)\n\n(constructor list-append (List List) List)\n(rewrite (list-append (Nil) list) list :ruleset list-ruleset)\n(rewrite (list-append (Cons head tail) list) (Cons head (list-append tail list)) :ruleset list-ruleset)\n\n; list-contains Nil _ => false\n; list-contains (Cons item tail) item => true\n; list-contains (Cons head tail) item => assert(head != item); (list-contains tail item)\n; list-contains needs inequality\n\n(constructor list-set (List i64 i64) List)\n(rewrite (list-set (Cons head tail) 0 item) (Cons item tail) :ruleset list-ruleset)\n(rewrite (list-set (Cons head tail) i item) (Cons head (list-set tail (- i 1) item)) :when ((> i 0)) :ruleset list-ruleset)\n\n; Tests\n(let a (Cons 1 (Cons 2 (Nil))))\n(let b (Cons 3 (Nil)))\n(let c (Cons 1 (Cons 2 (Cons 3 (Nil)))))\n(let d (Cons 1 (Cons 4 (Nil))))\n(let e (list-append a b))\n(let f (list-set a 1 4))\n\n(list-length-demand c)\n(list-get-demand b 0)\n(list-get-demand a 1)\n\n(run-schedule (saturate (run list-ruleset)))\n\n(check (= e c))\n(check (= (list-length c) 3))\n(check (= (list-get b 0) 3))\n(check (= (list-get a 1) 2))\n(check (= f d))\n",
  "looking_up_global": "(function f () i64 :no-merge)\n(set (f) 0)\n(let x (f))\n\n(function g () i64 :no-merge)\n(fail (let y (g)))",
  "looking_up_nonconstructor_in_rewrite_good": "(function f (i64) i64 :no-merge)\n(datatype E \n    (Sum i64 i64))\n(rewrite \n    (Sum 5 (+ 6 (f 7)))\n    (Sum 3 4)\n)\n(run 1)",
  "map": "(sort MyMap (Map i64 String))\n\n(let my_map1 (map-insert (map-empty) 1 \"one\"))\n(let my_map2 (map-insert my_map1 2 \"two\"))\n\n(check (= \"one\" (map-get my_map1 1)))\n(query-extract my_map2)",
  "math-microbenchmark": "(datatype Math\n    (Diff Math Math)\n    (Integral Math Math)\n    \n    (Add Math Math)\n    (Sub Math Math)\n    (Mul Math Math)\n    (Div Math Math)\n    (Pow Math Math)\n    (Ln Math)\n    (Sqrt Math)\n    \n    (Sin Math)\n    (Cos Math)\n    \n    (Const i64)\n    (Var String))\n\n(rewrite (Add a b) (Add b a))\n(rewrite (Mul a b) (Mul b a))\n(rewrite (Add a (Add b c)) (Add (Add a b) c))\n(rewrite (Mul a (Mul b c)) (Mul (Mul a b) c))\n\n(rewrite (Sub a b) (Add a (Mul (Const -1) b)))\n;; (rewrite (Div a b) (Mul a (Pow b (Const -1))) :when ((is-not-zero b)))\n\n(rewrite (Add a (Const 0)) a)\n(rewrite (Mul a (Const 0)) (Const 0))\n(rewrite (Mul a (Const 1)) a)\n\n(rewrite (Sub a a) (Const 0))\n\n(rewrite (Mul a (Add b c)) (Add (Mul a b) (Mul a c)))\n(rewrite (Add (Mul a b) (Mul a c)) (Mul a (Add b c)))\n\n(rewrite (Mul (Pow a b) (Pow a c)) (Pow a (Add b c)))\n(rewrite (Pow x (Const 1)) x)\n(rewrite (Pow x (Const 2)) (Mul x x))\n\n(rewrite (Diff x (Add a b)) (Add (Diff x a) (Diff x b)))\n(rewrite (Diff x (Mul a b)) (Add (Mul a (Diff x b)) (Mul b (Diff x a))))\n\n(rewrite (Diff x (Sin x)) (Cos x))\n(rewrite (Diff x (Cos x)) (Mul (Const -1) (Sin x)))\n\n(rewrite (Integral (Const 1) x) x)\n(rewrite (Integral (Cos x) x) (Sin x))\n(rewrite (Integral (Sin x) x) (Mul (Const -1) (Cos x)))\n(rewrite (Integral (Add f g) x) (Add (Integral f x) (Integral g x)))\n(rewrite (Integral (Sub f g) x) (Sub (Integral f x) (Integral g x)))\n(rewrite (Integral (Mul a b) x) \n(Sub (Mul a (Integral b x)) \n    (Integral (Mul (Diff x a) (Integral b x)) x)))\n(Integral (Ln (Var \"x\")) (Var \"x\"))\n(Integral (Add (Var \"x\") (Cos (Var \"x\"))) (Var \"x\"))\n(Integral (Mul (Cos (Var \"x\")) (Var \"x\")) (Var \"x\"))\n(Diff (Var \"x\") (Add (Const 1) (Mul (Const 2) (Var \"x\"))))\n(Diff (Var \"x\") (Sub (Pow (Var \"x\") (Const 3)) (Mul (Const 7) (Pow (Var \"x\") (Const 2)))))\n(Add (Mul (Var \"y\") (Add (Var \"x\") (Var \"y\"))) (Sub (Add (Var \"x\") (Const 2)) (Add (Var \"x\") (Var \"x\"))))\n(Div (Const 1)\n                        (Sub (Div (Add (Const 1)\n                                    (Sqrt (Var \"five\")))\n                                (Const 2))\n                            (Div (Sub (Const 1)\n                                    (Sqrt (Var \"five\")))\n                                (Const 2))))\n(run 11)\n(print-size Add)\n(print-size Mul)\n\n(print-size)\n\n(print-stats)",
  "math": "(datatype Math\n    (Diff Math Math)\n    (Integral Math Math)\n    \n    (Add Math Math)\n    (Sub Math Math)\n    (Mul Math Math)\n    (Div Math Math)\n    (Pow Math Math)\n    (Ln Math)\n    (Sqrt Math)\n    \n    (Sin Math)\n    (Cos Math)\n    \n    (Const i64)\n    (Var String))\n\n(relation MathU (Math))\n(rule ((= e (Diff x y))) ((MathU e)))\n(rule ((= e (Integral x y))) ((MathU e)))\n(rule ((= e (Add x y))) ((MathU e)))\n(rule ((= e (Sub x y))) ((MathU e)))\n(rule ((= e (Mul x y))) ((MathU e)))\n(rule ((= e (Div x y))) ((MathU e)))\n(rule ((= e (Pow x y))) ((MathU e)))\n(rule ((= e (Ln x))) ((MathU e)))\n(rule ((= e (Sqrt x))) ((MathU e)))\n(rule ((= e (Sin x))) ((MathU e)))\n(rule ((= e (Cos x))) ((MathU e)))\n(rule ((= e (Const x))) ((MathU e)))\n(rule ((= e (Var x))) ((MathU e)))\n\n(relation evals-to (Math i64))\n\n(rule ((= e (Const c))) ((evals-to e c)))\n(rule ((= e (Add a b)) (evals-to a va) (evals-to b vb))\n      ((evals-to e (+ va vb))))\n(rule ((= e (Sub a b)) (evals-to a va) (evals-to b vb))\n      ((evals-to e (- va vb))))\n(rule ((= e (Mul a b)) (evals-to a va) (evals-to b vb))\n      ((evals-to e (* va vb))))\n(rule ((= e (Div a b)) (evals-to a va) (evals-to b vb) (!= vb 0))\n      ((evals-to e (/ va vb))))\n(rule ((evals-to x vx)) ((union x (Const vx))))\n\n(relation is-const (Math))\n(rule ((evals-to a va)) ((is-const a)))\n\n(relation is-sym (Math))\n(rule ((= e (Var s))) ((is-sym e)))\n\n(relation is-not-zero (Math))\n(rule ((evals-to x vx)\n       (!= vx 0))\n      ((is-not-zero x)))\n\n(relation is-const-or-distinct-var-demand (Math Math))\n(relation is-const-or-distinct-var (Math Math))\n(rule ((is-const-or-distinct-var-demand v w)\n       (is-const v))\n      ((is-const-or-distinct-var v w)))\n(rule ((is-const-or-distinct-var-demand v w)\n       (= v (Var vv))\n       (= w (Var vw))\n       (!= vv vw))\n      ((is-const-or-distinct-var v w)))\n\n(rewrite (Add a b) (Add b a))\n(rewrite (Mul a b) (Mul b a))\n(rewrite (Add a (Add b c)) (Add (Add a b) c))\n(rewrite (Mul a (Mul b c)) (Mul (Mul a b) c))\n\n(rewrite (Sub a b) (Add a (Mul (Const -1) b)))\n(rewrite (Div a b) (Mul a (Pow b (Const -1))) :when ((is-not-zero b)))\n\n(rewrite (Add a (Const 0)) a)\n(rewrite (Mul a (Const 0)) (Const 0))\n(rewrite (Mul a (Const 1)) a)\n\n;; NOTE: these two rules are different from math.rs, as math.rs does pruning\n(rule ((MathU a) (!= a (Const 0))) ((union a (Add a (Const 0)))))\n(rule ((MathU a) (!= a (Const 1))) ((union a (Mul a (Const 1)))))\n\n(rewrite (Sub a a) (Const 0))\n(rewrite (Div a a) (Const 1) :when ((is-not-zero a)))\n\n(rewrite (Mul a (Add b c)) (Add (Mul a b) (Mul a c)))\n(rewrite (Add (Mul a b) (Mul a c)) (Mul a (Add b c)))\n\n(rewrite (Mul (Pow a b) (Pow a c)) (Pow a (Add b c)))\n(rewrite (Pow x (Const 0)) (Const 1) :when ((is-not-zero x)))\n(rewrite (Pow x (Const 1)) x)\n(rewrite (Pow x (Const 2)) (Mul x x))\n(rewrite (Pow x (Const -1)) (Div (Const 1) x) :when ((is-not-zero x)))\n(rewrite (Mul x (Div (Const 1) x)) (Const 1) :when ((is-not-zero x)))\n\n(rewrite (Diff x x) (Const 1) :when ((is-sym x)))\n(rule ((= e (Diff x c))\n       (is-sym x))\n      ((is-const-or-distinct-var-demand c x)))\n(rewrite (Diff x c) (Const 0) :when ((is-sym x) (is-const-or-distinct-var c x)))\n\n(rewrite (Diff x (Add a b)) (Add (Diff x a) (Diff x b)))\n(rewrite (Diff x (Mul a b)) (Add (Mul a (Diff x b)) (Mul b (Diff x a))))\n\n(rewrite (Diff x (Sin x)) (Cos x))\n(rewrite (Diff x (Cos x)) (Mul (Const -1) (Sin x)))\n\n(rewrite (Diff x (Ln x)) (Div (Const 1) x) :when ((is-not-zero x)))\n\n(rewrite (Diff x (Pow f g))\n         (Mul (Pow f g) \n              (Add (Mul (Diff x f) (Div g f)) \n                   (Mul (Diff x g) (Ln f)))) \n         :when ((is-not-zero f) \n                (is-not-zero g)))\n\n(rewrite (Integral (Const 1) x) x)\n(rewrite (Integral (Pow x c) x)\n         (Div (Pow x (Add c (Const 1))) (Add c (Const 1))) \n         :when ((is-const c)))\n(rewrite (Integral (Cos x) x) (Sin x))\n(rewrite (Integral (Sin x) x) (Mul (Const -1) (Cos x)))\n(rewrite (Integral (Add f g) x) (Add (Integral f x) (Integral g x)))\n(rewrite (Integral (Sub f g) x) (Sub (Integral f x) (Integral g x)))\n(rewrite (Integral (Mul a b) x) \n         (Sub (Mul a (Integral b x)) \n              (Integral (Mul (Diff x a) (Integral b x)) x)))\n\n\n(let start-expr2 (Add (Const 1)\n                        (Sub (Var \"a\") \n                             (Mul (Sub (Const 2) \n                                       (Const 1)) \n                                  (Var \"a\")))))\n\n(run 6)\n\n(let end-expr2 (Const 1))\n\n(check (= start-expr2 end-expr2))\n\n(query-extract start-expr2)",
  "matrix": "\n(datatype Dim (Times Dim Dim) (NamedDim String) (Lit i64))\n\n(rewrite (Times a (Times b c)) (Times (Times a b) c))\n(rewrite (Times (Times a b) c) (Times a (Times b c)) )\n(rewrite (Times (Lit i) (Lit j)) (Lit (* i j)))\n(rewrite (Times a b) (Times b a))\n\n(datatype MExpr\n    (MMul MExpr MExpr)\n    (Kron MExpr MExpr)\n    (NamedMat String)\n    (Id Dim)\n    ; DSum\n    ; HStack\n    ; VStack\n    ; Transpose\n    ; Inverse\n    ; Zero Math Math\n    ; ScalarMul\n)\n\n; alternative encoding (type A) = (Matrix n m) may be more useful for \"large story example\"\n(constructor nrows (MExpr) Dim)\n(constructor ncols (MExpr) Dim)\n\n(rewrite (nrows (Kron A B)) (Times (nrows A) (nrows B)))\n(rewrite (ncols (Kron A B)) (Times (ncols A) (ncols B)))\n\n(rewrite (nrows (MMul A B)) (nrows A))\n(rewrite (ncols (MMul A B)) (ncols B))\n\n(rewrite (nrows (Id n)) n)\n(rewrite (ncols (Id n)) n)\n\n(rewrite (MMul (Id n) A) A)\n(rewrite (MMul A (Id n)) A)\n\n(rewrite (MMul A (MMul B C)) (MMul (MMul A B) C))\n(rewrite (MMul (MMul A B) C) (MMul A (MMul B C)))\n\n(rewrite (Kron A (Kron B C)) (Kron (Kron A B) C))\n(rewrite (Kron (Kron A B) C) (Kron A (Kron B C)))\n\n(rewrite (Kron (MMul A C) (MMul B D))  (MMul (Kron A B) (Kron C D)))\n\n\n(rewrite (MMul (Kron A B) (Kron C D))\n    (Kron (MMul A C) (MMul B D))\n    :when\n        ((= (ncols A) (nrows C))\n        (= (ncols B) (nrows D)))\n)\n\n; demand\n(rule ((= e (MMul A B)))\n((ncols A)\n(nrows A)\n(ncols B)\n(nrows B))\n)\n\n(rule ((= e (Kron A B)))\n((ncols A)\n(nrows A)\n(ncols B)\n(nrows B))\n)\n\n\n(let n (NamedDim \"n\"))\n(let m (NamedDim \"m\"))\n(let p (NamedDim \"p\"))\n\n(let A (NamedMat \"A\"))\n(let B (NamedMat \"B\"))\n(let C (NamedMat \"C\"))\n\n(union (nrows A) n)\n(union (ncols A) n)\n(union (nrows B) m)\n(union (ncols B) m)\n(union (nrows C) p)\n(union (ncols C) p)\n(let ex1 (MMul (Kron (Id n) B) (Kron A (Id m))))\n(let rows1 (nrows ex1))\n(let cols1 (ncols ex1))\n\n(run 20)\n\n(check (= (nrows B) m))\n(check (= (nrows (Kron (Id n) B)) (Times n m)))\n(let simple_ex1 (Kron A B))\n(check (= ex1 simple_ex1))\n\n(let ex2 (MMul (Kron (Id p) C) (Kron A (Id m))))\n(run 10)\n(fail (check (= ex2 (Kron A C))))\n",
  "merge-during-rebuild": "; This file tests that non-union merges can be triggered during rebuilds as well\n; as \"inline\" during a set action. See issue #42\n\n(datatype N (Node i64))\n(function distance (N N) i64 :merge (min old new))\n\n(let a (Node 0))\n(let b (Node 1))\n(let x (Node 2))\n(let y (Node 3))\n(set (distance x y) 1)\n(set (distance a b) 2)\n\n(union a x)\n(union b y)\n\n(run 1)\n(check (= (distance x y) 1)) ; fails, the distance has gone up!\n",
  "merge-saturates": "(function foo () i64 :merge (min old new))\n\n(set (foo) 0)\n\n; This should break at iteration 0 because the merge doesn't cause any updates\n(rule ((= f (foo))) ((set (foo) 1)))\n(run 100)\n\n\n; This should run for about 50 iterations, because even though the merge doesn't\n; change the value of baz, it has a side effect of expanding the domain of bar.\n\n;(function baz (i64) i64 :default 0)\n\n;(function bar () i64 :merge (min (baz new) 0))\n\n;(set (bar) 1)\n;(set (bar) 2)\n\n;(rule ((= f (baz x)) (< x 50))\n;      ((set (bar) (+ x 1))))\n\n;(run 100)\n;(check (= 0 (baz 50)))\n\n; The exploit above is no longer valid due to the removal of default\n; however, can still do with lookups in merge and constructors/relations\n\n(relation baz (i64))\n\n(function const (Unit) i64 :no-merge)\n\n(set (const ()) 0)\n\n(function bar () i64 :merge (const (baz new)))\n\n(set (bar) 0)\n(set (bar) 1)\n(set (bar) 2)\n\n(rule (\n      (baz x)\n      (< x 50)\n) (\n      (set (bar) (+ x 1))\n))\n\n(run 100)\n(check (baz 50))",
  "merge_read": "(function foo () i64 :no-merge)\n\n(function bar () i64 :merge (foo))\n\n(set (bar) 0)\n\n(fail (set (bar) 1))",
  "multiset": "(datatype Math (Num i64))\n(sort MathToMath (UnstableFn (Math) Math))\n(sort Maths (MultiSet Math))\n\n(let xs (multiset-of (Num 1) (Num 2) (Num 3)))\n\n;; verify equal to other ordering\n(check (=\n    (multiset-of (Num 3) (Num 2) (Num 1))\n    xs\n))\n\n;; verify not equal to different counts\n(check (!=\n    (multiset-of (Num 3) (Num 2) (Num 1) (Num 1))\n    xs\n))\n\n;; Unclear why check won't work if this is defined inline\n(let inserted (multiset-insert xs (Num 4)))\n;; insert\n(check (=\n    (multiset-of (Num 1) (Num 2) (Num 3) (Num 4))\n    inserted\n))\n\n\n;; contains and not contains\n(check (multiset-contains xs (Num 1)))\n(check (multiset-not-contains xs (Num 4)))\n\n;; remove last\n(check (=\n    (multiset-of (Num 1) (Num 3))\n    (multiset-remove xs (Num 2))\n))\n;; remove one of\n(check (= (multiset-of (Num 1)) (multiset-remove (multiset-of (Num 1) (Num 1)) (Num 1))))\n\n\n;; length\n(check (= 3 (multiset-length xs)))\n;; length repeated\n(check (= 3 (multiset-length (multiset-of (Num 1) (Num 1) (Num 1)))))\n\n;; pick\n(check (= (Num 1) (multiset-pick (multiset-of (Num 1)))))\n\n;; map\n(constructor square (Math) Math)\n(rewrite (square (Num x)) (Num (* x x)))\n\n(let squared-xs (unstable-multiset-map (unstable-fn \"square\") xs))\n(run 1)\n(check (=\n    (multiset-of (Num 1) (Num 4) (Num 9))\n    squared-xs\n))\n\n;; sum\n(check (=\n    (multiset-sum (multiset-of (Num 1) (Num 2) (Num 3)) (multiset-of (Num 1) (Num 2) (Num 4)))\n    (multiset-of (Num 1) (Num 4) (Num 2) (Num 3) (Num 2) (Num 1))\n))\n\n;; verify that sum computes length\n(check (=\n    (multiset-length (multiset-sum (multiset-of (Num 1) (Num 2) (Num 3)) (multiset-of (Num 1) (Num 2) (Num 4))))\n    6\n))\n",
  "name-resolution": "(datatype Math\n  (Add Math Math)\n  (Num i64))\n  \n(let zero (Num 0))\n\n\n;; zero here refers to the function/constant zero, not a free variable\n(rewrite (Add zero x) x)\n\n(let a (Add (Num 0) (Num 3)))\n(let b (Add (Num 7) (Num 9)))\n(let c (Num 16))\n(union b c)\n\n;; crash if we merge two numbers\n(rule (\n (= (Num x) (Num y))\n (!= x y)\n)(\n (panic \"ahhh\")\n))\n      \n      \n(run 10)",
  "extract-vec-bench": "; benchmark for extracting an expression with vecs\n; Added to resolve performance issue from\n; https://egraphs.zulipchat.com/#narrow/channel/375765-egg.2Fegglog/topic/bottleneck.20in.20run_program.20function/near/488126763\n(sort IntTuple)\n(constructor IntTuple___add__ (IntTuple IntTuple) IntTuple)\n(sort Int)\n(constructor IntTuple___init__ (Int) IntTuple)\n(constructor Int___init__ (i64) Int)\n(let %__expr_7592761031329981043 (IntTuple___add__ (IntTuple___init__ (Int___init__ 4096)) (IntTuple___init__ (Int___init__ 4096))))\n(sort StringTensor)\n(constructor StringTensor___init__ (String) StringTensor)\n(let %__expr_43250753374430182 (StringTensor___init__ \"f32\"))\n(let %__expr_-1060255801218150525 (IntTuple___init__ (Int___init__ 64)))\n(sort FloatTuple)\n(sort Float)\n(constructor FloatTuple___init__ (Float) FloatTuple)\n(constructor Float_var (String) Float)\n(let %__expr_6876991871512843363 (FloatTuple___init__ (Float_var \"tensor\")))\n(let %__expr_6314892714057070213 (IntTuple___add__ (IntTuple___init__ (Int___init__ 4096)) (IntTuple___init__ (Int___init__ 1024))))\n(let %__expr_3084822801102392870 (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) (IntTuple___add__ (IntTuple___init__ (Int___init__ 4)) (IntTuple___add__ (IntTuple___init__ (Int___init__ 32)) (IntTuple___init__ (Int___init__ 128))))))\n(let %__expr_3450190312220285211 (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) %__expr_-1060255801218150525))\n(sort Tensor)\n(sort UnaryOp)\n(constructor UnaryOp___call__ (UnaryOp Tensor) Tensor)\n(constructor cosine_xla (IntTuple StringTensor StringTensor) UnaryOp)\n(sort BinaryOp)\n(constructor BinaryOp___call__ (BinaryOp Tensor Tensor) Tensor)\n(constructor dot_xla (IntTuple StringTensor StringTensor) BinaryOp)\n(constructor reshape (IntTuple StringTensor StringTensor) UnaryOp)\n(constructor convert_xla (IntTuple StringTensor StringTensor) UnaryOp)\n(constructor Tensor___init__ (StringTensor IntTuple StringTensor FloatTuple) Tensor)\n(sort Constant)\n(constructor Constant_tensor (Constant) Tensor)\n(constructor Constant___init__ (Tensor) Constant)\n(constructor FloatTuple___add__ (FloatTuple FloatTuple) FloatTuple)\n(constructor Float___init__ (f64) Float)\n(let %__expr_-5393032001490244878 (UnaryOp___call__ (cosine_xla %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"cosine.37\")) (BinaryOp___call__ (dot_xla %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"dot.35\")) (UnaryOp___call__ (reshape (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) (IntTuple___init__ (Int___init__ 1))) %__expr_43250753374430182 (StringTensor___init__ \"reshape.32\")) (UnaryOp___call__ (convert_xla (IntTuple___init__ (Int___init__ 1)) %__expr_43250753374430182 (StringTensor___init__ \"convert.31\")) (Tensor___init__ (StringTensor___init__ \"p1.2\") (IntTuple___init__ (Int___init__ 1)) (StringTensor___init__ \"s32\") %__expr_6876991871512843363))) (UnaryOp___call__ (reshape %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"reshape.34\")) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.33\") %__expr_-1060255801218150525 %__expr_43250753374430182 (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 1.0)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.814617217)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.663601279)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.540581)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.440366626)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.358730227)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.292227834)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.238053814)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.193922758)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.157972813)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.128687382)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.10483095)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0853971)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0695659518)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0566696189)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0461640507)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0376060307)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0306345206)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0249554086)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0203291047)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0165604409)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0134904198)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0109895291)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00895225909)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00729266508)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00594073068)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00483942125)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00394227589)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00321144611)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00216657063)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00137189368)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00085675146)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000524846)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00031269365)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000178507791)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000955621217)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000778465546)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000634151438)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000516590699)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000420823671)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000342810235)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000279259093)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000022748929)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000185316694)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000150962178)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000122976389)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000100178686)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000081607277)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000664786967)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000541546933)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000441153452)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000359371188)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000292749974)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000238479174)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000194269251)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000158255079)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000128917316)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000105018262)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000000855496921)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000000696902532)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000056770881)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000046246538)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000037673226)) (FloatTuple___init__ (Float___init__ 0.000000306892588))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n(let %__expr_-8670240704503480357 (IntTuple___add__ (IntTuple___init__ (Int___init__ 4)) (IntTuple___init__ (Int___init__ 1024))))\n(let %__expr_-7431140694611891752 (IntTuple___add__ (IntTuple___init__ (Int___init__ 4)) (IntTuple___init__ (Int___init__ 4096))))\n(let %__expr_3287298976543486160 (IntTuple___init__ (Int___init__ 128)))\n(let %__expr_121285346798222255 (IntTuple___init__ (Int___init__ 8)))\n(let %__expr_887281436623096487 (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) (IntTuple___add__ (IntTuple___init__ (Int___init__ 4)) (IntTuple___add__ %__expr_121285346798222255 %__expr_3287298976543486160))))\n(let %__expr_-4757619983568283752 (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) (IntTuple___init__ (Int___init__ 1))))\n(let %__expr_780613561810849412 (IntTuple___init__ (Int___init__ 4)))\n(let %__expr_954616962426675872 (IntTuple___init__ (Int___init__ 4096)))\n(let %__expr_970988463324955075 (IntTuple___add__ %__expr_954616962426675872 (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) %__expr_780613561810849412)))\n(constructor custom_call (IntTuple StringTensor StringTensor) UnaryOp)\n(let %__expr_-1015891627560160117 (UnaryOp___call__ (reshape (IntTuple___add__ %__expr_954616962426675872 %__expr_780613561810849412) %__expr_43250753374430182 (StringTensor___init__ \"reshape.64\")) (UnaryOp___call__ (custom_call %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.63\")) (Tensor___init__ (StringTensor___init__ \"p0.1\") %__expr_970988463324955075 %__expr_43250753374430182 %__expr_6876991871512843363))))\n(let %__expr_-4332189904498382722 (StringTensor___init__ \"s32\"))\n(let %__expr_-9145136852942948248 (IntTuple___init__ (Int___init__ 1)))\n(let %__expr_-7238469713715515801 (Tensor___init__ (StringTensor___init__ \"p1.2\") (IntTuple___init__ (Int___init__ 1)) (StringTensor___init__ \"s32\") %__expr_6876991871512843363))\n(let %__expr_3334001411147306849 (IntTuple___add__ %__expr_-9145136852942948248 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_121285346798222255 %__expr_-1060255801218150525))))\n(let %__expr_4125339309995993167 (BinaryOp___call__ (dot_xla %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"dot.35\")) (UnaryOp___call__ (reshape (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) (IntTuple___init__ (Int___init__ 1))) %__expr_43250753374430182 (StringTensor___init__ \"reshape.32\")) (UnaryOp___call__ (convert_xla (IntTuple___init__ (Int___init__ 1)) %__expr_43250753374430182 (StringTensor___init__ \"convert.31\")) (Tensor___init__ (StringTensor___init__ \"p1.2\") (IntTuple___init__ (Int___init__ 1)) (StringTensor___init__ \"s32\") %__expr_6876991871512843363))) (UnaryOp___call__ (reshape %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"reshape.34\")) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.33\") %__expr_-1060255801218150525 %__expr_43250753374430182 (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 1.0)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.814617217)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.663601279)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.540581)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.440366626)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.358730227)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.292227834)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.238053814)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.193922758)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.157972813)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.128687382)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.10483095)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0853971)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0695659518)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0566696189)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0461640507)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0376060307)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0306345206)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0249554086)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0203291047)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0165604409)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0134904198)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0109895291)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00895225909)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00729266508)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00594073068)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00483942125)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00394227589)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00321144611)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00216657063)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00137189368)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00085675146)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000524846)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00031269365)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000178507791)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000955621217)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000778465546)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000634151438)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000516590699)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000420823671)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000342810235)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000279259093)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000022748929)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000185316694)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000150962178)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000122976389)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000100178686)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.0000081607277)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000664786967)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000541546933)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000441153452)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000359371188)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000292749974)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000238479174)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000194269251)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000158255079)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000128917316)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000105018262)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000000855496921)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.000000696902532)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000056770881)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000046246538)) (FloatTuple___add__ (FloatTuple___init__ (Float___init__ 0.00000037673226)) (FloatTuple___init__ (Float___init__ 0.000000306892588)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))\n(constructor slice_xla (IntTuple StringTensor StringTensor) UnaryOp)\n(let %__expr_396210295990978615 (UnaryOp___call__ (slice_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"slice.89\")) (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.69\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.66\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.55\")) (Tensor___init__ (StringTensor___init__ \"p10.11\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(let %__expr_2245507861544664623 (UnaryOp___call__ (slice_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"slice.88\")) (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.69\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.66\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.55\")) (Tensor___init__ (StringTensor___init__ \"p10.11\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(constructor broadcast (IntTuple StringTensor StringTensor IntTuple) UnaryOp)\n(constructor sine_xla (IntTuple StringTensor StringTensor) UnaryOp)\n(let %__expr_-2560546514565477853 (UnaryOp___call__ (broadcast %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.85\") (IntTuple___init__ (Int___init__ 3))) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.84\")) (UnaryOp___call__ (sine_xla %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"sine.36\")) %__expr_4125339309995993167))))\n(let %__expr_2098444771798610723 (IntTuple___init__ (Int___init__ 0)))\n(let %__expr_-2563210909664800482 (UnaryOp___call__ (broadcast (IntTuple___add__ %__expr_-9145136852942948248 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ (IntTuple___init__ (Int___init__ 32)) %__expr_-1060255801218150525))) %__expr_43250753374430182 (StringTensor___init__ \"broadcast.74\") (IntTuple___init__ (Int___init__ 3))) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.73\")) %__expr_-5393032001490244878)))\n(let %__expr_-8885688171770723304 (IntTuple___add__ %__expr_-9145136852942948248 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ (IntTuple___init__ (Int___init__ 32)) %__expr_-1060255801218150525))))\n(let %__expr_2414785639879353357 (IntTuple___init__ (Int___init__ 3)))\n(let %__expr_4736034328705582859 (Tensor___init__ (StringTensor___init__ \"p2.3\") %__expr_780613561810849412 %__expr_-4332189904498382722 %__expr_6876991871512843363))\n(let %__expr_1830038476767106560 (IntTuple___add__ %__expr_780613561810849412 %__expr_3287298976543486160))\n(let %__expr_-6507916738617989136 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.75\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(let %__expr_8569760370475983843 (IntTuple___add__ %__expr_-9145136852942948248 %__expr_3287298976543486160))\n(let %__expr_-3429354383214732803 (UnaryOp___call__ (broadcast %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.87\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.86\")) %__expr_-5393032001490244878)))\n(let %__expr_5405636814860079750 (StringTensor___init__ \"pred\"))\n(constructor Int_var (String) Int)\n(let %__expr_7676728378111026563 (IntTuple___init__ (Int_var \"None\")))\n(let %__expr_5953815806266559867 (UnaryOp___call__ (broadcast %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.72\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.71\")) (UnaryOp___call__ (sine_xla %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"sine.36\")) %__expr_4125339309995993167))))\n(let %__expr_-7512897737066945430 (FloatTuple___init__ (Float___init__ -inf)))\n(sort Vec_Tensor (Vec Tensor))\n(let %__expr_463014422623832906 (vec-of))\n(let %__expr_-7582832374925924324 (IntTuple___add__ %__expr_780613561810849412 %__expr_8569760370475983843))\n(let %__expr_-4815729050271210467 (IntTuple___init__ (Int___init__ 2)))\n(let %__expr_-7821901818554487580 (Tensor___init__ (StringTensor___init__ \"p0.1\") %__expr_970988463324955075 %__expr_43250753374430182 %__expr_6876991871512843363))\n(let %__expr_-8971047228665288026 (IntTuple___add__ (IntTuple___init__ (Int___init__ 4)) (IntTuple___add__ %__expr_121285346798222255 %__expr_3287298976543486160)))\n(let %__expr_7504702770541550180 (IntTuple___add__ %__expr_954616962426675872 %__expr_780613561810849412))\n(let %__expr_6344554491433604436 (IntTuple___init__ (Int___init__ 32)))\n(let %__expr_-3016580086357272757 (Int___init__ 2))\n(let %__expr_8339352466036831669 (IntTuple___add__ %__expr_780613561810849412 %__expr_-9145136852942948248))\n(let %__expr_7306392975451507081 (IntTuple___add__ %__expr_3287298976543486160 %__expr_-8971047228665288026))\n(let %__expr_-7541190586253792133 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_6344554491433604436 %__expr_8569760370475983843)))\n(let %__expr_-6147558561541869459 (IntTuple___add__ %__expr_-9145136852942948248 (IntTuple___add__ %__expr_-4815729050271210467 %__expr_780613561810849412)))\n(sort Iota)\n(constructor Iota_tensor (Iota) Tensor)\n(constructor Iota___init__ (Tensor) Iota)\n(let %__expr_-230735414473030379 (Iota_tensor (Iota___init__ (Tensor___init__ (StringTensor___init__ \"iota.38\") %__expr_3287298976543486160 %__expr_-4332189904498382722 %__expr_6876991871512843363))))\n(let %__expr_-4524654540891236778 (Int___init__ 3))\n(let %__expr_-4098736235425715155 (IntTuple___add__ (IntTuple___init__ (Int___init__ 4)) (IntTuple___add__ (IntTuple___init__ (Int___init__ 32)) (IntTuple___init__ (Int___init__ 128)))))\n(sort NaryOp)\n(sort TensorArr)\n(constructor NaryOp___call__ (NaryOp TensorArr) Tensor)\n(constructor select (Int IntTuple StringTensor StringTensor) NaryOp)\n(constructor TensorArr___init__ (Vec_Tensor) TensorArr)\n(constructor and_xla (IntTuple StringTensor StringTensor) BinaryOp)\n(constructor compare (IntTuple StringTensor StringTensor) BinaryOp)\n(constructor divide (IntTuple StringTensor StringTensor) BinaryOp)\n(constructor concatenate (Int IntTuple StringTensor StringTensor) NaryOp)\n(constructor subtract_xla (IntTuple StringTensor StringTensor) BinaryOp)\n(constructor multiply (IntTuple StringTensor StringTensor) BinaryOp)\n(constructor add_xla (IntTuple StringTensor StringTensor) BinaryOp)\n(let %__expr_4132418248823832170 (NaryOp___call__ (select %__expr_-4524654540891236778 %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"select.108\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.107\") (IntTuple___add__ %__expr_2098444771798610723 %__expr_2414785639879353357)) (UnaryOp___call__ (reshape %__expr_1830038476767106560 %__expr_5405636814860079750 (StringTensor___init__ \"reshape.106\")) (BinaryOp___call__ (and_xla %__expr_-7582832374925924324 %__expr_5405636814860079750 (StringTensor___init__ \"and.47\")) (UnaryOp___call__ (broadcast %__expr_-7582832374925924324 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.45\") (IntTuple___add__ %__expr_-9145136852942948248 %__expr_-4815729050271210467)) (BinaryOp___call__ (compare %__expr_8569760370475983843 %__expr_5405636814860079750 (StringTensor___init__ \"compare.41\")) (UnaryOp___call__ (broadcast %__expr_8569760370475983843 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.39\") %__expr_-9145136852942948248) %__expr_-230735414473030379) (UnaryOp___call__ (broadcast %__expr_8569760370475983843 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.40\") %__expr_2098444771798610723) %__expr_-7238469713715515801))) (UnaryOp___call__ (broadcast %__expr_-7582832374925924324 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.46\") (IntTuple___add__ %__expr_2098444771798610723 %__expr_-4815729050271210467)) (BinaryOp___call__ (compare %__expr_1830038476767106560 %__expr_5405636814860079750 (StringTensor___init__ \"compare.44\")) (UnaryOp___call__ (broadcast %__expr_1830038476767106560 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.42\") %__expr_-9145136852942948248) %__expr_-230735414473030379) (UnaryOp___call__ (broadcast %__expr_1830038476767106560 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.43\") %__expr_2098444771798610723) %__expr_4736034328705582859))))))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.103\")) (BinaryOp___call__ (divide %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"divide.99\")) (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.83\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"subtract.79\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.77\")) %__expr_-2563210909664800482 %__expr_-6507916738617989136) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.78\")) %__expr_5953815806266559867 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.76\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))))) (BinaryOp___call__ (add_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"add.82\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.80\")) %__expr_-2563210909664800482 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.76\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.81\")) %__expr_5953815806266559867 %__expr_-6507916738617989136))))) (UnaryOp___call__ (broadcast %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.98\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.97\") %__expr_7676728378111026563 %__expr_43250753374430182 (FloatTuple___init__ (Float___init__ 11.3137083))))))) (UnaryOp___call__ (reshape (IntTuple___add__ %__expr_3287298976543486160 %__expr_-4098736235425715155) %__expr_43250753374430182 (StringTensor___init__ \"reshape.102\")) (UnaryOp___call__ (broadcast (IntTuple___add__ %__expr_3287298976543486160 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_121285346798222255 %__expr_1830038476767106560))) %__expr_43250753374430182 (StringTensor___init__ \"broadcast.101\") (IntTuple___add__ %__expr_2098444771798610723 %__expr_-6147558561541869459)) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.100\")) (UnaryOp___call__ (custom_call %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.51\")) (Tensor___init__ (StringTensor___init__ \"p4.5\") %__expr_7306392975451507081 %__expr_43250753374430182 %__expr_6876991871512843363))))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.105\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.104\") %__expr_7676728378111026563 %__expr_43250753374430182 (FloatTuple___init__ (Float___init__ -30000.0))))))))))\n(let %__expr_894743134888337629 (IntTuple___init__ (Int___init__ 1024)))\n(let %__expr_-2060545458516095324 (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.69\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.66\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.55\")) (Tensor___init__ (StringTensor___init__ \"p10.11\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363)))))\n(let %__expr_6121053725670406621 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.76\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(let %__expr_-5809114903965367101 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_6344554491433604436 %__expr_-4757619983568283752)))\n(let %__expr_4486907948839773011 (NaryOp___call__ (select %__expr_-4524654540891236778 %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"select.117\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (broadcast %__expr_-5809114903965367101 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.116\") %__expr_2098444771798610723) (UnaryOp___call__ (reshape %__expr_780613561810849412 %__expr_5405636814860079750 (StringTensor___init__ \"reshape.115\")) (BinaryOp___call__ (compare %__expr_8339352466036831669 %__expr_5405636814860079750 (StringTensor___init__ \"compare.50\")) (UnaryOp___call__ (broadcast %__expr_8339352466036831669 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.49\") %__expr_-9145136852942948248) %__expr_-7238469713715515801) (UnaryOp___call__ (broadcast %__expr_8339352466036831669 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.48\") %__expr_2098444771798610723) %__expr_4736034328705582859))))) (BinaryOp___call__ (dot_xla %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"dot.112\")) (BinaryOp___call__ (divide %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"divide.99\")) (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.83\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"subtract.79\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.77\")) %__expr_-2563210909664800482 %__expr_-6507916738617989136) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.78\")) %__expr_5953815806266559867 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.76\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))))) (BinaryOp___call__ (add_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"add.82\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.80\")) %__expr_-2563210909664800482 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.76\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.81\")) %__expr_5953815806266559867 %__expr_-6507916738617989136))))) (UnaryOp___call__ (broadcast %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.98\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.97\") %__expr_7676728378111026563 %__expr_43250753374430182 (FloatTuple___init__ (Float___init__ 11.3137083))))))) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.111\")) (UnaryOp___call__ (broadcast (IntTuple___add__ %__expr_-9145136852942948248 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_121285346798222255 %__expr_1830038476767106560))) %__expr_43250753374430182 (StringTensor___init__ \"broadcast.110\") %__expr_-6147558561541869459) (UnaryOp___call__ (reshape %__expr_-8971047228665288026 %__expr_43250753374430182 (StringTensor___init__ \"reshape.109\")) (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.96\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"subtract.92\")) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.90\")) %__expr_-3429354383214732803 %__expr_2245507861544664623) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.91\")) %__expr_-2560546514565477853 %__expr_396210295990978615))) (BinaryOp___call__ (add_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"add.95\")) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.93\")) %__expr_-3429354383214732803 %__expr_396210295990978615) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.94\")) %__expr_-2560546514565477853 %__expr_2245507861544664623)))))))))) (UnaryOp___call__ (broadcast %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.114\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.113\") %__expr_7676728378111026563 %__expr_43250753374430182 (FloatTuple___init__ (Float___init__ -30000.0))))))))))\n(let %__expr_1715866568967156001 (IntTuple___add__ %__expr_-9145136852942948248 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_121285346798222255 %__expr_1830038476767106560))))\n(let %__expr_-4402497450837339487 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_121285346798222255 %__expr_1830038476767106560)))\n(let %__expr_-493790858086465406 (IntTuple___add__ %__expr_2098444771798610723 %__expr_-6147558561541869459))\n(sort OpType)\n(constructor AddOp () OpType)\n(let %__expr_-1742406957868104574 (AddOp))\n(let %__expr_7295362097999084912 (IntTuple___add__ %__expr_3287298976543486160 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_121285346798222255 %__expr_1830038476767106560))))\n(let %__expr_2371693186799238654 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___add__ %__expr_6344554491433604436 %__expr_-9145136852942948248)))\n(let %__expr_-5369558017121983332 (FloatTuple___init__ (Float___init__ 0.0)))\n(let %__expr_-6965944473054330737 (IntTuple___add__ %__expr_3287298976543486160 %__expr_-4098736235425715155))\n(let %__expr_-3215649446283623168 (IntTuple___add__ %__expr_780613561810849412 %__expr_6344554491433604436))\n(let %__expr_1062650903983753593 (IntTuple___add__ %__expr_2098444771798610723 %__expr_-9145136852942948248))\n(let %__expr_8625213997479593078 (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))\n(let %__expr_-7880384998050047123 (FloatTuple___init__ (Float___init__ -30000.0)))\n(let %__expr_-6297599033619396741 (BinaryOp___call__ (divide %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"divide.99\")) (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.83\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"subtract.79\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.77\")) %__expr_-2563210909664800482 %__expr_-6507916738617989136) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.78\")) %__expr_5953815806266559867 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.76\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))))) (BinaryOp___call__ (add_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"add.82\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.80\")) %__expr_-2563210909664800482 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.76\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.68\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.65\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.54\")) (Tensor___init__ (StringTensor___init__ \"p9.10\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.81\")) %__expr_5953815806266559867 %__expr_-6507916738617989136))))) (UnaryOp___call__ (broadcast %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.98\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.97\") %__expr_7676728378111026563 %__expr_43250753374430182 (FloatTuple___init__ (Float___init__ 11.3137083))))))))\n(constructor exp_xla (IntTuple StringTensor StringTensor) UnaryOp)\n(constructor maximum_xla (IntTuple StringTensor StringTensor) BinaryOp)\n(constructor reduce (OpType Int IntTuple StringTensor StringTensor) NaryOp)\n(let %__expr_-1311435203323686298 (UnaryOp___call__ (exp_xla %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"exponential.147\")) (BinaryOp___call__ (subtract_xla %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"subtract.146\")) %__expr_4486907948839773011 (UnaryOp___call__ (broadcast %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.145\") %__expr_1062650903983753593) (UnaryOp___call__ (reshape %__expr_-3215649446283623168 %__expr_43250753374430182 (StringTensor___init__ \"reshape.144\")) (BinaryOp___call__ (maximum_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"maximum.132\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.119\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_4132418248823832170) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.118\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.126\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_4486907948839773011) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.125\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430))))))))))))\n(let %__expr_-7788334188785680851 (UnaryOp___call__ (sine_xla %__expr_3450190312220285211 %__expr_43250753374430182 (StringTensor___init__ \"sine.36\")) %__expr_4125339309995993167))\n(let %__expr_-7177210201341724311 (UnaryOp___call__ (exp_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"exponential.136\")) (BinaryOp___call__ (subtract_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"subtract.135\")) %__expr_4132418248823832170 (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.134\") %__expr_1062650903983753593) (UnaryOp___call__ (reshape %__expr_-3215649446283623168 %__expr_43250753374430182 (StringTensor___init__ \"reshape.133\")) (BinaryOp___call__ (maximum_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"maximum.132\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.119\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_4132418248823832170) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.118\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.126\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_4486907948839773011) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.125\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430))))))))))))\n(let %__expr_3257672333319215589 (IntTuple___add__ %__expr_954616962426675872 (IntTuple___init__ (Int___init__ 14336))))\n(let %__expr_6226685966605622071 (IntTuple___add__ %__expr_780613561810849412 (IntTuple___init__ (Int___init__ 14336))))\n(let %__expr_-7391271948922448236 (BinaryOp___call__ (maximum_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"maximum.132\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.119\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_4132418248823832170) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.118\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.126\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_4486907948839773011) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.125\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430))))))))\n(constructor transpose (IntTuple StringTensor StringTensor IntTuple) UnaryOp)\n(let %__expr_-1512881425436073085 (BinaryOp___call__ (add_xla %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"add.184\")) (UnaryOp___call__ (reshape %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"reshape.183\")) (UnaryOp___call__ (transpose %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"transpose.182\") (IntTuple___add__ %__expr_-9145136852942948248 %__expr_2098444771798610723)) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.181\")) (UnaryOp___call__ (reshape %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"reshape.180\")) (UnaryOp___call__ (transpose %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"transpose.169\") (IntTuple___add__ %__expr_-4815729050271210467 (IntTuple___add__ %__expr_2098444771798610723 (IntTuple___add__ %__expr_-9145136852942948248 %__expr_2414785639879353357)))) (BinaryOp___call__ (divide %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"divide.168\")) (BinaryOp___call__ (add_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"add.165\")) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.163\")) %__expr_-7177210201341724311 (UnaryOp___call__ (reshape %__expr_-6965944473054330737 %__expr_43250753374430182 (StringTensor___init__ \"reshape.159\")) (UnaryOp___call__ (broadcast %__expr_7295362097999084912 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.158\") %__expr_-493790858086465406) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.157\")) (UnaryOp___call__ (custom_call %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.52\")) (Tensor___init__ (StringTensor___init__ \"p5.6\") %__expr_7306392975451507081 %__expr_43250753374430182 %__expr_6876991871512843363)))))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.164\")) %__expr_-1311435203323686298 (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.162\")) (UnaryOp___call__ (broadcast %__expr_1715866568967156001 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.161\") %__expr_-6147558561541869459) (UnaryOp___call__ (reshape %__expr_-8971047228665288026 %__expr_43250753374430182 (StringTensor___init__ \"reshape.160\")) (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.70\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.67\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.56\")) (Tensor___init__ (StringTensor___init__ \"p11.12\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363))))))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.167\") %__expr_1062650903983753593) (UnaryOp___call__ (reshape %__expr_-3215649446283623168 %__expr_43250753374430182 (StringTensor___init__ \"reshape.166\")) (UnaryOp___call__ (convert_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"convert.156\")) (BinaryOp___call__ (add_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"add.155\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.138\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_-7177210201341724311) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.137\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-5369558017121983332)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.149\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_-1311435203323686298) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.148\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-5369558017121983332))))))))))))) (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.57\")) (Tensor___init__ (StringTensor___init__ \"p12.13\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363))))) %__expr_-7821901818554487580))\n(let %__expr_452557796185398649 (UnaryOp___call__ (reshape %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"reshape.187\")) (UnaryOp___call__ (custom_call %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.186\")) %__expr_-1512881425436073085)))\n(let %__expr_-2938317280478826799 (BinaryOp___call__ (dot_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"dot.188\")) %__expr_452557796185398649 (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.59\")) (Tensor___init__ (StringTensor___init__ \"p14.15\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363))))\n(let %__expr_-1398757307985845473 (IntTuple___add__ %__expr_-9145136852942948248 %__expr_2098444771798610723))\n(constructor log_xla (IntTuple StringTensor StringTensor) UnaryOp)\n(let %__expr_-5539788990080679230 (UnaryOp___call__ (reshape %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"reshape.210\")) (UnaryOp___call__ (custom_call %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.209\")) (BinaryOp___call__ (add_xla %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"add.196\")) (UnaryOp___call__ (reshape %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"reshape.195\")) (UnaryOp___call__ (transpose %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"transpose.194\") %__expr_-1398757307985845473) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.193\")) (BinaryOp___call__ (multiply %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"multiply.192\")) (BinaryOp___call__ (multiply %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"multiply.190\")) %__expr_-2938317280478826799 (UnaryOp___call__ (log_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"logistic.189\")) %__expr_-2938317280478826799)) (BinaryOp___call__ (dot_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"dot.191\")) %__expr_452557796185398649 (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.60\")) (Tensor___init__ (StringTensor___init__ \"p15.16\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363)))) (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.61\")) (Tensor___init__ (StringTensor___init__ \"p16.17\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363))))) %__expr_-1512881425436073085))))\n(let %__expr_-1629021705689551749 (UnaryOp___call__ (broadcast %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.220\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.219\")) %__expr_-5393032001490244878)))\n(let %__expr_-3958807383885890740 (IntTuple___init__ (Int___init__ 14336)))\n(let %__expr_5532528940903355404 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.221\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.214\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.211\")) %__expr_-5539788990080679230 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.200\")) (Tensor___init__ (StringTensor___init__ \"p18.19\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(let %__expr_2072161566362410803 (UnaryOp___call__ (broadcast %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.218\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.217\")) %__expr_-7788334188785680851)))\n(let %__expr_8673116907044179242 (UnaryOp___call__ (slice_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"slice.222\")) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.214\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.211\")) %__expr_-5539788990080679230 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.200\")) (Tensor___init__ (StringTensor___init__ \"p18.19\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(let %__expr_-4148379609151315050 (FloatTuple___init__ (Float___init__ 11.3137083)))\n(let %__expr_1491917502286445791 (UnaryOp___call__ (custom_call %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.197\")) (Tensor___init__ (StringTensor___init__ \"p6.7\") %__expr_7306392975451507081 %__expr_43250753374430182 %__expr_6876991871512843363)))\n(let %__expr_-3682154909098446806 (UnaryOp___call__ (broadcast %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.231\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.230\")) %__expr_-7788334188785680851)))\n(let %__expr_5904002275098573844 (UnaryOp___call__ (slice_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"slice.235\")) (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.215\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.212\")) %__expr_-5539788990080679230 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.201\")) (Tensor___init__ (StringTensor___init__ \"p19.20\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(let %__expr_5971376207566796789 (UnaryOp___call__ (slice_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"slice.234\")) (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.215\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.212\")) %__expr_-5539788990080679230 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.201\")) (Tensor___init__ (StringTensor___init__ \"p19.20\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363))))))\n(let %__expr_-8243289078095398304 (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.215\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.212\")) %__expr_-5539788990080679230 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.201\")) (Tensor___init__ (StringTensor___init__ \"p19.20\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363)))))\n(let %__expr_7708990606695058033 (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.242\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"subtract.238\")) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.236\")) (UnaryOp___call__ (broadcast %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.233\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.232\")) %__expr_-5393032001490244878)) %__expr_5971376207566796789) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.237\")) %__expr_-3682154909098446806 %__expr_5904002275098573844))) (BinaryOp___call__ (add_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"add.241\")) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.239\")) (UnaryOp___call__ (broadcast %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.233\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.232\")) %__expr_-5393032001490244878)) %__expr_5904002275098573844) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.240\")) %__expr_-3682154909098446806 %__expr_5971376207566796789))))))\n(let %__expr_3323368700089587174 (BinaryOp___call__ (compare %__expr_8339352466036831669 %__expr_5405636814860079750 (StringTensor___init__ \"compare.50\")) (UnaryOp___call__ (broadcast %__expr_8339352466036831669 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.49\") %__expr_-9145136852942948248) %__expr_-7238469713715515801) (UnaryOp___call__ (broadcast %__expr_8339352466036831669 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.48\") %__expr_2098444771798610723) %__expr_4736034328705582859)))\n(let %__expr_-8318127460193195056 (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.96\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"subtract.92\")) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.90\")) %__expr_-3429354383214732803 %__expr_2245507861544664623) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.91\")) %__expr_-2560546514565477853 %__expr_396210295990978615))) (BinaryOp___call__ (add_xla %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"add.95\")) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.93\")) %__expr_-3429354383214732803 %__expr_396210295990978615) (BinaryOp___call__ (multiply %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"multiply.94\")) %__expr_-2560546514565477853 %__expr_2245507861544664623))))))\n(let %__expr_-8187757278872548646 (UnaryOp___call__ (custom_call %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.51\")) (Tensor___init__ (StringTensor___init__ \"p4.5\") %__expr_7306392975451507081 %__expr_43250753374430182 %__expr_6876991871512843363)))\n(let %__expr_-1893280258041797610 (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.214\")) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.211\")) %__expr_-5539788990080679230 (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.200\")) (Tensor___init__ (StringTensor___init__ \"p18.19\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363)))))\n(let %__expr_-9091482200889601374 (NaryOp___call__ (select %__expr_-4524654540891236778 %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"select.263\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (broadcast %__expr_-5809114903965367101 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.262\") %__expr_2098444771798610723) (UnaryOp___call__ (reshape %__expr_780613561810849412 %__expr_5405636814860079750 (StringTensor___init__ \"reshape.261\")) %__expr_3323368700089587174))) (BinaryOp___call__ (dot_xla %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"dot.258\")) (BinaryOp___call__ (divide %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"divide.245\")) (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.229\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"subtract.225\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.223\")) %__expr_-1629021705689551749 %__expr_5532528940903355404) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.224\")) %__expr_2072161566362410803 %__expr_8673116907044179242))) (BinaryOp___call__ (add_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"add.228\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.226\")) %__expr_-1629021705689551749 %__expr_8673116907044179242) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.227\")) %__expr_2072161566362410803 %__expr_5532528940903355404))))) (UnaryOp___call__ (broadcast %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.244\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.243\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-4148379609151315050))))) (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.257\")) (UnaryOp___call__ (broadcast %__expr_1715866568967156001 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.256\") %__expr_-6147558561541869459) (UnaryOp___call__ (reshape %__expr_-8971047228665288026 %__expr_43250753374430182 (StringTensor___init__ \"reshape.255\")) %__expr_7708990606695058033))))) (UnaryOp___call__ (broadcast %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.260\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.259\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7880384998050047123))))))))\n(let %__expr_-83332345647080926 (BinaryOp___call__ (and_xla %__expr_-7582832374925924324 %__expr_5405636814860079750 (StringTensor___init__ \"and.47\")) (UnaryOp___call__ (broadcast %__expr_-7582832374925924324 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.45\") (IntTuple___add__ %__expr_-9145136852942948248 %__expr_-4815729050271210467)) (BinaryOp___call__ (compare %__expr_8569760370475983843 %__expr_5405636814860079750 (StringTensor___init__ \"compare.41\")) (UnaryOp___call__ (broadcast %__expr_8569760370475983843 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.39\") %__expr_-9145136852942948248) %__expr_-230735414473030379) (UnaryOp___call__ (broadcast %__expr_8569760370475983843 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.40\") %__expr_2098444771798610723) %__expr_-7238469713715515801))) (UnaryOp___call__ (broadcast %__expr_-7582832374925924324 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.46\") (IntTuple___add__ %__expr_2098444771798610723 %__expr_-4815729050271210467)) (BinaryOp___call__ (compare %__expr_1830038476767106560 %__expr_5405636814860079750 (StringTensor___init__ \"compare.44\")) (UnaryOp___call__ (broadcast %__expr_1830038476767106560 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.42\") %__expr_-9145136852942948248) %__expr_-230735414473030379) (UnaryOp___call__ (broadcast %__expr_1830038476767106560 %__expr_-4332189904498382722 (StringTensor___init__ \"broadcast.43\") %__expr_2098444771798610723) %__expr_4736034328705582859)))))\n(let %__expr_7701481709172785838 (IntTuple___add__ %__expr_2098444771798610723 %__expr_2414785639879353357))\n(let %__expr_-5043758399430709069 (BinaryOp___call__ (divide %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"divide.245\")) (NaryOp___call__ (concatenate %__expr_-3016580086357272757 %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"concatenate.229\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (BinaryOp___call__ (subtract_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"subtract.225\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.223\")) %__expr_-1629021705689551749 %__expr_5532528940903355404) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.224\")) %__expr_2072161566362410803 %__expr_8673116907044179242))) (BinaryOp___call__ (add_xla %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"add.228\")) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.226\")) %__expr_-1629021705689551749 %__expr_8673116907044179242) (BinaryOp___call__ (multiply %__expr_-8885688171770723304 %__expr_43250753374430182 (StringTensor___init__ \"multiply.227\")) %__expr_2072161566362410803 %__expr_5532528940903355404))))) (UnaryOp___call__ (broadcast %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.244\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.243\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-4148379609151315050))))))\n(let %__expr_7181609879948930480 (UnaryOp___call__ (exp_xla %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"exponential.293\")) (BinaryOp___call__ (subtract_xla %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"subtract.292\")) %__expr_-9091482200889601374 (UnaryOp___call__ (broadcast %__expr_-5809114903965367101 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.291\") %__expr_1062650903983753593) (UnaryOp___call__ (reshape %__expr_-3215649446283623168 %__expr_43250753374430182 (StringTensor___init__ \"reshape.290\")) (BinaryOp___call__ (maximum_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"maximum.278\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.265\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (NaryOp___call__ (select %__expr_-4524654540891236778 %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"select.254\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.253\") %__expr_7701481709172785838) (UnaryOp___call__ (reshape %__expr_1830038476767106560 %__expr_5405636814860079750 (StringTensor___init__ \"reshape.252\")) %__expr_-83332345647080926))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.249\")) %__expr_-5043758399430709069 (UnaryOp___call__ (reshape %__expr_-6965944473054330737 %__expr_43250753374430182 (StringTensor___init__ \"reshape.248\")) (UnaryOp___call__ (broadcast %__expr_7295362097999084912 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.247\") %__expr_-493790858086465406) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.246\")) %__expr_1491917502286445791))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.251\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.250\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7880384998050047123)))))))) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.264\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.272\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_-9091482200889601374) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.271\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430))))))))))))\n(let %__expr_1080405137063700041 (NaryOp___call__ (select %__expr_-4524654540891236778 %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"select.254\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.253\") %__expr_7701481709172785838) (UnaryOp___call__ (reshape %__expr_1830038476767106560 %__expr_5405636814860079750 (StringTensor___init__ \"reshape.252\")) %__expr_-83332345647080926))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.249\")) %__expr_-5043758399430709069 (UnaryOp___call__ (reshape %__expr_-6965944473054330737 %__expr_43250753374430182 (StringTensor___init__ \"reshape.248\")) (UnaryOp___call__ (broadcast %__expr_7295362097999084912 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.247\") %__expr_-493790858086465406) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.246\")) %__expr_1491917502286445791))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.251\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.250\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7880384998050047123))))))))\n(let %__expr_5515350417066368181 (UnaryOp___call__ (exp_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"exponential.282\")) (BinaryOp___call__ (subtract_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"subtract.281\")) %__expr_1080405137063700041 (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.280\") %__expr_1062650903983753593) (UnaryOp___call__ (reshape %__expr_-3215649446283623168 %__expr_43250753374430182 (StringTensor___init__ \"reshape.279\")) (BinaryOp___call__ (maximum_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"maximum.278\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.265\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (NaryOp___call__ (select %__expr_-4524654540891236778 %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"select.254\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.253\") %__expr_7701481709172785838) (UnaryOp___call__ (reshape %__expr_1830038476767106560 %__expr_5405636814860079750 (StringTensor___init__ \"reshape.252\")) %__expr_-83332345647080926))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.249\")) %__expr_-5043758399430709069 (UnaryOp___call__ (reshape %__expr_-6965944473054330737 %__expr_43250753374430182 (StringTensor___init__ \"reshape.248\")) (UnaryOp___call__ (broadcast %__expr_7295362097999084912 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.247\") %__expr_-493790858086465406) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.246\")) %__expr_1491917502286445791))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.251\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.250\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7880384998050047123)))))))) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.264\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.272\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_-9091482200889601374) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.271\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430))))))))))))\n(let %__expr_-1542072431027395000 (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.216\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.213\")) %__expr_-5539788990080679230 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.202\")) (Tensor___init__ (StringTensor___init__ \"p20.21\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363)))))\n(let %__expr_-7570848187282235487 (UnaryOp___call__ (custom_call %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.198\")) (Tensor___init__ (StringTensor___init__ \"p7.8\") %__expr_7306392975451507081 %__expr_43250753374430182 %__expr_6876991871512843363)))\n(let %__expr_3412490026866573093 (UnaryOp___call__ (reshape %__expr_887281436623096487 %__expr_43250753374430182 (StringTensor___init__ \"reshape.70\")) (BinaryOp___call__ (dot_xla %__expr_-8670240704503480357 %__expr_43250753374430182 (StringTensor___init__ \"dot.67\")) %__expr_-1015891627560160117 (UnaryOp___call__ (custom_call %__expr_6314892714057070213 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.56\")) (Tensor___init__ (StringTensor___init__ \"p11.12\") %__expr_6314892714057070213 %__expr_43250753374430182 %__expr_6876991871512843363)))))\n(let %__expr_4513888971859015446 (BinaryOp___call__ (maximum_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"maximum.278\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.265\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 (NaryOp___call__ (select %__expr_-4524654540891236778 %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"select.254\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_5405636814860079750 (StringTensor___init__ \"broadcast.253\") %__expr_7701481709172785838) (UnaryOp___call__ (reshape %__expr_1830038476767106560 %__expr_5405636814860079750 (StringTensor___init__ \"reshape.252\")) %__expr_-83332345647080926))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.249\")) %__expr_-5043758399430709069 (UnaryOp___call__ (reshape %__expr_-6965944473054330737 %__expr_43250753374430182 (StringTensor___init__ \"reshape.248\")) (UnaryOp___call__ (broadcast %__expr_7295362097999084912 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.247\") %__expr_-493790858086465406) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.246\")) %__expr_1491917502286445791))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.251\") %__expr_7676728378111026563) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.250\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7880384998050047123)))))))) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.264\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.272\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_-9091482200889601374) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.271\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-7512897737066945430))))))))\n(let %__expr_180593350369795557 (UnaryOp___call__ (custom_call %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.52\")) (Tensor___init__ (StringTensor___init__ \"p5.6\") %__expr_7306392975451507081 %__expr_43250753374430182 %__expr_6876991871512843363)))\n(let %__expr_-7270651874258463548 (IntTuple___add__ %__expr_-4815729050271210467 (IntTuple___add__ %__expr_2098444771798610723 (IntTuple___add__ %__expr_-9145136852942948248 %__expr_2414785639879353357))))\n(let %__expr_-8904536519025451719 (UnaryOp___call__ (broadcast %__expr_3334001411147306849 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.233\") %__expr_2414785639879353357) (UnaryOp___call__ (reshape %__expr_-1060255801218150525 %__expr_43250753374430182 (StringTensor___init__ \"reshape.232\")) %__expr_-5393032001490244878)))\n(let %__expr_-8019728855191511740 (BinaryOp___call__ (add_xla %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"add.196\")) (UnaryOp___call__ (reshape %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"reshape.195\")) (UnaryOp___call__ (transpose %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"transpose.194\") %__expr_-1398757307985845473) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.193\")) (BinaryOp___call__ (multiply %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"multiply.192\")) (BinaryOp___call__ (multiply %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"multiply.190\")) %__expr_-2938317280478826799 (UnaryOp___call__ (log_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"logistic.189\")) %__expr_-2938317280478826799)) (BinaryOp___call__ (dot_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"dot.191\")) %__expr_452557796185398649 (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.60\")) (Tensor___init__ (StringTensor___init__ \"p15.16\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363)))) (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.61\")) (Tensor___init__ (StringTensor___init__ \"p16.17\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363))))) %__expr_-1512881425436073085))\n(let %__expr_1151686521003743806 (UnaryOp___call__ (reshape %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"reshape.333\")) (UnaryOp___call__ (custom_call %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.332\")) (BinaryOp___call__ (add_xla %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"add.330\")) (UnaryOp___call__ (reshape %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"reshape.329\")) (UnaryOp___call__ (transpose %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"transpose.328\") %__expr_-1398757307985845473) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.327\")) (UnaryOp___call__ (reshape %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"reshape.326\")) (UnaryOp___call__ (transpose %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"transpose.315\") %__expr_-7270651874258463548) (BinaryOp___call__ (divide %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"divide.314\")) (BinaryOp___call__ (add_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"add.311\")) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.309\")) %__expr_5515350417066368181 (UnaryOp___call__ (reshape %__expr_-6965944473054330737 %__expr_43250753374430182 (StringTensor___init__ \"reshape.305\")) (UnaryOp___call__ (broadcast %__expr_7295362097999084912 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.304\") %__expr_-493790858086465406) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.303\")) %__expr_-7570848187282235487)))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.310\")) %__expr_7181609879948930480 (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.308\")) (UnaryOp___call__ (broadcast %__expr_1715866568967156001 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.307\") %__expr_-6147558561541869459) (UnaryOp___call__ (reshape %__expr_-8971047228665288026 %__expr_43250753374430182 (StringTensor___init__ \"reshape.306\")) %__expr_-1542072431027395000))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.313\") %__expr_1062650903983753593) (UnaryOp___call__ (reshape %__expr_-3215649446283623168 %__expr_43250753374430182 (StringTensor___init__ \"reshape.312\")) (UnaryOp___call__ (convert_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"convert.302\")) (BinaryOp___call__ (add_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"add.301\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.284\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_5515350417066368181) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.283\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-5369558017121983332)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.295\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_7181609879948930480) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.294\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-5369558017121983332))))))))))))) (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.203\")) (Tensor___init__ (StringTensor___init__ \"p21.22\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363))))) %__expr_-8019728855191511740))))\n(let %__expr_7727207157741005465 (BinaryOp___call__ (add_xla %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"add.330\")) (UnaryOp___call__ (reshape %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"reshape.329\")) (UnaryOp___call__ (transpose %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"transpose.328\") %__expr_-1398757307985845473) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.327\")) (UnaryOp___call__ (reshape %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"reshape.326\")) (UnaryOp___call__ (transpose %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"transpose.315\") %__expr_-7270651874258463548) (BinaryOp___call__ (divide %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"divide.314\")) (BinaryOp___call__ (add_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"add.311\")) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.309\")) %__expr_5515350417066368181 (UnaryOp___call__ (reshape %__expr_-6965944473054330737 %__expr_43250753374430182 (StringTensor___init__ \"reshape.305\")) (UnaryOp___call__ (broadcast %__expr_7295362097999084912 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.304\") %__expr_-493790858086465406) (UnaryOp___call__ (reshape %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"reshape.303\")) %__expr_-7570848187282235487)))) (BinaryOp___call__ (dot_xla %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"dot.310\")) %__expr_7181609879948930480 (UnaryOp___call__ (reshape %__expr_3084822801102392870 %__expr_43250753374430182 (StringTensor___init__ \"reshape.308\")) (UnaryOp___call__ (broadcast %__expr_1715866568967156001 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.307\") %__expr_-6147558561541869459) (UnaryOp___call__ (reshape %__expr_-8971047228665288026 %__expr_43250753374430182 (StringTensor___init__ \"reshape.306\")) %__expr_-1542072431027395000))))) (UnaryOp___call__ (broadcast %__expr_-7541190586253792133 %__expr_43250753374430182 (StringTensor___init__ \"broadcast.313\") %__expr_1062650903983753593) (UnaryOp___call__ (reshape %__expr_-3215649446283623168 %__expr_43250753374430182 (StringTensor___init__ \"reshape.312\")) (UnaryOp___call__ (convert_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"convert.302\")) (BinaryOp___call__ (add_xla %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"add.301\")) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.284\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_5515350417066368181) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.283\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-5369558017121983332)))))) (NaryOp___call__ (reduce %__expr_-1742406957868104574 %__expr_-3016580086357272757 %__expr_2371693186799238654 %__expr_43250753374430182 (StringTensor___init__ \"reduce.295\")) (TensorArr___init__ (vec-push (vec-push %__expr_463014422623832906 %__expr_7181609879948930480) (Constant_tensor (Constant___init__ (Tensor___init__ (StringTensor___init__ \"constant.294\") %__expr_7676728378111026563 %__expr_43250753374430182 %__expr_-5369558017121983332))))))))))))) (UnaryOp___call__ (custom_call %__expr_7592761031329981043 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.203\")) (Tensor___init__ (StringTensor___init__ \"p21.22\") %__expr_7592761031329981043 %__expr_43250753374430182 %__expr_6876991871512843363))))) %__expr_-8019728855191511740))\n(let %__expr_-6404519204420161135 (IntTuple___init__ (Int___init__ 128256)))\n(let %__expr_-852638415102252222 (IntTuple___add__ %__expr_954616962426675872 %__expr_-6404519204420161135))\n(let %__expr_-6567784714280254548 (IntTuple___add__ (IntTuple___init__ (Int___init__ 1)) %__expr_780613561810849412))\n(constructor scatter_xla (Int IntTuple StringTensor StringTensor) NaryOp)\n(let %large_expr (TensorArr___init__ (vec-push (vec-push (vec-push (vec-push (vec-push %__expr_463014422623832906 (UnaryOp___call__ (reshape (IntTuple___add__ %__expr_-6404519204420161135 %__expr_-6567784714280254548) %__expr_43250753374430182 (StringTensor___init__ \"reshape.347\")) (BinaryOp___call__ (dot_xla (IntTuple___add__ %__expr_-6404519204420161135 %__expr_780613561810849412) %__expr_43250753374430182 (StringTensor___init__ \"dot.346\")) (UnaryOp___call__ (custom_call %__expr_-852638415102252222 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.30\")) (Tensor___init__ (StringTensor___init__ \"p27.28\") %__expr_-852638415102252222 %__expr_43250753374430182 %__expr_6876991871512843363)) (UnaryOp___call__ (reshape %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"reshape.345\")) (UnaryOp___call__ (custom_call %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.344\")) (BinaryOp___call__ (add_xla %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"add.342\")) (UnaryOp___call__ (reshape %__expr_970988463324955075 %__expr_43250753374430182 (StringTensor___init__ \"reshape.341\")) (UnaryOp___call__ (transpose %__expr_7504702770541550180 %__expr_43250753374430182 (StringTensor___init__ \"transpose.340\") %__expr_-1398757307985845473) (BinaryOp___call__ (dot_xla %__expr_-7431140694611891752 %__expr_43250753374430182 (StringTensor___init__ \"dot.339\")) (BinaryOp___call__ (multiply %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"multiply.338\")) (BinaryOp___call__ (multiply %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"multiply.336\")) (BinaryOp___call__ (dot_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"dot.334\")) %__expr_1151686521003743806 (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.205\")) (Tensor___init__ (StringTensor___init__ \"p23.24\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363))) (UnaryOp___call__ (log_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"logistic.335\")) (BinaryOp___call__ (dot_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"dot.334\")) %__expr_1151686521003743806 (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.205\")) (Tensor___init__ (StringTensor___init__ \"p23.24\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363))))) (BinaryOp___call__ (dot_xla %__expr_6226685966605622071 %__expr_43250753374430182 (StringTensor___init__ \"dot.337\")) %__expr_1151686521003743806 (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.206\")) (Tensor___init__ (StringTensor___init__ \"p24.25\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363)))) (UnaryOp___call__ (custom_call %__expr_3257672333319215589 %__expr_43250753374430182 (StringTensor___init__ \"custom-call.207\")) (Tensor___init__ (StringTensor___init__ \"p25.26\") %__expr_3257672333319215589 %__expr_43250753374430182 %__expr_6876991871512843363))))) %__expr_7727207157741005465)))))) (NaryOp___call__ (scatter_xla %__expr_-4524654540891236778 %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"scatter.170\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 %__expr_-8187757278872548646) %__expr_-7238469713715515801) %__expr_-8318127460193195056)))) (NaryOp___call__ (scatter_xla %__expr_-4524654540891236778 %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"scatter.175\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 %__expr_180593350369795557) %__expr_-7238469713715515801) %__expr_3412490026866573093)))) (NaryOp___call__ (scatter_xla %__expr_-4524654540891236778 %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"scatter.316\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 %__expr_1491917502286445791) %__expr_-7238469713715515801) %__expr_7708990606695058033)))) (NaryOp___call__ (scatter_xla %__expr_-4524654540891236778 %__expr_7306392975451507081 %__expr_43250753374430182 (StringTensor___init__ \"scatter.321\")) (TensorArr___init__ (vec-push (vec-push (vec-push %__expr_463014422623832906 %__expr_-7570848187282235487) %__expr_-7238469713715515801) %__expr_-1542072431027395000))))))\n(extract %large_expr 0)\n",
  "python_array_optimize": ";; created by `python python/tests/test_array_api.py`\n(push 1)\n(sort DType)\n(constructor DType_float64 () DType)\n(let %__expr_3312772843316740737 (DType_float64 ))\n(sort Boolean)\n(function Boolean_to_bool (Boolean) bool :no-merge)\n(constructor DType___eq__ (DType DType) Boolean)\n(sort NDArray)\n(constructor NDArray_dtype (NDArray) DType)\n(constructor assume_isfinite (NDArray) NDArray)\n(sort TupleInt)\n(constructor assume_shape (NDArray TupleInt) NDArray)\n(constructor assume_dtype (NDArray DType) NDArray)\n(constructor NDArray_var (String) NDArray :cost 200)\n(sort Int)\n(sort Vec_Int (Vec Int))\n(constructor TupleInt_from_vec (Vec_Int) TupleInt)\n(constructor Int___init__ (i64) Int)\n(let %__expr_-3454922750681412518 (DType___eq__ %__expr_3312772843316740737 (NDArray_dtype (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))))))\n(ruleset array_api_ruleset)\n(constructor i-TupleInt__-Int_i (TupleInt Int) TupleInt)\n(rewrite (i-TupleInt__-Int_i i _) i :subsume :ruleset array_api_ruleset)\n(sort TupleTupleInt)\n(constructor TupleTupleInt_single (TupleInt) TupleTupleInt)\n(sort UnstableFn_TupleInt_Int (UnstableFn (Int ) TupleInt))\n(constructor TupleTupleInt___init__ (Int UnstableFn_TupleInt_Int) TupleTupleInt)\n(rewrite (TupleTupleInt_single i) (TupleTupleInt___init__ (Int___init__ 1) (unstable-fn \"i-TupleInt__-Int_i\" i)) :subsume :ruleset array_api_ruleset)\n(sort Value)\n(sort TupleValue)\n(constructor Value_if_ (Boolean Value Value) Value)\n(constructor Int___lt__ (Int Int) Boolean)\n(constructor TupleValue_length (TupleValue) Int)\n(constructor TupleValue___getitem__ (TupleValue Int) Value)\n(constructor Int___sub__ (Int Int) Int)\n(constructor other-TupleValue_self-TupleValue_i-Int__Value_if___Int___lt___i__TupleValue_length_self____TupleValue___getitem___self_i___TupleValue___getitem___other__Int___sub___i__TupleValue_length_self____ (TupleValue TupleValue Int) Value)\n(rewrite (other-TupleValue_self-TupleValue_i-Int__Value_if___Int___lt___i__TupleValue_length_self____TupleValue___getitem___self_i___TupleValue___getitem___other__Int___sub___i__TupleValue_length_self____ other self i) (Value_if_ (Int___lt__ i (TupleValue_length self)) (TupleValue___getitem__ self i) (TupleValue___getitem__ other (Int___sub__ i (TupleValue_length self)))) :subsume :ruleset array_api_ruleset)\n(constructor TupleValue___add__ (TupleValue TupleValue) TupleValue)\n(sort UnstableFn_Value_Int (UnstableFn (Int ) Value))\n(constructor TupleValue___init__ (Int UnstableFn_Value_Int) TupleValue)\n(constructor Int___add__ (Int Int) Int)\n(rewrite (TupleValue___add__ self other) (TupleValue___init__ (Int___add__ (TupleValue_length self) (TupleValue_length other)) (unstable-fn \"other-TupleValue_self-TupleValue_i-Int__Value_if___Int___lt___i__TupleValue_length_self____TupleValue___getitem___self_i___TupleValue___getitem___other__Int___sub___i__TupleValue_length_self____\" other self)) :ruleset array_api_ruleset)\n(constructor Boolean___or__ (Boolean Boolean) Boolean)\n(constructor Value___eq__ (Value Value) Boolean)\n(constructor value-Value_acc-Boolean_j-Value__Boolean___or___acc__Value___eq___value_j__ (Value Boolean Value) Boolean)\n(rewrite (value-Value_acc-Boolean_j-Value__Boolean___or___acc__Value___eq___value_j__ value acc j) (Boolean___or__ acc (Value___eq__ value j)) :subsume :ruleset array_api_ruleset)\n(constructor TupleValue_contains (TupleValue Value) Boolean)\n(sort UnstableFn_Boolean_Boolean_Value (UnstableFn (Boolean Value) Boolean))\n(constructor TupleValue_foldl_boolean (TupleValue UnstableFn_Boolean_Boolean_Value Boolean) Boolean)\n(constructor Boolean___init__ (bool) Boolean)\n(rewrite (TupleValue_contains self value) (TupleValue_foldl_boolean self (unstable-fn \"value-Value_acc-Boolean_j-Value__Boolean___or___acc__Value___eq___value_j__\" value) (Boolean___init__ false)) :ruleset array_api_ruleset)\n(constructor Value_int (Int) Value)\n(constructor TupleInt___getitem__ (TupleInt Int) Int)\n(constructor ti-TupleInt_i-Int__Value_int__TupleInt___getitem___ti_i__ (TupleInt Int) Value)\n(rewrite (ti-TupleInt_i-Int__Value_int__TupleInt___getitem___ti_i__ ti i) (Value_int (TupleInt___getitem__ ti i)) :subsume :ruleset array_api_ruleset)\n(constructor TupleValue_from_tuple_int (TupleInt) TupleValue)\n(constructor TupleInt_length (TupleInt) Int)\n(rewrite (TupleValue_from_tuple_int ti) (TupleValue___init__ (TupleInt_length ti) (unstable-fn \"ti-TupleInt_i-Int__Value_int__TupleInt___getitem___ti_i__\" ti)) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_if_ (Boolean TupleInt TupleInt) TupleInt)\n(constructor TupleTupleInt_length (TupleTupleInt) Int)\n(constructor TupleTupleInt___getitem__ (TupleTupleInt Int) TupleInt)\n(constructor other-TupleTupleInt_self-TupleTupleInt_i-Int__TupleInt_if___Int___lt___i__TupleTupleInt_length_self____TupleTupleInt___getitem___self_i___TupleTupleInt___getitem___other__Int___sub___i__TupleTupleInt_length_self____ (TupleTupleInt TupleTupleInt Int) TupleInt)\n(rewrite (other-TupleTupleInt_self-TupleTupleInt_i-Int__TupleInt_if___Int___lt___i__TupleTupleInt_length_self____TupleTupleInt___getitem___self_i___TupleTupleInt___getitem___other__Int___sub___i__TupleTupleInt_length_self____ other self i) (TupleInt_if_ (Int___lt__ i (TupleTupleInt_length self)) (TupleTupleInt___getitem__ self i) (TupleTupleInt___getitem__ other (Int___sub__ i (TupleTupleInt_length self)))) :subsume :ruleset array_api_ruleset)\n(constructor TupleTupleInt___add__ (TupleTupleInt TupleTupleInt) TupleTupleInt)\n(rewrite (TupleTupleInt___add__ self other) (TupleTupleInt___init__ (Int___add__ (TupleTupleInt_length self) (TupleTupleInt_length other)) (unstable-fn \"other-TupleTupleInt_self-TupleTupleInt_i-Int__TupleInt_if___Int___lt___i__TupleTupleInt_length_self____TupleTupleInt___getitem___self_i___TupleTupleInt___getitem___other__Int___sub___i__TupleTupleInt_length_self____\" other self)) :ruleset array_api_ruleset)\n(constructor n-Int_self-TupleTupleInt_i-Int__TupleTupleInt___getitem___self__Int___add___i_n__ (Int TupleTupleInt Int) TupleInt)\n(rewrite (n-Int_self-TupleTupleInt_i-Int__TupleTupleInt___getitem___self__Int___add___i_n__ n self i) (TupleTupleInt___getitem__ self (Int___add__ i n)) :subsume :ruleset array_api_ruleset)\n(constructor TupleTupleInt_drop (TupleTupleInt Int) TupleTupleInt)\n(rewrite (TupleTupleInt_drop self n) (TupleTupleInt___init__ (Int___sub__ (TupleTupleInt_length self) n) (unstable-fn \"n-Int_self-TupleTupleInt_i-Int__TupleTupleInt___getitem___self__Int___add___i_n__\" n self)) :ruleset array_api_ruleset)\n(sort UnstableFn_Int_TupleInt (UnstableFn (TupleInt ) Int))\n(constructor f-UnstableFn_Int_TupleInt_self-TupleTupleInt_i-Int__unstable-app_f__TupleTupleInt___getitem___self_i__ (UnstableFn_Int_TupleInt TupleTupleInt Int) Int)\n(rewrite (f-UnstableFn_Int_TupleInt_self-TupleTupleInt_i-Int__unstable-app_f__TupleTupleInt___getitem___self_i__ f self i) (unstable-app f (TupleTupleInt___getitem__ self i)) :subsume :ruleset array_api_ruleset)\n(constructor TupleTupleInt_map_int (TupleTupleInt UnstableFn_Int_TupleInt) TupleInt)\n(sort UnstableFn_Int_Int (UnstableFn (Int ) Int))\n(constructor TupleInt___init__ (Int UnstableFn_Int_Int) TupleInt)\n(rewrite (TupleTupleInt_map_int self f) (TupleInt___init__ (TupleTupleInt_length self) (unstable-fn \"f-UnstableFn_Int_TupleInt_self-TupleTupleInt_i-Int__unstable-app_f__TupleTupleInt___getitem___self_i__\" f self)) :ruleset array_api_ruleset)\n(constructor x-TupleInt__TupleInt_length_x_ (TupleInt) Int)\n(rewrite (x-TupleInt__TupleInt_length_x_ x) (TupleInt_length x) :subsume :ruleset array_api_ruleset)\n(constructor Int___mod__ (Int Int) Int)\n(constructor Int___floordiv__ (Int Int) Int)\n(constructor TupleInt_product (TupleInt) Int)\n(constructor i-Int_self-TupleTupleInt_j-Int__TupleInt___getitem____TupleTupleInt___getitem___self_j___Int___mod____Int___floordiv___i__TupleInt_product__TupleTupleInt_map_int__TupleTupleInt_drop_self__Int___add___j__Int___init___1_____unstable-fn__x-TupleInt__TupleInt_length_x________TupleInt_length__TupleTupleInt___getitem___self_j____ (Int TupleTupleInt Int) Int)\n(rewrite (i-Int_self-TupleTupleInt_j-Int__TupleInt___getitem____TupleTupleInt___getitem___self_j___Int___mod____Int___floordiv___i__TupleInt_product__TupleTupleInt_map_int__TupleTupleInt_drop_self__Int___add___j__Int___init___1_____unstable-fn__x-TupleInt__TupleInt_length_x________TupleInt_length__TupleTupleInt___getitem___self_j____ i self j) (TupleInt___getitem__ (TupleTupleInt___getitem__ self j) (Int___mod__ (Int___floordiv__ i (TupleInt_product (TupleTupleInt_map_int (TupleTupleInt_drop self (Int___add__ j (Int___init__ 1))) (unstable-fn \"x-TupleInt__TupleInt_length_x_\")))) (TupleInt_length (TupleTupleInt___getitem__ self j)))) :subsume :ruleset array_api_ruleset)\n(constructor self-TupleTupleInt_i-Int__TupleInt___init____TupleTupleInt_length_self___unstable-fn__i-Int_self-TupleTupleInt_j-Int__TupleInt___getitem____TupleTupleInt___getitem___self_j___Int___mod____Int___floordiv___i__TupleInt_product__TupleTupleInt_map_int__TupleTupleInt_drop_self__Int___add___j__Int___init___1_____unstable-fn__x-TupleInt__TupleInt_length_x________TupleInt_length__TupleTupleInt___getitem___self_j______i_self__ (TupleTupleInt Int) TupleInt)\n(rewrite (self-TupleTupleInt_i-Int__TupleInt___init____TupleTupleInt_length_self___unstable-fn__i-Int_self-TupleTupleInt_j-Int__TupleInt___getitem____TupleTupleInt___getitem___self_j___Int___mod____Int___floordiv___i__TupleInt_product__TupleTupleInt_map_int__TupleTupleInt_drop_self__Int___add___j__Int___init___1_____unstable-fn__x-TupleInt__TupleInt_length_x________TupleInt_length__TupleTupleInt___getitem___self_j______i_self__ self i) (TupleInt___init__ (TupleTupleInt_length self) (unstable-fn \"i-Int_self-TupleTupleInt_j-Int__TupleInt___getitem____TupleTupleInt___getitem___self_j___Int___mod____Int___floordiv___i__TupleInt_product__TupleTupleInt_map_int__TupleTupleInt_drop_self__Int___add___j__Int___init___1_____unstable-fn__x-TupleInt__TupleInt_length_x________TupleInt_length__TupleTupleInt___getitem___self_j____\" i self)) :subsume :ruleset array_api_ruleset)\n(constructor TupleTupleInt_product (TupleTupleInt) TupleTupleInt)\n(rewrite (TupleTupleInt_product self) (TupleTupleInt___init__ (TupleInt_product (TupleTupleInt_map_int self (unstable-fn \"x-TupleInt__TupleInt_length_x_\"))) (unstable-fn \"self-TupleTupleInt_i-Int__TupleInt___init____TupleTupleInt_length_self___unstable-fn__i-Int_self-TupleTupleInt_j-Int__TupleInt___getitem____TupleTupleInt___getitem___self_j___Int___mod____Int___floordiv___i__TupleInt_product__TupleTupleInt_map_int__TupleTupleInt_drop_self__Int___add___j__Int___init___1_____unstable-fn__x-TupleInt__TupleInt_length_x________TupleInt_length__TupleTupleInt___getitem___self_j______i_self__\" self)) :subsume :ruleset array_api_ruleset)\n(constructor i-Int__-Int_i (Int Int) Int)\n(rewrite (i-Int__-Int_i i _) i :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_single (Int) TupleInt)\n(rewrite (TupleInt_single i) (TupleInt___init__ (Int___init__ 1) (unstable-fn \"i-Int__-Int_i\" i)) :ruleset array_api_ruleset)\n(constructor i-Int_i (Int) Int)\n(rewrite (i-Int_i i) i :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_range (Int) TupleInt)\n(rewrite (TupleInt_range stop) (TupleInt___init__ stop (unstable-fn \"i-Int_i\")) :subsume :ruleset array_api_ruleset)\n(constructor Int_if_ (Boolean Int Int) Int)\n(constructor other-TupleInt_self-TupleInt_i-Int__Int_if___Int___lt___i__TupleInt_length_self____TupleInt___getitem___self_i___TupleInt___getitem___other__Int___sub___i__TupleInt_length_self____ (TupleInt TupleInt Int) Int)\n(rewrite (other-TupleInt_self-TupleInt_i-Int__Int_if___Int___lt___i__TupleInt_length_self____TupleInt___getitem___self_i___TupleInt___getitem___other__Int___sub___i__TupleInt_length_self____ other self i) (Int_if_ (Int___lt__ i (TupleInt_length self)) (TupleInt___getitem__ self i) (TupleInt___getitem__ other (Int___sub__ i (TupleInt_length self)))) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt___add__ (TupleInt TupleInt) TupleInt)\n(rewrite (TupleInt___add__ self other) (TupleInt___init__ (Int___add__ (TupleInt_length self) (TupleInt_length other)) (unstable-fn \"other-TupleInt_self-TupleInt_i-Int__Int_if___Int___lt___i__TupleInt_length_self____TupleInt___getitem___self_i___TupleInt___getitem___other__Int___sub___i__TupleInt_length_self____\" other self)) :ruleset array_api_ruleset)\n(constructor Int___eq__ (Int Int) Boolean)\n(constructor i-Int_acc-Boolean_j-Int__Boolean___or___acc__Int___eq___i_j__ (Int Boolean Int) Boolean)\n(rewrite (i-Int_acc-Boolean_j-Int__Boolean___or___acc__Int___eq___i_j__ i acc j) (Boolean___or__ acc (Int___eq__ i j)) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_contains (TupleInt Int) Boolean)\n(sort UnstableFn_Boolean_Boolean_Int (UnstableFn (Boolean Int) Boolean))\n(constructor TupleInt_foldl_boolean (TupleInt UnstableFn_Boolean_Boolean_Int Boolean) Boolean)\n(rewrite (TupleInt_contains self i) (TupleInt_foldl_boolean self (unstable-fn \"i-Int_acc-Boolean_j-Int__Boolean___or___acc__Int___eq___i_j__\" i) (Boolean___init__ false)) :subsume :ruleset array_api_ruleset)\n(sort UnstableFn_Boolean_Int (UnstableFn (Int ) Boolean))\n(constructor TupleInt_append (TupleInt Int) TupleInt)\n(constructor f-UnstableFn_Boolean_Int_acc-TupleInt_v-Int__TupleInt_if___unstable-app_f_v___TupleInt_append_acc_v__acc_ (UnstableFn_Boolean_Int TupleInt Int) TupleInt)\n(rewrite (f-UnstableFn_Boolean_Int_acc-TupleInt_v-Int__TupleInt_if___unstable-app_f_v___TupleInt_append_acc_v__acc_ f acc v) (TupleInt_if_ (unstable-app f v) (TupleInt_append acc v) acc) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_filter (TupleInt UnstableFn_Boolean_Int) TupleInt)\n(sort UnstableFn_TupleInt_TupleInt_Int (UnstableFn (TupleInt Int) TupleInt))\n(constructor TupleInt_foldl_tuple_int (TupleInt UnstableFn_TupleInt_TupleInt_Int TupleInt) TupleInt)\n(constructor TupleInt_EMPTY () TupleInt)\n(rewrite (TupleInt_filter self f) (TupleInt_foldl_tuple_int self (unstable-fn \"f-UnstableFn_Boolean_Int_acc-TupleInt_v-Int__TupleInt_if___unstable-app_f_v___TupleInt_append_acc_v__acc_\" f) (TupleInt_EMPTY )) :subsume :ruleset array_api_ruleset)\n(constructor f-UnstableFn_Int_Int_self-TupleInt_i-Int__unstable-app_f__TupleInt___getitem___self_i__ (UnstableFn_Int_Int TupleInt Int) Int)\n(rewrite (f-UnstableFn_Int_Int_self-TupleInt_i-Int__unstable-app_f__TupleInt___getitem___self_i__ f self i) (unstable-app f (TupleInt___getitem__ self i)) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_map (TupleInt UnstableFn_Int_Int) TupleInt)\n(rewrite (TupleInt_map self f) (TupleInt___init__ (TupleInt_length self) (unstable-fn \"f-UnstableFn_Int_Int_self-TupleInt_i-Int__unstable-app_f__TupleInt___getitem___self_i__\" f self)) :subsume :ruleset array_api_ruleset)\n(constructor n-Int_self-TupleInt_i-Int__TupleInt___getitem___self__Int___add___i_n__ (Int TupleInt Int) Int)\n(rewrite (n-Int_self-TupleInt_i-Int__TupleInt___getitem___self__Int___add___i_n__ n self i) (TupleInt___getitem__ self (Int___add__ i n)) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_drop (TupleInt Int) TupleInt)\n(rewrite (TupleInt_drop self n) (TupleInt___init__ (Int___sub__ (TupleInt_length self) n) (unstable-fn \"n-Int_self-TupleInt_i-Int__TupleInt___getitem___self__Int___add___i_n__\" n self)) :ruleset array_api_ruleset)\n(constructor Int___mul__ (Int Int) Int)\n(constructor acc-Int_i-Int__Int___mul___acc_i_ (Int Int) Int)\n(rewrite (acc-Int_i-Int__Int___mul___acc_i_ acc i) (Int___mul__ acc i) :subsume :ruleset array_api_ruleset)\n(sort UnstableFn_Int_Int_Int (UnstableFn (Int Int) Int))\n(constructor TupleInt_foldl (TupleInt UnstableFn_Int_Int_Int Int) Int)\n(rewrite (TupleInt_product self) (TupleInt_foldl self (unstable-fn \"acc-Int_i-Int__Int___mul___acc_i_\") (Int___init__ 1)) :ruleset array_api_ruleset)\n(constructor f-UnstableFn_TupleInt_Int_self-TupleInt_i-Int__unstable-app_f__TupleInt___getitem___self_i__ (UnstableFn_TupleInt_Int TupleInt Int) TupleInt)\n(rewrite (f-UnstableFn_TupleInt_Int_self-TupleInt_i-Int__unstable-app_f__TupleInt___getitem___self_i__ f self i) (unstable-app f (TupleInt___getitem__ self i)) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_map_tuple_int (TupleInt UnstableFn_TupleInt_Int) TupleTupleInt)\n(rewrite (TupleInt_map_tuple_int self f) (TupleTupleInt___init__ (TupleInt_length self) (unstable-fn \"f-UnstableFn_TupleInt_Int_self-TupleInt_i-Int__unstable-app_f__TupleInt___getitem___self_i__\" f self)) :ruleset array_api_ruleset)\n(constructor self-TupleInt_i-Int__TupleInt___getitem___self_i_ (TupleInt Int) Int)\n(rewrite (self-TupleInt_i-Int__TupleInt___getitem___self_i_ self i) (TupleInt___getitem__ self i) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_select (TupleInt TupleInt) TupleInt)\n(rewrite (TupleInt_select self indices) (TupleInt_map indices (unstable-fn \"self-TupleInt_i-Int__TupleInt___getitem___self_i_\" self)) :ruleset array_api_ruleset)\n(constructor Boolean___invert__ (Boolean) Boolean)\n(constructor indices-TupleInt_i-Int__Boolean___invert____TupleInt_contains_indices_i__ (TupleInt Int) Boolean)\n(rewrite (indices-TupleInt_i-Int__Boolean___invert____TupleInt_contains_indices_i__ indices i) (Boolean___invert__ (TupleInt_contains indices i)) :subsume :ruleset array_api_ruleset)\n(constructor TupleInt_deselect (TupleInt TupleInt) TupleInt)\n(rewrite (TupleInt_deselect self indices) (TupleInt_map (TupleInt_filter (TupleInt_range (TupleInt_length self)) (unstable-fn \"indices-TupleInt_i-Int__Boolean___invert____TupleInt_contains_indices_i__\" indices)) (unstable-fn \"self-TupleInt_i-Int__TupleInt___getitem___self_i_\" self)) :ruleset array_api_ruleset)\n(constructor value-Value__-TupleInt_value (Value TupleInt) Value)\n(rewrite (value-Value__-TupleInt_value value _) value :subsume :ruleset array_api_ruleset)\n(constructor NDArray_scalar (Value) NDArray)\n(sort UnstableFn_Value_TupleInt (UnstableFn (TupleInt ) Value))\n(constructor NDArray___init__ (TupleInt DType UnstableFn_Value_TupleInt) NDArray)\n(constructor Value_dtype (Value) DType)\n(rewrite (NDArray_scalar value) (NDArray___init__ (TupleInt_EMPTY ) (Value_dtype value) (unstable-fn \"value-Value__-TupleInt_value\" value)) :ruleset array_api_ruleset)\n(sort TupleNDArray)\n(constructor NDArray_if_ (Boolean NDArray NDArray) NDArray)\n(constructor TupleNDArray_length (TupleNDArray) Int)\n(constructor TupleNDArray___getitem__ (TupleNDArray Int) NDArray)\n(constructor other-TupleNDArray_self-TupleNDArray_i-Int__NDArray_if___Int___lt___i__TupleNDArray_length_self____TupleNDArray___getitem___self_i___TupleNDArray___getitem___other__Int___sub___i__TupleNDArray_length_self____ (TupleNDArray TupleNDArray Int) NDArray)\n(rewrite (other-TupleNDArray_self-TupleNDArray_i-Int__NDArray_if___Int___lt___i__TupleNDArray_length_self____TupleNDArray___getitem___self_i___TupleNDArray___getitem___other__Int___sub___i__TupleNDArray_length_self____ other self i) (NDArray_if_ (Int___lt__ i (TupleNDArray_length self)) (TupleNDArray___getitem__ self i) (TupleNDArray___getitem__ other (Int___sub__ i (TupleNDArray_length self)))) :subsume :ruleset array_api_ruleset)\n(constructor TupleNDArray___add__ (TupleNDArray TupleNDArray) TupleNDArray)\n(sort UnstableFn_NDArray_Int (UnstableFn (Int ) NDArray))\n(constructor TupleNDArray___init__ (Int UnstableFn_NDArray_Int) TupleNDArray)\n(rewrite (TupleNDArray___add__ self other) (TupleNDArray___init__ (Int___add__ (TupleNDArray_length self) (TupleNDArray_length other)) (unstable-fn \"other-TupleNDArray_self-TupleNDArray_i-Int__NDArray_if___Int___lt___i__TupleNDArray_length_self____TupleNDArray___getitem___self_i___TupleNDArray___getitem___other__Int___sub___i__TupleNDArray_length_self____\" other self)) :ruleset array_api_ruleset)\n(sort LoopNestAPI)\n(constructor LoopNestAPI_indices (LoopNestAPI) TupleTupleInt)\n(constructor LoopNestAPI_get_dims (LoopNestAPI) TupleInt)\n(rewrite (LoopNestAPI_indices self) (TupleTupleInt_product (TupleInt_map_tuple_int (LoopNestAPI_get_dims self) (unstable-fn \"TupleInt_range\"))) :ruleset array_api_ruleset)\n(sort OptionalLoopNestAPI)\n(constructor LoopNestAPI_from_tuple (TupleInt) OptionalLoopNestAPI)\n(constructor OptionalLoopNestAPI_NONE () OptionalLoopNestAPI)\n(rewrite (LoopNestAPI_from_tuple (TupleInt_EMPTY )) (OptionalLoopNestAPI_NONE ) :subsume :ruleset array_api_ruleset)\n(constructor OptionalLoopNestAPI___init__ (LoopNestAPI) OptionalLoopNestAPI)\n(constructor LoopNestAPI___init__ (Int OptionalLoopNestAPI) LoopNestAPI)\n(rewrite (LoopNestAPI_from_tuple (TupleInt_append ti dim)) (OptionalLoopNestAPI___init__ (LoopNestAPI___init__ dim (LoopNestAPI_from_tuple ti))) :subsume :ruleset array_api_ruleset)\n(rewrite (LoopNestAPI_get_dims (LoopNestAPI___init__ dim (OptionalLoopNestAPI_NONE ))) (TupleInt_single dim) :subsume :ruleset array_api_ruleset)\n(rewrite (LoopNestAPI_get_dims (LoopNestAPI___init__ dim (OptionalLoopNestAPI___init__ lna))) (TupleInt_append (LoopNestAPI_get_dims lna) dim) :subsume :ruleset array_api_ruleset)\n(constructor OptionalLoopNestAPI_unwrap (OptionalLoopNestAPI) LoopNestAPI)\n(rewrite (OptionalLoopNestAPI_unwrap (OptionalLoopNestAPI___init__ lna)) lna :ruleset array_api_ruleset)\n(constructor axis-TupleInt_i-Int__Boolean___invert____TupleInt_contains_axis_i__ (TupleInt Int) Boolean)\n(rewrite (axis-TupleInt_i-Int__Boolean___invert____TupleInt_contains_axis_i__ axis i) (Boolean___invert__ (TupleInt_contains axis i)) :subsume :ruleset array_api_ruleset)\n(constructor dims-TupleInt_i-Int__TupleInt___getitem___dims_i_ (TupleInt Int) Int)\n(rewrite (dims-TupleInt_i-Int__TupleInt___getitem___dims_i_ dims i) (TupleInt___getitem__ dims i) :subsume :ruleset array_api_ruleset)\n(constructor axis-TupleInt_i-Int__TupleInt_contains_axis_i_ (TupleInt Int) Boolean)\n(rewrite (axis-TupleInt_i-Int__TupleInt_contains_axis_i_ axis i) (TupleInt_contains axis i) :subsume :ruleset array_api_ruleset)\n(sort ShapeAPI)\n(constructor ShapeAPI_deselect (ShapeAPI TupleInt) ShapeAPI)\n(constructor ShapeAPI___init__ (TupleInt) ShapeAPI)\n(rewrite (ShapeAPI_deselect (ShapeAPI___init__ dims) axis) (ShapeAPI___init__ (TupleInt_map (TupleInt_filter (TupleInt_range (TupleInt_length dims)) (unstable-fn \"axis-TupleInt_i-Int__Boolean___invert____TupleInt_contains_axis_i__\" axis)) (unstable-fn \"dims-TupleInt_i-Int__TupleInt___getitem___dims_i_\" dims))) :subsume :ruleset array_api_ruleset)\n(constructor ShapeAPI_select (ShapeAPI TupleInt) ShapeAPI)\n(rewrite (ShapeAPI_select (ShapeAPI___init__ dims) axis) (ShapeAPI___init__ (TupleInt_map (TupleInt_filter (TupleInt_range (TupleInt_length dims)) (unstable-fn \"axis-TupleInt_i-Int__TupleInt_contains_axis_i_\" axis)) (unstable-fn \"dims-TupleInt_i-Int__TupleInt___getitem___dims_i_\" dims))) :subsume :ruleset array_api_ruleset)\n(constructor ShapeAPI_to_tuple (ShapeAPI) TupleInt)\n(rewrite (ShapeAPI_to_tuple (ShapeAPI___init__ dims)) dims :subsume :ruleset array_api_ruleset)\n(constructor NDArray_size (NDArray) Int)\n(constructor NDArray_shape (NDArray) TupleInt)\n(rewrite (NDArray_size x) (TupleInt_foldl (NDArray_shape x) (unstable-fn \"Int___mul__\") (Int___init__ 1)) :ruleset array_api_ruleset)\n(constructor unique_values (NDArray) NDArray)\n(constructor NDArray_vector (TupleValue) NDArray)\n(constructor possible_values (Value) TupleValue)\n(constructor NDArray_index (NDArray TupleInt) Value)\n(constructor ALL_INDICES () TupleInt)\n(rewrite (unique_values a) (NDArray_vector (possible_values (NDArray_index a (ALL_INDICES )))) :ruleset array_api_ruleset)\n(constructor Value_isfinite (Value) Boolean)\n(rewrite (Value_isfinite (Value_int i)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(constructor Value_bool (Boolean) Value)\n(rewrite (Value_isfinite (Value_bool b)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(sort Float)\n(constructor Value_float (Float) Value)\n(constructor Float___init__ (f64) Float :cost 3)\n(rewrite (Value_isfinite (Value_float (Float___init__ f))) (Boolean___init__ true) :when ((!= f NaN)) :ruleset array_api_ruleset)\n(constructor isfinite (NDArray) NDArray)\n(sort OptionalIntOrTuple)\n(constructor sum (NDArray OptionalIntOrTuple) NDArray)\n(constructor OptionalIntOrTuple_none () OptionalIntOrTuple)\n(rewrite (isfinite (sum arr (OptionalIntOrTuple_none ))) (NDArray_scalar (Value_bool (Value_isfinite (NDArray_index arr (ALL_INDICES ))))) :ruleset array_api_ruleset)\n(constructor assume_value_one_of (NDArray TupleValue) NDArray)\n(rewrite (NDArray_shape (assume_value_one_of x vs)) (NDArray_shape x) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (assume_value_one_of x vs)) (NDArray_dtype x) :ruleset array_api_ruleset)\n(rule ((= v (NDArray_index (assume_value_one_of x vs) idx)))\n      ((union v (NDArray_index x idx))\n       (union (possible_values v) vs))\n        :ruleset array_api_ruleset )\n(rewrite (NDArray_shape (assume_isfinite x)) (NDArray_shape x) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (assume_isfinite x)) (NDArray_dtype x) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (assume_isfinite x) ti) (NDArray_index x ti) :ruleset array_api_ruleset)\n(rewrite (Value_isfinite (NDArray_index (assume_isfinite x) ti)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (NDArray_shape (assume_shape x shape)) shape :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (assume_shape x shape)) (NDArray_dtype x) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (assume_shape x shape) idx) (NDArray_index x idx) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (assume_dtype x dtype)) dtype :ruleset array_api_ruleset)\n(rewrite (NDArray_shape (assume_dtype x dtype)) (NDArray_shape x) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (assume_dtype x dtype) idx) (NDArray_index x idx) :ruleset array_api_ruleset)\n(sort IndexKey)\n(constructor NDArray___getitem__ (NDArray IndexKey) NDArray)\n(constructor IndexKey_int (Int) IndexKey)\n(rewrite (NDArray___getitem__ x (IndexKey_int i)) (NDArray_scalar (NDArray_index x (TupleInt_single i))) :ruleset array_api_ruleset)\n(sort OptionalBool)\n(constructor reshape (NDArray TupleInt OptionalBool) NDArray)\n(rule ((= __a (reshape x shape copy)))\n      ((NDArray_shape x)\n       (TupleInt_length (NDArray_shape x)))\n        :ruleset array_api_ruleset )\n(rule ((reshape x shape copy))\n      ((TupleInt_length shape)\n       (TupleInt___getitem__ shape (Int___init__ 0)))\n        :ruleset array_api_ruleset )\n(rewrite (reshape x shape copy) x :when ((= (TupleInt_length (NDArray_shape x)) (Int___init__ 1)) (= (TupleInt_length shape) (Int___init__ 1)) (= (TupleInt___getitem__ shape (Int___init__ 0)) (Int___init__ -1))) :ruleset array_api_ruleset)\n(rewrite (NDArray_shape (NDArray_vector vs)) (TupleInt_single (TupleValue_length vs)) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (NDArray_vector vs)) (Value_dtype (TupleValue___getitem__ vs (Int___init__ 0))) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (NDArray_vector vs) ti) (TupleValue___getitem__ vs (TupleInt___getitem__ ti (Int___init__ 0))) :ruleset array_api_ruleset)\n(rewrite (NDArray_shape (NDArray_scalar v)) (TupleInt_EMPTY ) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (NDArray_scalar v)) (Value_dtype v) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (NDArray_scalar v) (TupleInt_EMPTY )) v :ruleset array_api_ruleset)\n(constructor any (NDArray) NDArray)\n(constructor Value_to_truthy_value (Value) Value)\n(rewrite (any x) (NDArray_scalar (Value_bool (TupleValue_contains (possible_values (Value_to_truthy_value (NDArray_index x (ALL_INDICES )))) (Value_bool (Boolean___init__ true))))) :ruleset array_api_ruleset)\n(constructor NDArray___lt__ (NDArray NDArray) NDArray)\n(constructor Value___lt__ (Value Value) Value)\n(constructor broadcast_index (TupleInt TupleInt TupleInt) TupleInt)\n(constructor broadcast_shapes (TupleInt TupleInt) TupleInt)\n(rewrite (NDArray_index (NDArray___lt__ x y) idx) (Value___lt__ (NDArray_index x (broadcast_index (NDArray_shape x) (broadcast_shapes (NDArray_shape x) (NDArray_shape y)) idx)) (NDArray_index y (broadcast_index (NDArray_shape y) (broadcast_shapes (NDArray_shape x) (NDArray_shape y)) idx))) :ruleset array_api_ruleset)\n(constructor NDArray___truediv__ (NDArray NDArray) NDArray)\n(constructor Value___truediv__ (Value Value) Value)\n(rewrite (NDArray_index (NDArray___truediv__ x y) idx) (Value___truediv__ (NDArray_index x (broadcast_index (NDArray_shape x) (broadcast_shapes (NDArray_shape x) (NDArray_shape y)) idx)) (NDArray_index y (broadcast_index (NDArray_shape y) (broadcast_shapes (NDArray_shape x) (NDArray_shape y)) idx))) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (NDArray_scalar v) idx) v :ruleset array_api_ruleset)\n(constructor astype (NDArray DType) NDArray)\n(constructor Value_astype (Value DType) Value)\n(rewrite (NDArray_index (astype x dtype) idx) (Value_astype (NDArray_index x idx) dtype) :ruleset array_api_ruleset)\n(relation greater_zero (Value))\n(constructor unique_counts (NDArray) TupleNDArray)\n(rule ((= v (NDArray_index (TupleNDArray___getitem__ (unique_counts x) (Int___init__ 1)) idx)))\n      ((greater_zero v))\n        :ruleset array_api_ruleset )\n(rule ((greater_zero v)\n       (= v1 (Value_astype v dtype)))\n      ((greater_zero v1))\n        :ruleset array_api_ruleset )\n(rule ((= v (Value_float (Float___init__ f)))\n       (> f 0.0))\n      ((greater_zero v))\n        :ruleset array_api_ruleset )\n(rule ((= v (Value_int (Int___init__ i)))\n       (> i 0))\n      ((greater_zero v))\n        :ruleset array_api_ruleset )\n(rule ((greater_zero v)\n       (greater_zero v1)\n       (= v2 (Value___truediv__ v v1)))\n      ((greater_zero v2))\n        :ruleset array_api_ruleset )\n(rule ((greater_zero v)\n       (= v1 (Value___lt__ v (Value_int (Int___init__ 0)))))\n      ((union v1 (Value_bool (Boolean___init__ false))))\n        :ruleset array_api_ruleset )\n(constructor TupleValue_append (TupleValue Value) TupleValue)\n(constructor TupleValue_EMPTY () TupleValue)\n(rewrite (possible_values (Value_bool b)) (TupleValue_append (TupleValue_EMPTY ) (Value_bool b)) :ruleset array_api_ruleset)\n(rule ((= v1 (Value_astype v dtype))\n       (greater_zero v))\n      ((greater_zero v1))\n        :ruleset array_api_ruleset )\n(constructor svd (NDArray Boolean) TupleNDArray)\n(rewrite (svd x full_matrices) (TupleNDArray___init__ (Int___init__ 3) (unstable-fn \"TupleNDArray___getitem__\" (svd x full_matrices))) :ruleset array_api_ruleset)\n(constructor unique_inverse (NDArray) TupleNDArray)\n(rewrite (unique_inverse x) (TupleNDArray___init__ (Int___init__ 2) (unstable-fn \"TupleNDArray___getitem__\" (unique_inverse x))) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray___getitem__ (unique_inverse x) (Int___init__ 0)) (unique_values x) :ruleset array_api_ruleset)\n(constructor ndarray-abs (NDArray) NDArray)\n(constructor Float_abs (Float) Float)\n(rewrite (ndarray-abs (NDArray_scalar (Value_float f))) (NDArray_scalar (Value_float (Float_abs f))) :ruleset array_api_ruleset)\n(rewrite (unique_counts x) (TupleNDArray___init__ (Int___init__ 2) (unstable-fn \"TupleNDArray___getitem__\" (unique_counts x))) :ruleset array_api_ruleset)\n(rewrite (sum (TupleNDArray___getitem__ (unique_counts x) (Int___init__ 1)) (OptionalIntOrTuple_none )) (NDArray_scalar (Value_int (NDArray_size x))) :ruleset array_api_ruleset)\n(rewrite (sum (astype (TupleNDArray___getitem__ (unique_counts x) (Int___init__ 1)) dtype) (OptionalIntOrTuple_none )) (astype (NDArray_scalar (Value_int (NDArray_size x))) dtype) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (astype x dtype)) dtype :ruleset array_api_ruleset)\n(rewrite (astype (NDArray_scalar (Value_int (Int___init__ i))) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float___init__ (to-f64 i)))) :ruleset array_api_ruleset)\n(sort OptionalInt)\n(constructor concat (TupleNDArray OptionalInt) NDArray)\n(constructor TupleNDArray_append (TupleNDArray NDArray) TupleNDArray)\n(constructor TupleNDArray_EMPTY () TupleNDArray)\n(constructor OptionalInt_none () OptionalInt)\n(rewrite (concat (TupleNDArray_append (TupleNDArray_EMPTY ) x) (OptionalInt_none )) x :ruleset array_api_ruleset)\n(rewrite (unique_values (unique_values x)) (unique_values x) :ruleset array_api_ruleset)\n(rewrite (sum (NDArray___truediv__ x (NDArray_scalar v)) (OptionalIntOrTuple_none )) (NDArray___truediv__ (sum x (OptionalIntOrTuple_none )) (NDArray_scalar v)) :ruleset array_api_ruleset)\n(constructor NDArray_ndim (NDArray) Int)\n(sort OptionalDType)\n(sort OptionalDevice)\n(constructor asarray (NDArray OptionalDType OptionalBool OptionalDevice) NDArray)\n(constructor OptionalDevice_none () OptionalDevice)\n(rewrite (NDArray_ndim (asarray a d ob (OptionalDevice_none ))) (NDArray_ndim a) :ruleset array_api_ruleset)\n(constructor OptionalDType_none () OptionalDType)\n(constructor OptionalBool_none () OptionalBool)\n(rewrite (asarray a (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )) a :ruleset array_api_ruleset)\n(constructor check_index (Int Int) Int)\n(constructor Boolean___and__ (Boolean Boolean) Boolean)\n(constructor Int___ge__ (Int Int) Boolean)\n(constructor Int_NEVER () Int)\n(rewrite (check_index length idx) (Int_if_ (Boolean___and__ (Int___ge__ idx (Int___init__ 0)) (Int___lt__ idx length)) idx (Int_NEVER )) :ruleset array_api_ruleset)\n(sort Vec_NDArray (Vec NDArray))\n(function TupleNDArray_to_vec (TupleNDArray) Vec_NDArray :no-merge)\n(constructor TupleNDArray_from_vec (Vec_NDArray) TupleNDArray)\n(rule ((= tv (TupleNDArray_from_vec vs)))\n      ((set (TupleNDArray_to_vec tv) vs))\n        :ruleset array_api_ruleset )\n(rewrite (TupleNDArray_length (TupleNDArray___init__ length idx_fn)) length :ruleset array_api_ruleset)\n(rewrite (TupleNDArray___getitem__ (TupleNDArray___init__ length idx_fn) idx) (unstable-app idx_fn (check_index idx length)) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray_length (TupleNDArray_EMPTY )) (Int___init__ 0) :ruleset array_api_ruleset)\n(constructor NDArray_NEVER () NDArray)\n(rewrite (TupleNDArray___getitem__ (TupleNDArray_EMPTY ) idx) (NDArray_NEVER ) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray_length (TupleNDArray_append tv v)) (Int___add__ (TupleNDArray_length tv) (Int___init__ 1)) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray___getitem__ (TupleNDArray_append tv v) idx) (NDArray_if_ (Int___eq__ idx (TupleNDArray_length tv)) v (TupleNDArray___getitem__ tv idx)) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray___init__ (Int___init__ 0) idx_fn) (TupleNDArray_EMPTY ) :subsume :ruleset array_api_ruleset)\n(rewrite (TupleNDArray___init__ (Int___init__ k) idx_fn) (TupleNDArray_append (TupleNDArray___init__ (Int___init__ (- k 1)) idx_fn) (unstable-app idx_fn (Int___init__ (- k 1)))) :subsume :when ((> k 0)) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray_EMPTY ) (TupleNDArray_from_vec (vec-of )) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray_append (TupleNDArray_from_vec vs) v) (TupleNDArray_from_vec (vec-append vs (vec-of v))) :ruleset array_api_ruleset)\n(rule ((= (TupleNDArray_append tv v) (TupleNDArray_append tv1 v1)))\n      ((union tv tv1)\n       (union v v1))\n        :ruleset array_api_ruleset )\n(rewrite (NDArray_shape (NDArray___init__ shape dtype idx_fn)) shape :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (NDArray___init__ shape dtype idx_fn)) dtype :ruleset array_api_ruleset)\n(rewrite (NDArray_index (NDArray___init__ shape dtype idx_fn) idx) (unstable-app idx_fn idx) :subsume :ruleset array_api_ruleset)\n(rewrite (NDArray_ndim x) (TupleInt_length (NDArray_shape x)) :ruleset array_api_ruleset)\n(constructor NDArray_to_value (NDArray) Value)\n(rewrite (NDArray_to_value x) (NDArray_index x (TupleInt_EMPTY )) :ruleset array_api_ruleset)\n(constructor NDArray_to_values (NDArray) TupleValue)\n(rewrite (NDArray_to_values (NDArray_vector tv)) tv :ruleset array_api_ruleset)\n(rewrite (NDArray___truediv__ (NDArray_scalar (Value_float f)) (NDArray_scalar (Value_float f))) (NDArray_scalar (Value_float (Float___init__ 1.0))) :ruleset array_api_ruleset)\n(constructor NDArray___sub__ (NDArray NDArray) NDArray)\n(rewrite (NDArray___sub__ (NDArray_scalar (Value_float f)) (NDArray_scalar (Value_float f))) (NDArray_scalar (Value_float (Float___init__ 0.0))) :ruleset array_api_ruleset)\n(constructor NDArray___gt__ (NDArray NDArray) NDArray)\n(rewrite (NDArray___gt__ (NDArray_scalar (Value_float (Float___init__ fi1))) (NDArray_scalar (Value_float (Float___init__ fi2)))) (NDArray_scalar (Value_bool (Boolean___init__ true))) :when ((> fi1 fi2)) :ruleset array_api_ruleset)\n(rewrite (NDArray___gt__ (NDArray_scalar (Value_float (Float___init__ fi1))) (NDArray_scalar (Value_float (Float___init__ fi2)))) (NDArray_scalar (Value_bool (Boolean___init__ false))) :when ((<= fi1 fi2)) :ruleset array_api_ruleset)\n(constructor NDArray_T (NDArray) NDArray)\n(rewrite (NDArray_T (NDArray_T x)) x :ruleset array_api_ruleset)\n(rewrite (NDArray_if_ (Boolean___init__ true) x x1) x :ruleset array_api_ruleset)\n(rewrite (NDArray_if_ (Boolean___init__ false) x x1) x1 :ruleset array_api_ruleset)\n(rewrite (TupleValue_length (TupleValue___init__ length idx_fn)) length :ruleset array_api_ruleset)\n(rewrite (TupleValue___getitem__ (TupleValue___init__ length idx_fn) idx) (unstable-app idx_fn (check_index idx length)) :ruleset array_api_ruleset)\n(rewrite (TupleValue_length (TupleValue_EMPTY )) (Int___init__ 0) :ruleset array_api_ruleset)\n(constructor Value_NEVER () Value)\n(rewrite (TupleValue___getitem__ (TupleValue_EMPTY ) idx) (Value_NEVER ) :ruleset array_api_ruleset)\n(rewrite (TupleValue_length (TupleValue_append tv v)) (Int___add__ (TupleValue_length tv) (Int___init__ 1)) :ruleset array_api_ruleset)\n(rewrite (TupleValue___getitem__ (TupleValue_append tv v) idx) (Value_if_ (Int___eq__ idx (TupleValue_length tv)) v (TupleValue___getitem__ tv idx)) :ruleset array_api_ruleset)\n(rewrite (TupleValue___init__ (Int___init__ 0) idx_fn) (TupleValue_EMPTY ) :subsume :ruleset array_api_ruleset)\n(rewrite (TupleValue___init__ (Int___init__ k) idx_fn) (TupleValue_append (TupleValue___init__ (Int___init__ (- k 1)) idx_fn) (unstable-app idx_fn (Int___init__ (- k 1)))) :subsume :when ((> k 0)) :ruleset array_api_ruleset)\n(sort Vec_Value (Vec Value))\n(constructor TupleValue_from_vec (Vec_Value) TupleValue)\n(rewrite (TupleValue_EMPTY ) (TupleValue_from_vec (vec-of )) :ruleset array_api_ruleset)\n(rewrite (TupleValue_append (TupleValue_from_vec vs) v) (TupleValue_from_vec (vec-append vs (vec-of v))) :ruleset array_api_ruleset)\n(rewrite (TupleValue_foldl_boolean (TupleValue_EMPTY ) bool_f b) b :subsume :ruleset array_api_ruleset)\n(rewrite (TupleValue_foldl_boolean (TupleValue_append tv v) bool_f b) (unstable-app bool_f (TupleValue_foldl_boolean tv bool_f b) v) :subsume :ruleset array_api_ruleset)\n(rule ((= (TupleValue_append tv v) (TupleValue_append tv1 v1)))\n      ((union tv tv1)\n       (union v v1))\n        :ruleset array_api_ruleset )\n(constructor DType_int64 () DType)\n(rewrite (Value_dtype (Value_int i)) (DType_int64 ) :ruleset array_api_ruleset)\n(rewrite (Value_dtype (Value_float f)) %__expr_3312772843316740737 :ruleset array_api_ruleset)\n(constructor DType_bool () DType)\n(rewrite (Value_dtype (Value_bool b)) (DType_bool ) :ruleset array_api_ruleset)\n(constructor Value_to_bool (Value) Boolean)\n(rewrite (Value_to_bool (Value_bool b)) b :ruleset array_api_ruleset)\n(constructor Value_to_int (Value) Int)\n(rewrite (Value_to_int (Value_int i)) i :ruleset array_api_ruleset)\n(rewrite (Value_to_truthy_value (Value_bool b)) (Value_bool b) :ruleset array_api_ruleset)\n(constructor Value_conj (Value) Value)\n(rewrite (Value_conj (Value_float f)) (Value_float f) :ruleset array_api_ruleset)\n(constructor Value_real (Value) Value)\n(rewrite (Value_real (Value_float f)) (Value_float f) :ruleset array_api_ruleset)\n(rewrite (Value_real (Value_int i)) (Value_int i) :ruleset array_api_ruleset)\n(rewrite (Value_conj (Value_int i)) (Value_int i) :ruleset array_api_ruleset)\n(constructor Value_sqrt (Value) Value)\n(constructor Float___pow__ (Float Float) Float)\n(rewrite (Value_sqrt (Value_float f)) (Value_float (Float___pow__ f (Float___init__ 0.5))) :ruleset array_api_ruleset)\n(constructor Value___add__ (Value Value) Value)\n(constructor Float_rational (BigRat) Float :cost 2)\n(rewrite (Value___add__ (Value_float (Float_rational (bigrat (bigint 0) (bigint 1)))) v) v :ruleset array_api_ruleset)\n(rewrite (Value_if_ (Boolean___init__ true) v v1) v :ruleset array_api_ruleset)\n(rewrite (Value_if_ (Boolean___init__ false) v v1) v1 :ruleset array_api_ruleset)\n(rewrite (Value___eq__ (Value_int i) (Value_int i1)) (Int___eq__ i i1) :ruleset array_api_ruleset)\n(constructor Float___eq__ (Float Float) Boolean)\n(rewrite (Value___eq__ (Value_float f) (Value_float f1)) (Float___eq__ f f1) :ruleset array_api_ruleset)\n(constructor Boolean___eq__ (Boolean Boolean) Boolean)\n(rewrite (Value___eq__ (Value_bool b) (Value_bool b1)) (Boolean___eq__ b b1) :ruleset array_api_ruleset)\n(sort IsDtypeKind)\n(constructor isdtype (DType IsDtypeKind) Boolean)\n(constructor DType_float32 () DType)\n(constructor IsDtypeKind_string (String) IsDtypeKind)\n(rewrite (isdtype (DType_float32 ) (IsDtypeKind_string \"integral\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype %__expr_3312772843316740737 (IsDtypeKind_string \"integral\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(constructor DType_object () DType)\n(rewrite (isdtype (DType_object ) (IsDtypeKind_string \"integral\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int64 ) (IsDtypeKind_string \"integral\")) (Boolean___init__ true) :ruleset array_api_ruleset)\n(constructor DType_int32 () DType)\n(rewrite (isdtype (DType_int32 ) (IsDtypeKind_string \"integral\")) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_float32 ) (IsDtypeKind_string \"real floating\")) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (isdtype %__expr_3312772843316740737 (IsDtypeKind_string \"real floating\")) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_object ) (IsDtypeKind_string \"real floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int64 ) (IsDtypeKind_string \"real floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int32 ) (IsDtypeKind_string \"real floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_float32 ) (IsDtypeKind_string \"complex floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype %__expr_3312772843316740737 (IsDtypeKind_string \"complex floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_object ) (IsDtypeKind_string \"complex floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int64 ) (IsDtypeKind_string \"complex floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int32 ) (IsDtypeKind_string \"complex floating\")) (Boolean___init__ false) :ruleset array_api_ruleset)\n(constructor IsDtypeKind_NULL () IsDtypeKind)\n(rewrite (isdtype d (IsDtypeKind_NULL )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(constructor IsDtypeKind_dtype (DType) IsDtypeKind)\n(rewrite (isdtype d (IsDtypeKind_dtype d)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(constructor IsDtypeKind___or__ (IsDtypeKind IsDtypeKind) IsDtypeKind :cost 10)\n(rewrite (isdtype d (IsDtypeKind___or__ k1 k2)) (Boolean___or__ (isdtype d k1) (isdtype d k2)) :ruleset array_api_ruleset)\n(rewrite (IsDtypeKind___or__ k1 (IsDtypeKind_NULL )) k1 :ruleset array_api_ruleset)\n(rewrite (DType___eq__ %__expr_3312772843316740737 %__expr_3312772843316740737) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ %__expr_3312772843316740737 (DType_float32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ %__expr_3312772843316740737 (DType_int32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ %__expr_3312772843316740737 (DType_int64 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ %__expr_3312772843316740737 (DType_object )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32 ) %__expr_3312772843316740737) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32 ) (DType_float32 )) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32 ) (DType_int32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32 ) (DType_int64 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32 ) (DType_object )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32 ) %__expr_3312772843316740737) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32 ) (DType_float32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32 ) (DType_int32 )) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32 ) (DType_int64 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32 ) (DType_object )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64 ) %__expr_3312772843316740737) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64 ) (DType_float32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64 ) (DType_int32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64 ) (DType_int64 )) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64 ) (DType_object )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object ) %__expr_3312772843316740737) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object ) (DType_float32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object ) (DType_int32 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object ) (DType_int64 )) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object ) (DType_object )) (Boolean___init__ true) :ruleset array_api_ruleset)\n(sort Vec_TupleInt (Vec TupleInt))\n(function TupleTupleInt_to_vec (TupleTupleInt) Vec_TupleInt :no-merge)\n(constructor TupleTupleInt_from_vec (Vec_TupleInt) TupleTupleInt)\n(rule ((= tti (TupleTupleInt_from_vec vs)))\n      ((set (TupleTupleInt_to_vec tti) vs))\n        :ruleset array_api_ruleset )\n(rewrite (TupleTupleInt_length (TupleTupleInt___init__ length idx_fn)) length :ruleset array_api_ruleset)\n(rewrite (TupleTupleInt___getitem__ (TupleTupleInt___init__ length idx_fn) idx) (unstable-app idx_fn (check_index idx length)) :ruleset array_api_ruleset)\n(constructor TupleTupleInt_EMPTY () TupleTupleInt)\n(rewrite (TupleTupleInt_length (TupleTupleInt_EMPTY )) (Int___init__ 0) :ruleset array_api_ruleset)\n(constructor TupleInt_NEVER () TupleInt)\n(rewrite (TupleTupleInt___getitem__ (TupleTupleInt_EMPTY ) idx) (TupleInt_NEVER ) :ruleset array_api_ruleset)\n(constructor TupleTupleInt_append (TupleTupleInt TupleInt) TupleTupleInt)\n(rewrite (TupleTupleInt_length (TupleTupleInt_append tti ti)) (Int___add__ (TupleTupleInt_length tti) (Int___init__ 1)) :ruleset array_api_ruleset)\n(rewrite (TupleTupleInt___getitem__ (TupleTupleInt_append tti ti) idx) (TupleInt_if_ (Int___eq__ idx (TupleTupleInt_length tti)) ti (TupleTupleInt___getitem__ tti idx)) :ruleset array_api_ruleset)\n(rewrite (TupleTupleInt___init__ (Int___init__ 0) idx_fn) (TupleTupleInt_EMPTY ) :subsume :ruleset array_api_ruleset)\n(rewrite (TupleTupleInt___init__ (Int___init__ k) idx_fn) (TupleTupleInt_append (TupleTupleInt___init__ (Int___init__ (- k 1)) idx_fn) (unstable-app idx_fn (Int___init__ (- k 1)))) :subsume :when ((> k 0)) :ruleset array_api_ruleset)\n(rewrite (TupleTupleInt_EMPTY ) (TupleTupleInt_from_vec (vec-of )) :ruleset array_api_ruleset)\n(rewrite (TupleTupleInt_append (TupleTupleInt_from_vec vs) ti) (TupleTupleInt_from_vec (vec-append vs (vec-of ti))) :ruleset array_api_ruleset)\n(sort UnstableFn_Value_Value_TupleInt (UnstableFn (Value TupleInt) Value))\n(constructor TupleTupleInt_foldl_value (TupleTupleInt UnstableFn_Value_Value_TupleInt Value) Value)\n(rewrite (TupleTupleInt_foldl_value (TupleTupleInt_EMPTY ) f i) i :subsume :ruleset array_api_ruleset)\n(rewrite (TupleTupleInt_foldl_value (TupleTupleInt_append tti ti) f i) (unstable-app f (TupleTupleInt_foldl_value tti f i) ti) :subsume :ruleset array_api_ruleset)\n(rule ((= (TupleTupleInt_append tti ti) (TupleTupleInt_append tti1 ti1)))\n      ((union tti tti1)\n       (union ti ti1))\n        :ruleset array_api_ruleset )\n(function TupleInt_to_vec (TupleInt) Vec_Int :no-merge)\n(rule ((= ti (TupleInt_from_vec vs)))\n      ((set (TupleInt_to_vec ti) vs))\n        :ruleset array_api_ruleset )\n(rewrite (TupleInt_length (TupleInt___init__ i idx_fn)) i :ruleset array_api_ruleset)\n(rewrite (TupleInt___getitem__ (TupleInt___init__ i idx_fn) i2) (unstable-app idx_fn (check_index i i2)) :ruleset array_api_ruleset)\n(rewrite (TupleInt_length (TupleInt_EMPTY )) (Int___init__ 0) :ruleset array_api_ruleset)\n(rewrite (TupleInt___getitem__ (TupleInt_EMPTY ) i) (Int_NEVER ) :ruleset array_api_ruleset)\n(rewrite (TupleInt_length (TupleInt_append ti i)) (Int___add__ (TupleInt_length ti) (Int___init__ 1)) :ruleset array_api_ruleset)\n(rewrite (TupleInt___getitem__ (TupleInt_append ti i) i2) (Int_if_ (Int___eq__ i2 (TupleInt_length ti)) i (TupleInt___getitem__ ti i2)) :ruleset array_api_ruleset)\n(rewrite (TupleInt___init__ (Int___init__ 0) idx_fn) (TupleInt_EMPTY ) :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt___init__ (Int___init__ k) idx_fn) (TupleInt_append (TupleInt___init__ (Int___init__ (- k 1)) idx_fn) (unstable-app idx_fn (Int___init__ (- k 1)))) :subsume :when ((> k 0)) :ruleset array_api_ruleset)\n(rewrite (TupleInt_EMPTY ) (TupleInt_from_vec (vec-of )) :ruleset array_api_ruleset)\n(rewrite (TupleInt_append (TupleInt_from_vec vs) i) (TupleInt_from_vec (vec-append vs (vec-of i))) :ruleset array_api_ruleset)\n(rewrite (TupleInt_foldl (TupleInt_EMPTY ) f i) i :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt_foldl (TupleInt_append ti i2) f i) (unstable-app f (TupleInt_foldl ti f i) i2) :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt_foldl_boolean (TupleInt_EMPTY ) bool_f b) b :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt_foldl_boolean (TupleInt_append ti i2) bool_f b) (unstable-app bool_f (TupleInt_foldl_boolean ti bool_f b) i2) :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt_foldl_tuple_int (TupleInt_EMPTY ) tuple_int_f ti) ti :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt_foldl_tuple_int (TupleInt_append ti i2) tuple_int_f ti2) (unstable-app tuple_int_f (TupleInt_foldl_tuple_int ti tuple_int_f ti2) i2) :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt_if_ (Boolean___init__ true) ti ti2) ti :subsume :ruleset array_api_ruleset)\n(rewrite (TupleInt_if_ (Boolean___init__ false) ti ti2) ti2 :subsume :ruleset array_api_ruleset)\n(rule ((= (TupleInt_append ti i) (TupleInt_append ti2 i2)))\n      ((union ti ti2)\n       (union i i2))\n        :ruleset array_api_ruleset )\n(function Float_to_f64 (Float) f64 :no-merge)\n(rule ((= fl (Float___init__ f)))\n      ((set (Float_to_f64 fl) f))\n        :ruleset array_api_ruleset )\n(rewrite (Float_abs (Float___init__ f)) (Float___init__ f) :when ((>= f 0.0)) :ruleset array_api_ruleset)\n(rewrite (Float_abs (Float___init__ f)) (Float___init__ (neg f)) :when ((< f 0.0)) :ruleset array_api_ruleset)\n(rewrite (Float___init__ f) (Float_rational (bigrat (bigint (to-i64 f)) (bigint 1))) :when ((= (to-f64 (to-i64 f)) f)) :ruleset array_api_ruleset)\n(constructor Float_from_int (Int) Float)\n(rewrite (Float_from_int (Int___init__ i)) (Float_rational (bigrat (bigint i) (bigint 1))) :ruleset array_api_ruleset)\n(constructor Float___add__ (Float Float) Float)\n(rewrite (Float___add__ (Float___init__ f) (Float___init__ f2)) (Float___init__ (+ f f2)) :ruleset array_api_ruleset)\n(constructor Float___sub__ (Float Float) Float)\n(rewrite (Float___sub__ (Float___init__ f) (Float___init__ f2)) (Float___init__ (- f f2)) :ruleset array_api_ruleset)\n(constructor Float___mul__ (Float Float) Float)\n(rewrite (Float___mul__ (Float___init__ f) (Float___init__ f2)) (Float___init__ (* f f2)) :ruleset array_api_ruleset)\n(constructor Float___truediv__ (Float Float) Float)\n(rewrite (Float___truediv__ (Float_rational r) (Float_rational r1)) (Float_rational (/ r r1)) :ruleset array_api_ruleset)\n(rewrite (Float___add__ (Float_rational r) (Float_rational r1)) (Float_rational (+ r r1)) :ruleset array_api_ruleset)\n(rewrite (Float___sub__ (Float_rational r) (Float_rational r1)) (Float_rational (- r r1)) :ruleset array_api_ruleset)\n(rewrite (Float___mul__ (Float_rational r) (Float_rational r1)) (Float_rational (* r r1)) :ruleset array_api_ruleset)\n(rewrite (Float___pow__ (Float___init__ f) (Float___init__ f2)) (Float___init__ (^ f f2)) :ruleset array_api_ruleset)\n(rewrite (Float___eq__ (Float___init__ f) (Float___init__ f)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (Float___eq__ (Float___init__ f) (Float___init__ f2)) (Boolean___init__ false) :when ((!= f f2)) :ruleset array_api_ruleset)\n(rewrite (Float___eq__ (Float_rational r) (Float_rational r)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (Float___eq__ (Float_rational r) (Float_rational r1)) (Boolean___init__ false) :when ((!= r r1)) :ruleset array_api_ruleset)\n(rewrite (Int___eq__ (Int___init__ i) (Int___init__ i)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rule ((= r (Int___eq__ (Int___init__ i) (Int___init__ j)))\n       (!= i j))\n      ((union r (Boolean___init__ false)))\n        :ruleset array_api_ruleset )\n(rewrite (Int___ge__ (Int___init__ i) (Int___init__ i)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rule ((= r (Int___ge__ (Int___init__ i) (Int___init__ j)))\n       (> i j))\n      ((union r (Boolean___init__ true)))\n        :ruleset array_api_ruleset )\n(rule ((= r (Int___ge__ (Int___init__ i) (Int___init__ j)))\n       (< i j))\n      ((union r (Boolean___init__ false)))\n        :ruleset array_api_ruleset )\n(rewrite (Int___lt__ (Int___init__ i) (Int___init__ i)) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rule ((= r (Int___lt__ (Int___init__ i) (Int___init__ j)))\n       (< i j))\n      ((union r (Boolean___init__ true)))\n        :ruleset array_api_ruleset )\n(rule ((= r (Int___lt__ (Int___init__ i) (Int___init__ j)))\n       (> i j))\n      ((union r (Boolean___init__ false)))\n        :ruleset array_api_ruleset )\n(constructor Int___gt__ (Int Int) Boolean)\n(rewrite (Int___gt__ (Int___init__ i) (Int___init__ i)) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rule ((= r (Int___gt__ (Int___init__ i) (Int___init__ j)))\n       (> i j))\n      ((union r (Boolean___init__ true)))\n        :ruleset array_api_ruleset )\n(rule ((= r (Int___gt__ (Int___init__ i) (Int___init__ j)))\n       (< i j))\n      ((union r (Boolean___init__ false)))\n        :ruleset array_api_ruleset )\n(function Int_to_i64 (Int) i64 :no-merge)\n(rule ((= o (Int___init__ j)))\n      ((set (Int_to_i64 o) j))\n        :ruleset array_api_ruleset )\n(rule ((= (Int___init__ i) (Int___init__ j))\n       (!= i j))\n      ((panic \"Real ints cannot be equal to different ints\"))\n        :ruleset array_api_ruleset )\n(rewrite (Int___add__ (Int___init__ i) (Int___init__ j)) (Int___init__ (+ i j)) :ruleset array_api_ruleset)\n(rewrite (Int___sub__ (Int___init__ i) (Int___init__ j)) (Int___init__ (- i j)) :ruleset array_api_ruleset)\n(rewrite (Int___mul__ (Int___init__ i) (Int___init__ j)) (Int___init__ (* i j)) :ruleset array_api_ruleset)\n(rewrite (Int___floordiv__ (Int___init__ i) (Int___init__ j)) (Int___init__ (/ i j)) :ruleset array_api_ruleset)\n(rewrite (Int___mod__ (Int___init__ i) (Int___init__ j)) (Int___init__ (% i j)) :ruleset array_api_ruleset)\n(constructor Int___and__ (Int Int) Int)\n(rewrite (Int___and__ (Int___init__ i) (Int___init__ j)) (Int___init__ (& i j)) :ruleset array_api_ruleset)\n(constructor Int___or__ (Int Int) Int)\n(rewrite (Int___or__ (Int___init__ i) (Int___init__ j)) (Int___init__ (| i j)) :ruleset array_api_ruleset)\n(constructor Int___xor__ (Int Int) Int)\n(rewrite (Int___xor__ (Int___init__ i) (Int___init__ j)) (Int___init__ (^ i j)) :ruleset array_api_ruleset)\n(constructor Int___lshift__ (Int Int) Int)\n(rewrite (Int___lshift__ (Int___init__ i) (Int___init__ j)) (Int___init__ (<< i j)) :ruleset array_api_ruleset)\n(constructor Int___rshift__ (Int Int) Int)\n(rewrite (Int___rshift__ (Int___init__ i) (Int___init__ j)) (Int___init__ (>> i j)) :ruleset array_api_ruleset)\n(constructor Int___invert__ (Int) Int)\n(rewrite (Int___invert__ (Int___init__ i)) (Int___init__ (not-i64 i)) :ruleset array_api_ruleset)\n(rewrite (Int_if_ (Boolean___init__ true) o b) o :subsume :ruleset array_api_ruleset)\n(rewrite (Int_if_ (Boolean___init__ false) o b) b :subsume :ruleset array_api_ruleset)\n(rule ((= (Int_NEVER ) (Int___init__ i)))\n      ((panic \"Int.NEVER cannot be equal to any real int\"))\n        :ruleset array_api_ruleset )\n(rule ((= x (Boolean___init__ b)))\n      ((set (Boolean_to_bool x) b))\n        :ruleset array_api_ruleset )\n(rewrite (Boolean___or__ (Boolean___init__ true) x) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (Boolean___or__ (Boolean___init__ false) x) x :ruleset array_api_ruleset)\n(rewrite (Boolean___and__ (Boolean___init__ true) x) x :ruleset array_api_ruleset)\n(rewrite (Boolean___and__ (Boolean___init__ false) x) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (Boolean___invert__ (Boolean___init__ true)) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (Boolean___invert__ (Boolean___init__ false)) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rule ((= (Boolean___init__ false) (Boolean___init__ true)))\n      ((panic \"False cannot equal True\"))\n        :ruleset array_api_ruleset )\n(rewrite (Boolean___eq__ x x) (Boolean___init__ true) :ruleset array_api_ruleset)\n(rewrite (Boolean___eq__ (Boolean___init__ false) (Boolean___init__ true)) (Boolean___init__ false) :ruleset array_api_ruleset)\n(rewrite (Boolean___eq__ (Boolean___init__ true) (Boolean___init__ false)) (Boolean___init__ false) :ruleset array_api_ruleset)\n(ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleInt_from_vec vs) (TupleInt_EMPTY ) :when ((= (vec-length vs) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleInt_from_vec vs) (TupleInt_append (TupleInt_from_vec (vec-remove vs (- (vec-length vs) 1))) (vec-get vs (- (vec-length vs) 1))) :when ((!= (vec-length vs) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleValue_from_vec vv) (TupleValue_EMPTY ) :when ((= (vec-length vv) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleValue_from_vec vv) (TupleValue_append (TupleValue_from_vec (vec-remove vv (- (vec-length vv) 1))) (vec-get vv (- (vec-length vv) 1))) :when ((!= (vec-length vv) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleTupleInt_from_vec vt) (TupleTupleInt_EMPTY ) :when ((= (vec-length vt) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleTupleInt_from_vec vt) (TupleTupleInt_append (TupleTupleInt_from_vec (vec-remove vt (- (vec-length vt) 1))) (vec-get vt (- (vec-length vt) 1))) :when ((!= (vec-length vt) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleNDArray_from_vec vn) (TupleNDArray_EMPTY ) :when ((= (vec-length vn) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleNDArray_from_vec vn) (TupleNDArray_append (TupleNDArray_from_vec (vec-remove vn (- (vec-length vn) 1))) (vec-get vn (- (vec-length vn) 1))) :when ((!= (vec-length vn) 0)) :ruleset array_api_vec_to_cons_ruleset)\n(unstable-combined-ruleset combined_ruleset_4774957744 array_api_ruleset array_api_vec_to_cons_ruleset)\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (DType___eq__ %__expr_3312772843316740737 (NDArray_dtype (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4)))))))) 0)\n(let %__expr_-7702746175087213660 (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0))) 0)\n(let %__expr_7214152486816582867 (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 1)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 1))) 0)\n(let %__expr_1302760973778610762 (Int___ge__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 3)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___ge__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 3))) 0)\n(let %__expr_-783593948058674373 (OptionalDType_none ))\n(let %__expr_783611300946152456 (isdtype (NDArray_dtype (asarray (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))) (IsDtypeKind___or__ (IsDtypeKind_string \"real floating\") (IsDtypeKind___or__ (IsDtypeKind_string \"complex floating\") (IsDtypeKind_NULL )))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (isdtype (NDArray_dtype (asarray (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))) (IsDtypeKind___or__ (IsDtypeKind_string \"real floating\") (IsDtypeKind___or__ (IsDtypeKind_string \"complex floating\") (IsDtypeKind_NULL ))))) 0)\n(let %__expr_8204039412248463860 (Value_to_bool (NDArray_to_value (isfinite (sum (asarray (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (OptionalIntOrTuple_none ))))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Value_to_bool (NDArray_to_value (isfinite (sum (asarray (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (OptionalIntOrTuple_none )))))) 0)\n(extract (Int_to_i64 (TupleInt_length (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))))) 0)\n(let %__expr_2412012518755541882 (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)) (Int___init__ 2)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)) (Int___init__ 2))) 0)\n(let %__expr_5402813888369164410 (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 2)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 2))) 0)\n(let %__expr_-3819518261003242831 (Int___init__ 1))\n(let %__expr_-5910393325276102546 (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831) %__expr_-3819518261003242831))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831) %__expr_-3819518261003242831)) 0)\n(let %__expr_1808310868807558499 (Int___ge__ (NDArray_ndim (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 3)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___ge__ (NDArray_ndim (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 3))) 0)\n(let %__expr_-8967796230287329510 (Int___init__ 2))\n(let %__expr_1027860534766939256 (Int___eq__ (NDArray_ndim (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-8967796230287329510))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-8967796230287329510)) 0)\n(extract (Int_to_i64 (TupleInt_length (NDArray_shape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))))) 0)\n(let %__expr_-4021706396155434623 (OptionalBool_none ))\n(let %__expr_-7565754526517146860 (OptionalDevice_none ))\n(let %__expr_7966366713714353629 (isdtype (NDArray_dtype (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (IsDtypeKind___or__ (IsDtypeKind_string \"real floating\") (IsDtypeKind___or__ (IsDtypeKind_string \"complex floating\") (IsDtypeKind_NULL )))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (isdtype (NDArray_dtype (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (IsDtypeKind___or__ (IsDtypeKind_string \"real floating\") (IsDtypeKind___or__ (IsDtypeKind_string \"complex floating\") (IsDtypeKind_NULL ))))) 0)\n(extract (Int_to_i64 (TupleInt_length (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))))) 0)\n(extract (Int_to_i64 (TupleInt_length (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) 0)\n(let %__expr_1515625565982584680 (Int___init__ 0))\n(let %__expr_2710969667027086134 (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_1515625565982584680) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_1515625565982584680) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)))) 0)\n(let %__expr_-6515887160729942207 (Int___gt__ (TupleInt___getitem__ (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_1515625565982584680) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___gt__ (TupleInt___getitem__ (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_1515625565982584680) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)))) 0)\n(let %__expr_2159589878056230634 (Int___eq__ (TupleInt___getitem__ (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_1515625565982584680) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (TupleInt___getitem__ (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_1515625565982584680) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)))) 0)\n(extract (Int_to_i64 (TupleInt_length (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))))) 0)\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_-8967796230287329510)) 0)\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_-3819518261003242831)) 0)\n(extract (TupleInt_to_vec (NDArray_shape (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860))) 0)\n(extract (Int_to_i64 (Int___init__ 150)) 0)\n(let %__expr_6488429099574989478 (DType___eq__ (NDArray_dtype (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (DType_object )))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (DType___eq__ (NDArray_dtype (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (DType_object ))) 0)\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_-8967796230287329510)) 0)\n(extract (Boolean_to_bool (isdtype (NDArray_dtype (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (IsDtypeKind_string \"real floating\"))) 0)\n(let %__expr_-6733469555097320499 (Int___gt__ (TupleInt___getitem__ (NDArray_shape (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860))) %__expr_1515625565982584680) %__expr_-8967796230287329510))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___gt__ (TupleInt___getitem__ (NDArray_shape (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860))) %__expr_1515625565982584680) %__expr_-8967796230287329510)) 0)\n(extract (TupleInt_to_vec (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) 0)\n(let %__expr_-965411243548255093 (Int___init__ 150))\n(let %__expr_4690911764855057036 (Int___eq__ %__expr_-965411243548255093 (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ %__expr_-965411243548255093 (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680))) 0)\n(let %__expr_5009493427994000278 (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (TupleNDArray_to_vec (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860))) 0)\n(extract (Int_to_i64 (TupleInt___getitem__ (NDArray_shape (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) %__expr_1515625565982584680)) 0)\n(let %__expr_3177832130128926844 (Value_int (Int___init__ 0)))\n(let %__expr_5577052485518004212 (Value_to_bool (NDArray_to_value (any (NDArray___lt__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (NDArray_scalar %__expr_3177832130128926844))))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Value_to_bool (NDArray_to_value (any (NDArray___lt__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (NDArray_scalar %__expr_3177832130128926844)))))) 0)\n(let %__expr_-8760706379805395400 (Value_to_bool (NDArray_to_value (NDArray___gt__ (ndarray-abs (NDArray___sub__ (sum (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (OptionalIntOrTuple_none )) (NDArray_scalar (Value_float (Float___init__ 1.0))))) (NDArray_scalar (Value_float (Float___init__ 0.00001)))))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Value_to_bool (NDArray_to_value (NDArray___gt__ (ndarray-abs (NDArray___sub__ (sum (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (OptionalIntOrTuple_none )) (NDArray_scalar (Value_float (Float___init__ 1.0))))) (NDArray_scalar (Value_float (Float___init__ 0.00001))))))) 0)\n(let %__expr_7387490801012818541 (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831) (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831) (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831))) 0)\n(let %__expr_-1220808304905772197 (Int___lt__ (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831) %__expr_-8967796230287329510))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___lt__ (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831) %__expr_-8967796230287329510)) 0)\n(extract (TupleInt_to_vec (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) 0)\n(let %__expr_-18431026180781381 (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (TupleNDArray_to_vec (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860))) 0)\n(extract (Int_to_i64 (TupleInt___getitem__ (NDArray_shape (NDArray_vector (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_1515625565982584680)) 0)\n(let %__expr_-5978900816636859197 (NDArray_size (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Int_to_i64 (NDArray_size (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none ))))) 0)\n(let %__expr_4960580842698491831 (Value_int (Int___init__ 2)))\n(let %__expr_-8271623696788926803 (NDArray_scalar %__expr_3177832130128926844))\n(let %__expr_-7273898457818663043 (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none ))))\n(let %__expr_8954373425596637944 (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860))\n(let %__expr_-8918626105572260774 (TupleNDArray___getitem__ (unique_inverse (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831))\n(let %__expr_-4275348256566137526 (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))))\n(let %__expr_-218207054133359828 (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))\n(sort MultiAxisIndexKeyItem)\n(sort Slice)\n(constructor MultiAxisIndexKeyItem_slice (Slice) MultiAxisIndexKeyItem)\n(constructor Slice___init__ (OptionalInt OptionalInt OptionalInt) Slice)\n(let %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none ) (OptionalInt_none ) (OptionalInt_none ))))\n(sort IntOrTuple)\n(constructor OptionalIntOrTuple_some (IntOrTuple) OptionalIntOrTuple)\n(constructor IntOrTuple_int (Int) IntOrTuple)\n(let %__expr_983055127364785721 (OptionalIntOrTuple_some (IntOrTuple_int %__expr_1515625565982584680)))\n(let %__expr_-1452170678296599248 (OptionalInt_none ))\n(sort MultiAxisIndexKey)\n(constructor IndexKey_multi_axis (MultiAxisIndexKey) IndexKey)\n(sort Vec_MultiAxisIndexKeyItem (Vec MultiAxisIndexKeyItem))\n(constructor MultiAxisIndexKey_from_vec (Vec_MultiAxisIndexKeyItem) MultiAxisIndexKey)\n(constructor MultiAxisIndexKeyItem_int (Int) MultiAxisIndexKeyItem)\n(let %__expr_1476736221086191386 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_-3819518261003242831) %__expr_-732844627964303682))))\n(let %__expr_-5492753565611138931 (Boolean___init__ false))\n(constructor OptionalDType_some (DType) OptionalDType)\n(let %__expr_9078071743624874880 (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))))\n(let %__expr_-3656473307321800322 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_1515625565982584680) %__expr_-732844627964303682))))\n(let %__expr_-2513766338179447502 (Float___init__ 1.0))\n(let %__expr_-2402518358160778187 (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))\n(let %__expr_-2999685187327316942 (Value_int %__expr_-3819518261003242831))\n(constructor NDArray___setitem__ (NDArray IndexKey NDArray) NDArray)\n(constructor zeros (TupleInt OptionalDType OptionalDevice) NDArray)\n(sort Device)\n(constructor OptionalDevice_some (Device) OptionalDevice)\n(constructor NDArray_device (NDArray) Device)\n(constructor mean (NDArray OptionalIntOrTuple Boolean) NDArray)\n(constructor IndexKey_ndarray (NDArray) IndexKey)\n(constructor NDArray___eq__ (NDArray NDArray) NDArray)\n(let %__expr_2111919219348313127 (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (NDArray_vector (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_1515625565982584680) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831))) %__expr_9078071743624874880 (OptionalDevice_some (NDArray_device %__expr_-218207054133359828))) %__expr_-3656473307321800322 (mean (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_-8918626105572260774 %__expr_-8271623696788926803))) %__expr_983055127364785721 %__expr_-5492753565611138931)) %__expr_1476736221086191386 (mean (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_-8918626105572260774 (NDArray_scalar %__expr_-2999685187327316942)))) %__expr_983055127364785721 %__expr_-5492753565611138931)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_-8967796230287329510) %__expr_-732844627964303682))) (mean (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_-8918626105572260774 (NDArray_scalar %__expr_4960580842698491831)))) %__expr_983055127364785721 %__expr_-5492753565611138931)))\n(let %__expr_109783727569535644 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_-8967796230287329510) %__expr_-732844627964303682))))\n(constructor std (NDArray OptionalIntOrTuple) NDArray)\n(constructor OptionalInt_some (Int) OptionalInt)\n(let %__expr_-2186208094369825484 (std (concat (TupleNDArray_from_vec (vec-of (NDArray___sub__ (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_8954373425596637944 (NDArray___getitem__ %__expr_-7273898457818663043 (IndexKey_int %__expr_1515625565982584680))))) (NDArray___getitem__ %__expr_2111919219348313127 %__expr_-3656473307321800322)) (NDArray___sub__ (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_8954373425596637944 (NDArray___getitem__ %__expr_-7273898457818663043 (IndexKey_int %__expr_-3819518261003242831))))) (NDArray___getitem__ %__expr_2111919219348313127 %__expr_1476736221086191386)) (NDArray___sub__ (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_8954373425596637944 (NDArray___getitem__ %__expr_-7273898457818663043 (IndexKey_int %__expr_-8967796230287329510))))) (NDArray___getitem__ %__expr_2111919219348313127 %__expr_109783727569535644)))) (OptionalInt_some %__expr_1515625565982584680)) %__expr_983055127364785721))\n(let %__expr_-2182434727612579224 (concat (TupleNDArray_from_vec (vec-of (NDArray___sub__ (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_8954373425596637944 (NDArray___getitem__ %__expr_-7273898457818663043 (IndexKey_int %__expr_1515625565982584680))))) (NDArray___getitem__ %__expr_2111919219348313127 %__expr_-3656473307321800322)) (NDArray___sub__ (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_8954373425596637944 (NDArray___getitem__ %__expr_-7273898457818663043 (IndexKey_int %__expr_-3819518261003242831))))) (NDArray___getitem__ %__expr_2111919219348313127 %__expr_1476736221086191386)) (NDArray___sub__ (NDArray___getitem__ %__expr_-218207054133359828 (IndexKey_ndarray (NDArray___eq__ %__expr_8954373425596637944 (NDArray___getitem__ %__expr_-7273898457818663043 (IndexKey_int %__expr_-8967796230287329510))))) (NDArray___getitem__ %__expr_2111919219348313127 %__expr_109783727569535644)))) (OptionalInt_some %__expr_1515625565982584680)))\n(constructor NDArray___mul__ (NDArray NDArray) NDArray)\n(constructor ndarray-sqrt (NDArray) NDArray)\n(let %__expr_-6679122900109393815 (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ %__expr_-2513766338179447502 (Float_from_int (Int___sub__ %__expr_-965411243548255093 (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680)))))) %__expr_9078071743624874880 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (NDArray___truediv__ %__expr_-2182434727612579224 (NDArray___setitem__ %__expr_-2186208094369825484 (IndexKey_ndarray (NDArray___eq__ %__expr_-2186208094369825484 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) %__expr_-5492753565611138931))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (TupleNDArray_to_vec (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ %__expr_-2513766338179447502 (Float_from_int (Int___sub__ %__expr_-965411243548255093 (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680)))))) %__expr_9078071743624874880 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (NDArray___truediv__ %__expr_-2182434727612579224 (NDArray___setitem__ %__expr_-2186208094369825484 (IndexKey_ndarray (NDArray___eq__ %__expr_-2186208094369825484 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) %__expr_-5492753565611138931)) 0)\n(let %__expr_8919219603840822224 (Int___eq__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831)) 0)\n(let %__expr_-8512717510729445879 (Int___init__ 4))\n(let %__expr_4843863566566866913 (NDArray_scalar %__expr_4960580842698491831))\n(let %__expr_432163927078974686 (MultiAxisIndexKeyItem_int %__expr_1515625565982584680))\n(let %__expr_6720480091233118296 (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))))\n(let %__expr_-1353577903770798000 (IndexKey_ndarray (NDArray___eq__ %__expr_-8918626105572260774 %__expr_-8271623696788926803)))\n(let %__expr_-4026720172780321222 (MultiAxisIndexKeyItem_int %__expr_-8967796230287329510))\n(let %__expr_8168747590964019947 (from-string \"1\"))\n(let %__expr_-7704953038804002139 (OptionalDType_some %__expr_3312772843316740737))\n(let %__expr_-796730805028247993 (IndexKey_ndarray (NDArray___eq__ %__expr_-8918626105572260774 (NDArray_scalar %__expr_-2999685187327316942))))\n(let %__expr_-3459162404795265252 (IndexKey_ndarray (NDArray___eq__ %__expr_-8918626105572260774 (NDArray_scalar %__expr_4960580842698491831))))\n(let %__expr_-3812909516189076479 (MultiAxisIndexKeyItem_int %__expr_-3819518261003242831))\n(let %__expr_7577559097497902125 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_432163927078974686 %__expr_-732844627964303682))))\n(let %__expr_7268219828363711414 (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (Int___init__ 3) %__expr_-8512717510729445879)) %__expr_-7704953038804002139 (OptionalDevice_some (NDArray_device %__expr_6720480091233118296))) %__expr_7577559097497902125 (mean (NDArray___getitem__ %__expr_6720480091233118296 %__expr_-1353577903770798000) %__expr_983055127364785721 %__expr_-5492753565611138931)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-3812909516189076479 %__expr_-732844627964303682))) (mean (NDArray___getitem__ %__expr_6720480091233118296 %__expr_-796730805028247993) %__expr_983055127364785721 %__expr_-5492753565611138931)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-4026720172780321222 %__expr_-732844627964303682))) (mean (NDArray___getitem__ %__expr_6720480091233118296 %__expr_-3459162404795265252) %__expr_983055127364785721 %__expr_-5492753565611138931)))\n(let %__expr_3960093023086732968 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-4026720172780321222 %__expr_-732844627964303682))))\n(let %__expr_1364373353785060178 (NDArray_scalar %__expr_-2999685187327316942))\n(let %__expr_2568882040843275336 (concat (TupleNDArray_from_vec (vec-of (NDArray___sub__ (NDArray___getitem__ %__expr_6720480091233118296 (IndexKey_ndarray (NDArray___eq__ %__expr_-4275348256566137526 %__expr_-8271623696788926803))) (NDArray___getitem__ %__expr_7268219828363711414 %__expr_7577559097497902125)) (NDArray___sub__ (NDArray___getitem__ %__expr_6720480091233118296 (IndexKey_ndarray (NDArray___eq__ %__expr_-4275348256566137526 %__expr_1364373353785060178))) (NDArray___getitem__ %__expr_7268219828363711414 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-3812909516189076479 %__expr_-732844627964303682))))) (NDArray___sub__ (NDArray___getitem__ %__expr_6720480091233118296 (IndexKey_ndarray (NDArray___eq__ %__expr_-4275348256566137526 %__expr_4843863566566866913))) (NDArray___getitem__ %__expr_7268219828363711414 %__expr_3960093023086732968)))) (OptionalInt_some %__expr_1515625565982584680)))\n(let %__expr_3000737669146698228 (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (NDArray___truediv__ %__expr_2568882040843275336 (NDArray___setitem__ (std %__expr_2568882040843275336 %__expr_983055127364785721) (IndexKey_ndarray (NDArray___eq__ (std %__expr_2568882040843275336 %__expr_983055127364785721) %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) %__expr_-5492753565611138931) %__expr_-3819518261003242831) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32 )) (OptionalIntOrTuple_none ))))) %__expr_-1452170678296599248))\n(let %__expr_2280756757603070330 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-3812909516189076479 %__expr_-732844627964303682))))\n(let %__expr_-7515158789430669490 (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (NDArray___truediv__ %__expr_2568882040843275336 (NDArray___setitem__ (std %__expr_2568882040843275336 %__expr_983055127364785721) (IndexKey_ndarray (NDArray___eq__ (std %__expr_2568882040843275336 %__expr_983055127364785721) %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) %__expr_-5492753565611138931) %__expr_-3819518261003242831))\n(let %__expr_-6337657961916076199 (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 %__expr_-4021706396155434623 %__expr_-7565754526517146860)) (NDArray___truediv__ %__expr_2568882040843275336 (NDArray___setitem__ (std %__expr_2568882040843275336 %__expr_983055127364785721) (IndexKey_ndarray (NDArray___eq__ (std %__expr_2568882040843275336 %__expr_983055127364785721) %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) %__expr_-5492753565611138931))\n(let %__expr_-5633021559492843827 (std %__expr_2568882040843275336 %__expr_983055127364785721))\n(constructor NDArray___matmul__ (NDArray NDArray) NDArray)\n(constructor IndexKey_slice (Slice) IndexKey)\n(let %__expr_683045514215179507 (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int %__expr_-965411243548255093)) (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0))))) (NDArray_scalar (Value_float (Float___truediv__ %__expr_-2513766338179447502 (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831))))))) (NDArray_T (NDArray___sub__ %__expr_2111919219348313127 (NDArray___matmul__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) %__expr_2111919219348313127))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ %__expr_-6337657961916076199 %__expr_-8967796230287329510) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice %__expr_3000737669146698228) %__expr_-732844627964303682)))) (NDArray___setitem__ %__expr_-2186208094369825484 (IndexKey_ndarray (NDArray___eq__ %__expr_-2186208094369825484 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (NDArray___getitem__ %__expr_-7515158789430669490 (IndexKey_slice %__expr_3000737669146698228)))) %__expr_-5492753565611138931))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (TupleNDArray_to_vec (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int %__expr_-965411243548255093)) (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0))))) (NDArray_scalar (Value_float (Float___truediv__ %__expr_-2513766338179447502 (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none )))) %__expr_1515625565982584680) %__expr_-3819518261003242831))))))) (NDArray_T (NDArray___sub__ %__expr_2111919219348313127 (NDArray___matmul__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) %__expr_2111919219348313127))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ %__expr_-6337657961916076199 %__expr_-8967796230287329510) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice %__expr_3000737669146698228) %__expr_-732844627964303682)))) (NDArray___setitem__ %__expr_-2186208094369825484 (IndexKey_ndarray (NDArray___eq__ %__expr_-2186208094369825484 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (NDArray___getitem__ %__expr_-7515158789430669490 (IndexKey_slice %__expr_3000737669146698228)))) %__expr_-5492753565611138931)) 0)\n(extract (TupleInt_to_vec (NDArray_shape (unique_values (concat (TupleNDArray_from_vec (vec-of (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2))))) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (TupleInt_from_vec (vec-of (Int___init__ -1))) %__expr_-4021706396155434623) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860) %__expr_-783593948058674373 %__expr_-4021706396155434623 %__expr_-7565754526517146860)))) (OptionalInt_none ))))) 0)\n(let %__expr_8669073206247132810 (Int___eq__ (Int___mul__ %__expr_-3819518261003242831 (Int___init__ 3)) %__expr_-8967796230287329510))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (Int___mul__ %__expr_-3819518261003242831 (Int___init__ 3)) %__expr_-8967796230287329510)) 0)\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0))) 0)\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 1))) 0)\n(extract (Boolean_to_bool (Int___ge__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 3))) 0)\n(extract (Boolean_to_bool (isdtype (NDArray_dtype (asarray (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none ))) (IsDtypeKind___or__ (IsDtypeKind_string \"real floating\") (IsDtypeKind___or__ (IsDtypeKind_string \"complex floating\") (IsDtypeKind_NULL ))))) 0)\n(extract (Boolean_to_bool (Value_to_bool (NDArray_to_value (isfinite (sum (asarray (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )) %__expr_-783593948058674373 (OptionalBool_none ) (OptionalDevice_none )) (OptionalIntOrTuple_none )))))) 0)\n(extract (Int_to_i64 (TupleInt_length (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))))) 0)\n(let %__expr_-1694630773449699795 (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)) %__expr_-3819518261003242831))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 0)) %__expr_-3819518261003242831)) 0)\n(extract (Boolean_to_bool (Int___eq__ (NDArray_ndim (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) (Int___init__ 2))) 0)\n(extract (Boolean_to_bool (Int___lt__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831) %__expr_-3819518261003242831)) 0)\n(extract (Int_to_i64 (TupleInt_length (NDArray_shape %__expr_6720480091233118296))) 0)\n(let %__expr_6180324870865751302 (Int___eq__ (TupleInt___getitem__ (NDArray_shape %__expr_6720480091233118296) %__expr_-3819518261003242831) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831)))\n(run-schedule (saturate (run combined_ruleset_4774957744)))\n(extract (Boolean_to_bool (Int___eq__ (TupleInt___getitem__ (NDArray_shape %__expr_6720480091233118296) %__expr_-3819518261003242831) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))) %__expr_-3819518261003242831))) 0)\n(ruleset ruleset_4774953040)\n(rewrite (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse x) %__expr_-3819518261003242831) (NDArray_scalar (Value_int i))) (NDArray___eq__ x (NDArray_scalar (NDArray_index (unique_values x) (TupleInt_from_vec (vec-of i))))) :subsume :ruleset ruleset_4774953040)\n(constructor values-TupleValue_x-NDArray_i-Int__NDArray_to_value__sum__NDArray___eq___x__NDArray_scalar__TupleValue___getitem___values_i_____OptionalIntOrTuple_none____ (TupleValue NDArray Int) Value)\n(rewrite (values-TupleValue_x-NDArray_i-Int__NDArray_to_value__sum__NDArray___eq___x__NDArray_scalar__TupleValue___getitem___values_i_____OptionalIntOrTuple_none____ values x i) (NDArray_to_value (sum (NDArray___eq__ x (NDArray_scalar (TupleValue___getitem__ values i))) (OptionalIntOrTuple_none ))) :subsume :ruleset ruleset_4774953040)\n(constructor count_values (NDArray TupleValue) TupleValue)\n(rewrite (count_values x values) (TupleValue___init__ (TupleValue_length values) (unstable-fn \"values-TupleValue_x-NDArray_i-Int__NDArray_to_value__sum__NDArray___eq___x__NDArray_scalar__TupleValue___getitem___values_i_____OptionalIntOrTuple_none____\" values x)) :subsume :ruleset ruleset_4774953040)\n(rewrite (TupleNDArray___getitem__ (unique_counts x) (Int___init__ 1)) (NDArray_vector (count_values x (NDArray_to_values (unique_values x)))) :subsume :ruleset ruleset_4774953040)\n(constructor square (NDArray) NDArray)\n(rewrite (std x (OptionalIntOrTuple_some (IntOrTuple_int i))) (ndarray-sqrt (mean (square (NDArray___sub__ x (mean x (OptionalIntOrTuple_some (IntOrTuple_int i)) (Boolean___init__ true)))) (OptionalIntOrTuple_some (IntOrTuple_int i)) %__expr_-5492753565611138931)) :subsume :ruleset ruleset_4774953040)\n(rewrite (mean x (OptionalIntOrTuple_some (IntOrTuple_int i)) %__expr_-5492753565611138931) (NDArray___truediv__ (sum x (OptionalIntOrTuple_some (IntOrTuple_int i))) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape x) i)))) :subsume :ruleset ruleset_4774953040)\n(constructor expand_dims (NDArray Int) NDArray)\n(rewrite (mean x (OptionalIntOrTuple_some (IntOrTuple_int i)) (Boolean___init__ true)) (expand_dims (NDArray___truediv__ (sum x (OptionalIntOrTuple_some (IntOrTuple_int i))) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape x) i)))) i) :subsume :ruleset ruleset_4774953040)\n(unstable-combined-ruleset combined_ruleset_4774954096 combined_ruleset_4774957744 ruleset_4774953040)\n(let %__expr_-8031376273367010161 (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float_rational (bigrat (from-string \"150\") %__expr_8168747590964019947))))))\n(let %__expr_7415952403571093742 (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int %__expr_-965411243548255093)) %__expr_-8031376273367010161) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"2\"))))))) (NDArray_T (NDArray___sub__ %__expr_7268219828363711414 (NDArray___matmul__ %__expr_-8031376273367010161 %__expr_7268219828363711414))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ %__expr_-6337657961916076199 %__expr_-8967796230287329510) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice %__expr_3000737669146698228) %__expr_-732844627964303682)))) (NDArray___setitem__ (std %__expr_2568882040843275336 %__expr_983055127364785721) (IndexKey_ndarray (NDArray___eq__ (std %__expr_2568882040843275336 %__expr_983055127364785721) %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) (NDArray___getitem__ %__expr_-7515158789430669490 (IndexKey_slice %__expr_3000737669146698228)))) %__expr_-5492753565611138931))\n(let %__expr_1739377561444238594 (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831))\n(let %__expr_-7196716872530625233 (MultiAxisIndexKeyItem_slice %__expr_3000737669146698228))\n(let %__expr_-9132183529443918859 (TupleNDArray___getitem__ %__expr_-6337657961916076199 %__expr_-8967796230287329510))\n(let %__expr_4981416852611516537 (NDArray___setitem__ (std %__expr_2568882040843275336 %__expr_983055127364785721) (IndexKey_ndarray (NDArray___eq__ (std %__expr_2568882040843275336 %__expr_983055127364785721) %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))\n(let %__expr_5084147555985265125 (NDArray___getitem__ %__expr_-7515158789430669490 (IndexKey_slice %__expr_3000737669146698228)))\n(let %__expr_-4507268164115239215 (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none ))))\n(simplify (saturate (run combined_ruleset_4774954096)) (NDArray___getitem__ (NDArray___matmul__ (NDArray___sub__ %__expr_-218207054133359828 (NDArray___matmul__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of (Value_int (Int___init__ 0)) (Value_int %__expr_-3819518261003242831) (Value_int (Int___init__ 2)))))) %__expr_-3819518261003242831) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") %__expr_3312772843316740737) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none ) (OptionalBool_none ) (OptionalDevice_none )))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) %__expr_2111919219348313127)) (NDArray___matmul__ (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ %__expr_-6337657961916076199 %__expr_-8967796230287329510) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice %__expr_3000737669146698228) %__expr_-732844627964303682)))) (NDArray___setitem__ %__expr_-2186208094369825484 (IndexKey_ndarray (NDArray___eq__ %__expr_-2186208094369825484 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (NDArray___getitem__ %__expr_-7515158789430669490 (IndexKey_slice %__expr_3000737669146698228))) (NDArray___getitem__ (NDArray_T (TupleNDArray___getitem__ %__expr_7415952403571093742 %__expr_-8967796230287329510)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ %__expr_7415952403571093742 %__expr_-3819518261003242831) (NDArray___mul__ (NDArray_scalar (Value_float (Float___init__ 0.0001))) (NDArray___getitem__ (TupleNDArray___getitem__ %__expr_7415952403571093742 %__expr_-3819518261003242831) (IndexKey_int %__expr_1515625565982584680)))) (DType_int32 )) (OptionalIntOrTuple_none ))))) %__expr_-1452170678296599248)))))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some %__expr_-8967796230287329510) %__expr_-1452170678296599248)))))))\n(pop 1)\n(sort IndexKey)\n(sort MultiAxisIndexKey)\n(constructor IndexKey_multi_axis (MultiAxisIndexKey) IndexKey)\n(sort MultiAxisIndexKeyItem)\n(sort Vec_MultiAxisIndexKeyItem (Vec MultiAxisIndexKeyItem))\n(constructor MultiAxisIndexKey_from_vec (Vec_MultiAxisIndexKeyItem) MultiAxisIndexKey)\n(sort Int)\n(constructor MultiAxisIndexKeyItem_int (Int) MultiAxisIndexKeyItem)\n(constructor Int___init__ (i64) Int)\n(sort Slice)\n(constructor MultiAxisIndexKeyItem_slice (Slice) MultiAxisIndexKeyItem)\n(sort OptionalInt)\n(constructor Slice___init__ (OptionalInt OptionalInt OptionalInt) Slice)\n(constructor OptionalInt_none () OptionalInt)\n(let %__expr_3960093023086732968 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none ) (OptionalInt_none ) (OptionalInt_none )))))))\n(sort Value)\n(constructor Value_int (Int) Value)\n(let %__expr_3177832130128926844 (Value_int (Int___init__ 0)))\n(sort NDArray)\n(constructor NDArray___getitem__ (NDArray IndexKey) NDArray)\n(constructor assume_isfinite (NDArray) NDArray)\n(sort TupleInt)\n(constructor assume_shape (NDArray TupleInt) NDArray)\n(sort DType)\n(constructor assume_dtype (NDArray DType) NDArray)\n(constructor NDArray_var (String) NDArray :cost 200)\n(constructor DType_float64 () DType)\n(sort Vec_Int (Vec Int))\n(constructor TupleInt_from_vec (Vec_Int) TupleInt)\n(constructor IndexKey_ndarray (NDArray) IndexKey)\n(constructor NDArray___eq__ (NDArray NDArray) NDArray)\n(sort TupleValue)\n(constructor assume_value_one_of (NDArray TupleValue) NDArray)\n(constructor DType_int64 () DType)\n(sort Vec_Value (Vec Value))\n(constructor TupleValue_from_vec (Vec_Value) TupleValue)\n(constructor NDArray_scalar (Value) NDArray)\n(let %__expr_-4055289162102549798 (NDArray___getitem__ (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64 )) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (IndexKey_ndarray (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_3177832130128926844)))))\n(let %__expr_4960580842698491831 (Value_int (Int___init__ 2)))\n(let %__expr_-8967796230287329510 (Int___init__ 2))\n(let %__expr_-965411243548255093 (Int___init__ 150))\n(let %__expr_-8512717510729445879 (Int___init__ 4))\n(let %__expr_-2999685187327316942 (Value_int (Int___init__ 1)))\n(let %__expr_2472441736055780078 (NDArray___getitem__ (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64 )) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (IndexKey_ndarray (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)))))\n(let %__expr_1515625565982584680 (Int___init__ 0))\n(let %__expr_6720480091233118296 (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64 )) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))))\n(let %__expr_-4275348256566137526 (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))))\n(let %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none ) (OptionalInt_none ) (OptionalInt_none ))))\n(let %__expr_-3819518261003242831 (Int___init__ 1))\n(let %__expr_3312772843316740737 (DType_float64 ))\n(let %__expr_2487900625561038978 (NDArray___getitem__ %__expr_6720480091233118296 (IndexKey_ndarray (NDArray___eq__ %__expr_-4275348256566137526 (NDArray_scalar %__expr_4960580842698491831)))))\n(sort OptionalIntOrTuple)\n(sort IntOrTuple)\n(constructor OptionalIntOrTuple_some (IntOrTuple) OptionalIntOrTuple)\n(constructor IntOrTuple_int (Int) IntOrTuple)\n(let %__expr_983055127364785721 (OptionalIntOrTuple_some (IntOrTuple_int %__expr_1515625565982584680)))\n(constructor NDArray___setitem__ (NDArray IndexKey NDArray) NDArray)\n(sort OptionalDType)\n(sort OptionalDevice)\n(constructor zeros (TupleInt OptionalDType OptionalDevice) NDArray)\n(constructor OptionalDType_some (DType) OptionalDType)\n(sort Device)\n(constructor OptionalDevice_some (Device) OptionalDevice)\n(constructor NDArray_device (NDArray) Device)\n(constructor NDArray___truediv__ (NDArray NDArray) NDArray)\n(constructor sum (NDArray OptionalIntOrTuple) NDArray)\n(constructor TupleInt___getitem__ (TupleInt Int) Int)\n(constructor NDArray_shape (NDArray) TupleInt)\n(let %__expr_4905588185657853020 (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (Int___init__ 3) %__expr_-8512717510729445879)) (OptionalDType_some %__expr_3312772843316740737) (OptionalDevice_some (NDArray_device %__expr_6720480091233118296))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_1515625565982584680) %__expr_-732844627964303682))) (NDArray___truediv__ (sum %__expr_-4055289162102549798 %__expr_983055127364785721) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape %__expr_-4055289162102549798) %__expr_1515625565982584680))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_-3819518261003242831) %__expr_-732844627964303682))) (NDArray___truediv__ (sum %__expr_2472441736055780078 %__expr_983055127364785721) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape %__expr_2472441736055780078) %__expr_1515625565982584680))))) %__expr_3960093023086732968 (NDArray___truediv__ (sum %__expr_2487900625561038978 %__expr_983055127364785721) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape %__expr_2487900625561038978) %__expr_1515625565982584680))))))\n(let %__expr_7577559097497902125 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_1515625565982584680) %__expr_-732844627964303682))))\n(let %__expr_2280756757603070330 (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int %__expr_-3819518261003242831) %__expr_-732844627964303682))))\n(sort TupleNDArray)\n(constructor concat (TupleNDArray OptionalInt) NDArray)\n(sort Vec_NDArray (Vec NDArray))\n(constructor TupleNDArray_from_vec (Vec_NDArray) TupleNDArray)\n(constructor NDArray___sub__ (NDArray NDArray) NDArray)\n(constructor OptionalInt_some (Int) OptionalInt)\n(let %__expr_-885499726357552226 (concat (TupleNDArray_from_vec (vec-of (NDArray___sub__ %__expr_-4055289162102549798 (NDArray___getitem__ %__expr_4905588185657853020 %__expr_7577559097497902125)) (NDArray___sub__ %__expr_2472441736055780078 (NDArray___getitem__ %__expr_4905588185657853020 %__expr_2280756757603070330)) (NDArray___sub__ %__expr_2487900625561038978 (NDArray___getitem__ %__expr_4905588185657853020 %__expr_3960093023086732968)))) (OptionalInt_some %__expr_1515625565982584680)))\n(let %__expr_8168747590964019947 (from-string \"1\"))\n(constructor square (NDArray) NDArray)\n(constructor expand_dims (NDArray Int) NDArray)\n(let %__expr_-6878258379032595142 (square (NDArray___sub__ %__expr_-885499726357552226 (expand_dims (NDArray___truediv__ (sum %__expr_-885499726357552226 %__expr_983055127364785721) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape %__expr_-885499726357552226) %__expr_1515625565982584680)))) %__expr_1515625565982584680))))\n(let %__expr_-8271623696788926803 (NDArray_scalar %__expr_3177832130128926844))\n(let %__expr_-7704953038804002139 (OptionalDType_some %__expr_3312772843316740737))\n(constructor ndarray-sqrt (NDArray) NDArray)\n(let %__expr_-1251134313046779088 (ndarray-sqrt (NDArray___truediv__ (sum %__expr_-6878258379032595142 %__expr_983055127364785721) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape %__expr_-6878258379032595142) %__expr_1515625565982584680))))))\n(constructor TupleNDArray___getitem__ (TupleNDArray Int) NDArray)\n(sort Boolean)\n(constructor svd (NDArray Boolean) TupleNDArray)\n(constructor NDArray___mul__ (NDArray NDArray) NDArray)\n(sort OptionalBool)\n(constructor asarray (NDArray OptionalDType OptionalBool OptionalDevice) NDArray)\n(sort Float)\n(constructor Value_float (Float) Value)\n(constructor Float_rational (BigRat) Float :cost 2)\n(constructor OptionalBool_none () OptionalBool)\n(constructor OptionalDevice_none () OptionalDevice)\n(constructor Boolean___init__ (bool) Boolean)\n(let %__expr_5074646572599255728 (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 (OptionalBool_none ) (OptionalDevice_none ))) (NDArray___truediv__ %__expr_-885499726357552226 (NDArray___setitem__ %__expr_-1251134313046779088 (IndexKey_ndarray (NDArray___eq__ %__expr_-1251134313046779088 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) (Boolean___init__ false)) %__expr_-3819518261003242831))\n(let %__expr_3031226601948441145 (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_3177832130128926844)))\n(let %__expr_2626906736684537088 (NDArray___eq__ %__expr_-4275348256566137526 (NDArray_scalar %__expr_4960580842698491831)))\n(constructor OptionalIntOrTuple_none () OptionalIntOrTuple)\n(let %__expr_7783735801821713909 (OptionalIntOrTuple_none ))\n(let %__expr_-1452170678296599248 (OptionalInt_none ))\n(constructor Value_to_int (Value) Int)\n(constructor NDArray_to_value (NDArray) Value)\n(constructor astype (NDArray DType) NDArray)\n(constructor NDArray___gt__ (NDArray NDArray) NDArray)\n(constructor Float___init__ (f64) Float :cost 3)\n(constructor DType_int32 () DType)\n(let %__expr_-4136436754667800561 (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ %__expr_5074646572599255728 (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32 )) %__expr_7783735801821713909)))) %__expr_-1452170678296599248))\n(let %__expr_-4363670705750809665 (NDArray___setitem__ %__expr_-1251134313046779088 (IndexKey_ndarray (NDArray___eq__ %__expr_-1251134313046779088 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))\n(let %__expr_-5492753565611138931 (Boolean___init__ false))\n(constructor NDArray___matmul__ (NDArray NDArray) NDArray)\n(constructor NDArray_T (NDArray) NDArray)\n(constructor NDArray_vector (TupleValue) NDArray)\n(constructor IndexKey_slice (Slice) IndexKey)\n(let %__expr_951252240580768262 (TupleNDArray___getitem__ (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int %__expr_-965411243548255093)) (NDArray___truediv__ (astype (NDArray_vector (TupleValue_from_vec (vec-of (NDArray_to_value (sum %__expr_3031226601948441145 %__expr_7783735801821713909)) (NDArray_to_value (sum (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)) %__expr_7783735801821713909)) (NDArray_to_value (sum %__expr_2626906736684537088 %__expr_7783735801821713909))))) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float_rational (bigrat (from-string \"150\") %__expr_8168747590964019947)))))) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"2\"))))))) (NDArray_T (NDArray___sub__ %__expr_4905588185657853020 (NDArray___matmul__ (NDArray___truediv__ (astype (NDArray_vector (TupleValue_from_vec (vec-of (NDArray_to_value (sum %__expr_3031226601948441145 %__expr_7783735801821713909)) (NDArray_to_value (sum (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)) %__expr_7783735801821713909)) (NDArray_to_value (sum %__expr_2626906736684537088 %__expr_7783735801821713909))))) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float_rational (bigrat (from-string \"150\") %__expr_8168747590964019947))))) %__expr_4905588185657853020))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 (OptionalBool_none ) (OptionalDevice_none ))) (NDArray___truediv__ %__expr_-885499726357552226 (NDArray___setitem__ %__expr_-1251134313046779088 (IndexKey_ndarray (NDArray___eq__ %__expr_-1251134313046779088 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) (Boolean___init__ false)) %__expr_-8967796230287329510) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice %__expr_-4136436754667800561) %__expr_-732844627964303682)))) %__expr_-4363670705750809665)) (NDArray___getitem__ %__expr_5074646572599255728 (IndexKey_slice %__expr_-4136436754667800561)))) %__expr_-5492753565611138931) %__expr_-3819518261003242831))\n(let %__expr_-4848395256643278075 (NDArray_var \"y\"))\n(let %__expr_-2743419600569035313 (DType_int32 ))\n(let %__expr_-1085596391076604196 (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)))\n(let %__expr_6466749670865178762 (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int %__expr_-965411243548255093)) (NDArray___truediv__ (astype (NDArray_vector (TupleValue_from_vec (vec-of (NDArray_to_value (sum %__expr_3031226601948441145 %__expr_7783735801821713909)) (NDArray_to_value (sum (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)) %__expr_7783735801821713909)) (NDArray_to_value (sum %__expr_2626906736684537088 %__expr_7783735801821713909))))) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float_rational (bigrat (from-string \"150\") %__expr_8168747590964019947)))))) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"2\"))))))) (NDArray_T (NDArray___sub__ %__expr_4905588185657853020 (NDArray___matmul__ (NDArray___truediv__ (astype (NDArray_vector (TupleValue_from_vec (vec-of (NDArray_to_value (sum %__expr_3031226601948441145 %__expr_7783735801821713909)) (NDArray_to_value (sum (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)) %__expr_7783735801821713909)) (NDArray_to_value (sum %__expr_2626906736684537088 %__expr_7783735801821713909))))) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float_rational (bigrat (from-string \"150\") %__expr_8168747590964019947))))) %__expr_4905588185657853020))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 (OptionalBool_none ) (OptionalDevice_none ))) (NDArray___truediv__ %__expr_-885499726357552226 (NDArray___setitem__ %__expr_-1251134313046779088 (IndexKey_ndarray (NDArray___eq__ %__expr_-1251134313046779088 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) (Boolean___init__ false)) %__expr_-8967796230287329510) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice %__expr_-4136436754667800561) %__expr_-732844627964303682)))) %__expr_-4363670705750809665)) (NDArray___getitem__ %__expr_5074646572599255728 (IndexKey_slice %__expr_-4136436754667800561)))) %__expr_-5492753565611138931))\n(let %__expr_3758124421086381772 (NDArray___matmul__ (NDArray___truediv__ (astype (NDArray_vector (TupleValue_from_vec (vec-of (NDArray_to_value (sum %__expr_3031226601948441145 %__expr_7783735801821713909)) (NDArray_to_value (sum (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)) %__expr_7783735801821713909)) (NDArray_to_value (sum %__expr_2626906736684537088 %__expr_7783735801821713909))))) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float_rational (bigrat (from-string \"150\") %__expr_8168747590964019947))))) %__expr_4905588185657853020))\n(let %__expr_7291114401586345010 0)\n(let %__expr_-1054198044662377053 (NDArray___truediv__ (astype (NDArray_vector (TupleValue_from_vec (vec-of (NDArray_to_value (sum %__expr_3031226601948441145 %__expr_7783735801821713909)) (NDArray_to_value (sum (NDArray___eq__ (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64 )) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue_from_vec (vec-of %__expr_3177832130128926844 (Value_int (Int___init__ 1)) (Value_int (Int___init__ 2))))) (NDArray_scalar %__expr_-2999685187327316942)) %__expr_7783735801821713909)) (NDArray_to_value (sum %__expr_2626906736684537088 %__expr_7783735801821713909))))) %__expr_3312772843316740737) (NDArray_scalar (Value_float (Float_rational (bigrat (from-string \"150\") %__expr_8168747590964019947))))))\n(let %__expr_9124251980924877179 (NDArray_var \"X\"))\n(let %__expr_-2811267273407125878 (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 (OptionalBool_none ) (OptionalDevice_none ))) (NDArray___truediv__ %__expr_-885499726357552226 (NDArray___setitem__ %__expr_-1251134313046779088 (IndexKey_ndarray (NDArray___eq__ %__expr_-1251134313046779088 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) (Boolean___init__ false)))\n(let %__expr_-4746212653244667575 (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 (from-string \"147\"))))) %__expr_-7704953038804002139 (OptionalBool_none ) (OptionalDevice_none ))) (NDArray___truediv__ %__expr_-885499726357552226 (NDArray___setitem__ %__expr_-1251134313046779088 (IndexKey_ndarray (NDArray___eq__ %__expr_-1251134313046779088 %__expr_-8271623696788926803)) (NDArray_scalar (Value_float (Float_rational (bigrat %__expr_8168747590964019947 %__expr_8168747590964019947))))))) (Boolean___init__ false)) %__expr_-8967796230287329510) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice %__expr_-4136436754667800561) %__expr_-732844627964303682)))) %__expr_-4363670705750809665)) (NDArray___getitem__ %__expr_5074646572599255728 (IndexKey_slice %__expr_-4136436754667800561))))\n(sort Program)\n(relation Program_compile (Program i64))\n(constructor ndarray_function_two_program (NDArray NDArray NDArray) Program)\n(constructor IndexKey_int (Int) IndexKey)\n(let %__expr_7479385404919082912 (Program_compile (ndarray_function_two_program (NDArray___getitem__ (NDArray___matmul__ (NDArray___sub__ %__expr_6720480091233118296 %__expr_3758124421086381772) (NDArray___matmul__ %__expr_-4746212653244667575 (NDArray___getitem__ (NDArray_T (TupleNDArray___getitem__ %__expr_6466749670865178762 %__expr_-8967796230287329510)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ %__expr_951252240580768262 (NDArray___mul__ (NDArray_scalar (Value_float (Float___init__ 0.0001))) (NDArray___getitem__ %__expr_951252240580768262 (IndexKey_int %__expr_1515625565982584680)))) %__expr_-2743419600569035313) %__expr_7783735801821713909)))) %__expr_-1452170678296599248)))))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some %__expr_-8967796230287329510) %__expr_-1452170678296599248)))))) %__expr_9124251980924877179 %__expr_-4848395256643278075) %__expr_7291114401586345010))\n(let %__expr_6781025800985942292 (NDArray_scalar (Value_float (Float___init__ 0.0001))))\n(function Program_statements (Program) String :no-merge)\n(let %__expr_6607193443283949601 (ndarray_function_two_program (NDArray___getitem__ (NDArray___matmul__ (NDArray___sub__ %__expr_6720480091233118296 %__expr_3758124421086381772) (NDArray___matmul__ %__expr_-4746212653244667575 (NDArray___getitem__ (NDArray_T (TupleNDArray___getitem__ %__expr_6466749670865178762 %__expr_-8967796230287329510)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ %__expr_951252240580768262 (NDArray___mul__ (NDArray_scalar (Value_float (Float___init__ 0.0001))) (NDArray___getitem__ %__expr_951252240580768262 (IndexKey_int %__expr_1515625565982584680)))) %__expr_-2743419600569035313) %__expr_7783735801821713909)))) %__expr_-1452170678296599248)))))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some %__expr_-8967796230287329510) %__expr_-1452170678296599248)))))) %__expr_9124251980924877179 %__expr_-4848395256643278075))\n(ruleset array_api_program_gen_ruleset)\n(constructor Program___add__ (Program Program) Program)\n(constructor value_program (Value) Program)\n(constructor Program___init__ (String bool) Program)\n(constructor acc-Program_i-Value__Program___add____Program___add___acc__value_program_i____Program___init________false__ (Program Value) Program)\n(rewrite (acc-Program_i-Value__Program___add____Program___add___acc__value_program_i____Program___init________false__ acc i) (Program___add__ (Program___add__ acc (value_program i)) (Program___init__ \", \" false)) :subsume :ruleset array_api_program_gen_ruleset)\n(constructor tuple_value_program (TupleValue) Program)\n(sort UnstableFn_Program_Program_Value (UnstableFn (Program Value) Program))\n(constructor tuple_value_foldl_program (TupleValue UnstableFn_Program_Program_Value Program) Program)\n(rewrite (tuple_value_program x) (Program___add__ (tuple_value_foldl_program x (unstable-fn \"acc-Program_i-Value__Program___add____Program___add___acc__value_program_i____Program___init________false__\") (Program___init__ \"(\" false)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Program_function_two (Program Program Program String) Program)\n(constructor ndarray_program (NDArray) Program)\n(rewrite (ndarray_function_two_program res l r) (Program_function_two (ndarray_program res) (ndarray_program l) (ndarray_program r) \"__fn\") :ruleset array_api_program_gen_ruleset)\n(constructor int_program (Int) Program)\n(constructor acc-Program_i-Int__Program___add____Program___add___acc__int_program_i____Program___init________false__ (Program Int) Program)\n(rewrite (acc-Program_i-Int__Program___add____Program___add___acc__int_program_i____Program___init________false__ acc i) (Program___add__ (Program___add__ acc (int_program i)) (Program___init__ \", \" false)) :subsume :ruleset array_api_program_gen_ruleset)\n(constructor tuple_int_program (TupleInt) Program)\n(sort UnstableFn_Program_Program_Int (UnstableFn (Program Int) Program))\n(constructor tuple_int_foldl_program (TupleInt UnstableFn_Program_Program_Int Program) Program)\n(rewrite (tuple_int_program x) (Program___add__ (tuple_int_foldl_program x (unstable-fn \"acc-Program_i-Int__Program___add____Program___add___acc__int_program_i____Program___init________false__\") (Program___init__ \"(\" false)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor acc-Program_i-NDArray__Program___add____Program___add___acc__ndarray_program_i____Program___init________false__ (Program NDArray) Program)\n(rewrite (acc-Program_i-NDArray__Program___add____Program___add___acc__ndarray_program_i____Program___init________false__ acc i) (Program___add__ (Program___add__ acc (ndarray_program i)) (Program___init__ \", \" false)) :subsume :ruleset array_api_program_gen_ruleset)\n(constructor tuple_ndarray_program (TupleNDArray) Program)\n(sort UnstableFn_Program_Program_NDArray (UnstableFn (Program NDArray) Program))\n(constructor tuple_ndarray_foldl_program (TupleNDArray UnstableFn_Program_Program_NDArray Program) Program)\n(rewrite (tuple_ndarray_program x) (Program___add__ (tuple_ndarray_foldl_program x (unstable-fn \"acc-Program_i-NDArray__Program___add____Program___add___acc__ndarray_program_i____Program___init________false__\") (Program___init__ \"(\" false)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray_var s)) (Program___init__ s true) :ruleset array_api_program_gen_ruleset)\n(constructor Program_statement (Program Program) Program :unextractable)\n(constructor dtype_program (DType) Program)\n(rewrite (ndarray_program (assume_dtype z dtype)) (Program_statement (ndarray_program z) (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"assert \" false) (ndarray_program z)) (Program___init__ \".dtype == \" false)) (dtype_program dtype))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (assume_shape z ti)) (Program_statement (ndarray_program z) (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"assert \" false) (ndarray_program z)) (Program___init__ \".shape == \" false)) (tuple_int_program ti))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (assume_isfinite z)) (Program_statement (ndarray_program z) (Program___add__ (Program___add__ (Program___init__ \"assert np.all(np.isfinite(\" false) (ndarray_program z)) (Program___init__ \"))\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (assume_value_one_of z tv)) (Program_statement (ndarray_program z) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"assert set(np.unique(\" false) (ndarray_program z)) (Program___init__ \")) == set(\" false)) (tuple_value_program tv)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor reshape (NDArray TupleInt OptionalBool) NDArray)\n(constructor Program_assign (Program) Program)\n(rewrite (ndarray_program (reshape y ti ob)) (Program_assign (Program___add__ (Program___add__ (Program___add__ (ndarray_program y) (Program___init__ \".reshape(\" false)) (tuple_int_program ti)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (astype y dtype)) (Program_assign (Program___add__ (Program___add__ (Program___add__ (ndarray_program y) (Program___init__ \".astype(\" false)) (dtype_program dtype)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor unique_counts (NDArray) TupleNDArray)\n(rewrite (tuple_ndarray_program (unique_counts x)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.unique(\" false) (ndarray_program x)) (Program___init__ \", return_counts=True)\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor unique_inverse (NDArray) TupleNDArray)\n(rewrite (tuple_ndarray_program (unique_inverse x)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.unique(\" false) (ndarray_program x)) (Program___init__ \", return_inverse=True)\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (TupleNDArray___getitem__ tnd i)) (Program___add__ (Program___add__ (Program___add__ (tuple_ndarray_program tnd) (Program___init__ \"[\" false)) (int_program i)) (Program___init__ \"]\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray_scalar v)) (Program___add__ (Program___add__ (Program___init__ \"np.array(\" false) (value_program v)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor OptionalDType_none () OptionalDType)\n(rewrite (ndarray_program (zeros ti (OptionalDType_none ) optional_device_)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.zeros(\" false) (tuple_int_program ti)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (zeros ti (OptionalDType_some dtype) optional_device_)) (Program_assign (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.zeros(\" false) (tuple_int_program ti)) (Program___init__ \", dtype=\" false)) (dtype_program dtype)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor unique_values (NDArray) NDArray)\n(rewrite (ndarray_program (unique_values x)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.unique(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___add__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___add__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" + \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray___sub__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" - \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray___mul__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" * \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray___truediv__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" / \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___lt__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___lt__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" < \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___le__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___le__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" <= \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray___gt__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" > \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___ge__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___ge__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" >= \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray___eq__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" == \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray___matmul__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" @ \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___mod__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___mod__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" % \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___and__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___and__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" & \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___or__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___or__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" | \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___xor__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___xor__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" ^ \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___lshift__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___lshift__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" << \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___rshift__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___rshift__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" >> \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___floordiv__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___floordiv__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" // \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray___pow__ (NDArray NDArray) NDArray)\n(rewrite (ndarray_program (NDArray___pow__ x y)) (Program_assign (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \" ** \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(constructor index_key_program (IndexKey) Program)\n(rewrite (ndarray_program (NDArray___setitem__ x idx y)) (Program_statement (Program_assign (ndarray_program x)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program_assign (ndarray_program x)) (Program___init__ \"[\" false)) (index_key_program idx)) (Program___init__ \"] = \" false)) (ndarray_program y))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray___getitem__ x idx)) (Program___add__ (Program___add__ (Program___add__ (ndarray_program x) (Program___init__ \"[\" false)) (index_key_program idx)) (Program___init__ \"]\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (square x)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.square(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (expand_dims x i)) (Program_assign (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.expand_dims(\" false) (ndarray_program x)) (Program___init__ \", \" false)) (int_program i)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor mean (NDArray OptionalIntOrTuple Boolean) NDArray)\n(rewrite (ndarray_program (mean x %__expr_7783735801821713909 %__expr_-5492753565611138931)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.mean(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor int_or_tuple_program (IntOrTuple) Program)\n(rewrite (ndarray_program (mean x (OptionalIntOrTuple_some int_or_tuple_) %__expr_-5492753565611138931)) (Program_assign (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.mean(\" false) (ndarray_program x)) (Program___init__ \", axis=\" false)) (int_or_tuple_program int_or_tuple_)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (mean x (OptionalIntOrTuple_some int_or_tuple_) (Boolean___init__ true))) (Program_assign (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.mean(\" false) (ndarray_program x)) (Program___init__ \", axis=\" false)) (int_or_tuple_program int_or_tuple_)) (Program___init__ \", keepdims=True)\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (concat tnd %__expr_-1452170678296599248)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.concatenate(\" false) (tuple_ndarray_program tnd)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (concat tnd (OptionalInt_some i))) (Program_assign (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.concatenate(\" false) (tuple_ndarray_program tnd)) (Program___init__ \", axis=\" false)) (int_program i)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray_vector tv)) (Program___add__ (Program___add__ (Program___init__ \"np.array(\" false) (tuple_value_program tv)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor std (NDArray OptionalIntOrTuple) NDArray)\n(rewrite (ndarray_program (std x %__expr_7783735801821713909)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.std(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (std x (OptionalIntOrTuple_some int_or_tuple_))) (Program_assign (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.std(\" false) (ndarray_program x)) (Program___init__ \", axis=\" false)) (int_or_tuple_program int_or_tuple_)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (tuple_ndarray_program (svd x (Boolean___init__ true))) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.linalg.svd(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (tuple_ndarray_program (svd x %__expr_-5492753565611138931)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.linalg.svd(\" false) (ndarray_program x)) (Program___init__ \", full_matrices=False)\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (ndarray-sqrt x)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.sqrt(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (NDArray_T x)) (Program___add__ (ndarray_program x) (Program___init__ \".T\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (sum x %__expr_7783735801821713909)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.sum(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (sum x (OptionalIntOrTuple_some int_or_tuple_))) (Program_assign (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.sum(\" false) (ndarray_program x)) (Program___init__ \", axis=\" false)) (int_or_tuple_program int_or_tuple_)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(rewrite (tuple_int_program (NDArray_shape x)) (Program___add__ (ndarray_program x) (Program___init__ \".shape\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor ndarray-abs (NDArray) NDArray)\n(rewrite (ndarray_program (ndarray-abs x)) (Program_assign (Program___add__ (Program___add__ (Program___init__ \"np.abs(\" false) (ndarray_program x)) (Program___init__ \")\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor optional_dtype_program (OptionalDType) Program)\n(rewrite (ndarray_program (asarray x odtype (OptionalBool_none ) (OptionalDevice_none ))) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"np.asarray(\" false) (ndarray_program x)) (Program___init__ \", \" false)) (optional_dtype_program odtype)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor optional_int_or_tuple_program (OptionalIntOrTuple) Program)\n(rewrite (optional_int_or_tuple_program (OptionalIntOrTuple_some it)) (int_or_tuple_program it) :ruleset array_api_program_gen_ruleset)\n(rewrite (optional_int_or_tuple_program %__expr_7783735801821713909) (Program___init__ \"None\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (int_or_tuple_program (IntOrTuple_int x)) (int_program x) :ruleset array_api_program_gen_ruleset)\n(constructor IntOrTuple_tuple (TupleInt) IntOrTuple)\n(rewrite (int_or_tuple_program (IntOrTuple_tuple t)) (tuple_int_program t) :ruleset array_api_program_gen_ruleset)\n(constructor IndexKey_ELLIPSIS () IndexKey)\n(rewrite (index_key_program (IndexKey_ELLIPSIS )) (Program___init__ \"...\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (index_key_program (IndexKey_int i)) (int_program i) :ruleset array_api_program_gen_ruleset)\n(constructor slice_program (Slice) Program)\n(rewrite (index_key_program (IndexKey_slice s)) (slice_program s) :ruleset array_api_program_gen_ruleset)\n(constructor multi_axis_index_key_program (MultiAxisIndexKey) Program)\n(rewrite (index_key_program (IndexKey_multi_axis key)) (multi_axis_index_key_program key) :ruleset array_api_program_gen_ruleset)\n(rewrite (index_key_program (IndexKey_ndarray a)) (ndarray_program a) :ruleset array_api_program_gen_ruleset)\n(sort UnstableFn_MultiAxisIndexKeyItem_Int (UnstableFn (Int ) MultiAxisIndexKeyItem))\n(constructor Int___add__ (Int Int) Int)\n(constructor idx_fn-UnstableFn_MultiAxisIndexKeyItem_Int_i-Int__unstable-app_idx_fn__Int___add___i_%__expr_-3819518261003242831__ (UnstableFn_MultiAxisIndexKeyItem_Int Int) MultiAxisIndexKeyItem)\n(rewrite (idx_fn-UnstableFn_MultiAxisIndexKeyItem_Int_i-Int__unstable-app_idx_fn__Int___add___i_%__expr_-3819518261003242831__ idx_fn i) (unstable-app idx_fn (Int___add__ i %__expr_-3819518261003242831)) :subsume :ruleset array_api_program_gen_ruleset)\n(constructor MultiAxisIndexKey___init__ (Int UnstableFn_MultiAxisIndexKeyItem_Int) MultiAxisIndexKey)\n(rewrite (multi_axis_index_key_program (MultiAxisIndexKey___init__ %__expr_1515625565982584680 idx_fn)) (Program___init__ \"\" false) :ruleset array_api_program_gen_ruleset)\n(constructor multi_axis_index_key_item_program (MultiAxisIndexKeyItem) Program)\n(rewrite (multi_axis_index_key_program (MultiAxisIndexKey___init__ (Int___init__ k) idx_fn)) (Program___add__ (Program___add__ (multi_axis_index_key_item_program (unstable-app idx_fn %__expr_1515625565982584680)) (Program___init__ \", \" false)) (multi_axis_index_key_program (MultiAxisIndexKey___init__ (Int___init__ (- k 1)) (unstable-fn \"idx_fn-UnstableFn_MultiAxisIndexKeyItem_Int_i-Int__unstable-app_idx_fn__Int___add___i_%__expr_-3819518261003242831__\" idx_fn)))) :when ((!= k %__expr_7291114401586345010)) :ruleset array_api_program_gen_ruleset)\n(rewrite (multi_axis_index_key_program (MultiAxisIndexKey_from_vec (vec-of ))) (Program___init__ \"\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (multi_axis_index_key_program (MultiAxisIndexKey_from_vec vec)) (Program___add__ (multi_axis_index_key_item_program (vec-get vec %__expr_7291114401586345010)) (Program___init__ \",\" false)) :when ((= (vec-length vec) 1)) :ruleset array_api_program_gen_ruleset)\n(rewrite (multi_axis_index_key_program (MultiAxisIndexKey_from_vec vec)) (Program___add__ (Program___add__ (multi_axis_index_key_item_program (vec-get vec %__expr_7291114401586345010)) (Program___init__ \", \" false)) (multi_axis_index_key_program (MultiAxisIndexKey_from_vec (vec-remove vec %__expr_7291114401586345010)))) :when ((> (vec-length vec) 1)) :ruleset array_api_program_gen_ruleset)\n(rewrite (multi_axis_index_key_item_program (MultiAxisIndexKeyItem_int i)) (int_program i) :ruleset array_api_program_gen_ruleset)\n(rewrite (multi_axis_index_key_item_program (MultiAxisIndexKeyItem_slice s)) (slice_program s) :ruleset array_api_program_gen_ruleset)\n(constructor MultiAxisIndexKeyItem_ELLIPSIS () MultiAxisIndexKeyItem)\n(rewrite (multi_axis_index_key_item_program (MultiAxisIndexKeyItem_ELLIPSIS )) (Program___init__ \"...\" false) :ruleset array_api_program_gen_ruleset)\n(constructor MultiAxisIndexKeyItem_NONE () MultiAxisIndexKeyItem)\n(rewrite (multi_axis_index_key_item_program (MultiAxisIndexKeyItem_NONE )) (Program___init__ \"None\" false) :ruleset array_api_program_gen_ruleset)\n(constructor optional_int_slice_program (OptionalInt) Program)\n(rewrite (slice_program (Slice___init__ start stop %__expr_-1452170678296599248)) (Program___add__ (Program___add__ (optional_int_slice_program start) (Program___init__ \":\" false)) (optional_int_slice_program stop)) :ruleset array_api_program_gen_ruleset)\n(rewrite (slice_program (Slice___init__ start stop (OptionalInt_some i))) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (optional_int_slice_program start) (Program___init__ \":\" false)) (optional_int_slice_program stop)) (Program___init__ \":\" false)) (int_program i)) :ruleset array_api_program_gen_ruleset)\n(rewrite (optional_int_slice_program %__expr_-1452170678296599248) (Program___init__ \"\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (optional_int_slice_program (OptionalInt_some x)) (int_program x) :ruleset array_api_program_gen_ruleset)\n(constructor optional_int_program (OptionalInt) Program)\n(rewrite (optional_int_program %__expr_-1452170678296599248) (Program___init__ \"None\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (optional_int_program (OptionalInt_some x)) (int_program x) :ruleset array_api_program_gen_ruleset)\n(rewrite (optional_dtype_program (OptionalDType_none )) (Program___init__ \"None\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (optional_dtype_program (OptionalDType_some dtype)) (dtype_program dtype) :ruleset array_api_program_gen_ruleset)\n(rewrite (ndarray_program (TupleNDArray___getitem__ ti i)) (Program___add__ (Program___add__ (Program___add__ (tuple_ndarray_program ti) (Program___init__ \"[\" false)) (int_program i)) (Program___init__ \"]\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor TupleNDArray_length (TupleNDArray) Int)\n(rewrite (int_program (TupleNDArray_length ti)) (Program___add__ (Program___add__ (Program___init__ \"len(\" false) (tuple_ndarray_program ti)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor TupleNDArray_EMPTY () TupleNDArray)\n(rewrite (tuple_ndarray_foldl_program (TupleNDArray_EMPTY ) f init) init :ruleset array_api_program_gen_ruleset)\n(constructor TupleNDArray_append (TupleNDArray NDArray) TupleNDArray)\n(rewrite (tuple_ndarray_foldl_program (TupleNDArray_append ti v) f init) (unstable-app f (tuple_ndarray_foldl_program ti f init) v) :ruleset array_api_program_gen_ruleset)\n(constructor TupleValue___getitem__ (TupleValue Int) Value)\n(rewrite (value_program (TupleValue___getitem__ ti i)) (Program___add__ (Program___add__ (Program___add__ (tuple_value_program ti) (Program___init__ \"[\" false)) (int_program i)) (Program___init__ \"]\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor TupleValue_length (TupleValue) Int)\n(rewrite (int_program (TupleValue_length ti)) (Program___add__ (Program___add__ (Program___init__ \"len(\" false) (tuple_value_program ti)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor TupleValue_EMPTY () TupleValue)\n(rewrite (tuple_value_foldl_program (TupleValue_EMPTY ) f init) init :ruleset array_api_program_gen_ruleset)\n(constructor TupleValue_append (TupleValue Value) TupleValue)\n(rewrite (tuple_value_foldl_program (TupleValue_append ti v) f init) (unstable-app f (tuple_value_foldl_program ti f init) v) :ruleset array_api_program_gen_ruleset)\n(rewrite (value_program (Value_int i)) (int_program i) :ruleset array_api_program_gen_ruleset)\n(constructor Value_bool (Boolean) Value)\n(constructor bool_program (Boolean) Program)\n(rewrite (value_program (Value_bool b)) (bool_program b) :ruleset array_api_program_gen_ruleset)\n(constructor float_program (Float) Program)\n(rewrite (value_program (Value_float f)) (float_program f) :ruleset array_api_program_gen_ruleset)\n(rewrite (value_program (NDArray_to_value x)) (ndarray_program x) :ruleset array_api_program_gen_ruleset)\n(constructor Value___lt__ (Value Value) Value)\n(rewrite (value_program (Value___lt__ v1 v2)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (value_program v1)) (Program___init__ \" < \" false)) (value_program v2)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Value___truediv__ (Value Value) Value)\n(rewrite (value_program (Value___truediv__ v1 v2)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (value_program v1)) (Program___init__ \" / \" false)) (value_program v2)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Value___add__ (Value Value) Value)\n(rewrite (value_program (Value___add__ v1 v2)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (value_program v1)) (Program___init__ \" + \" false)) (value_program v2)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Value___mul__ (Value Value) Value)\n(rewrite (value_program (Value___mul__ v1 v2)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (value_program v1)) (Program___init__ \" * \" false)) (value_program v2)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Value_to_bool (Value) Boolean)\n(rewrite (bool_program (Value_to_bool v1)) (value_program v1) :ruleset array_api_program_gen_ruleset)\n(rewrite (int_program (Value_to_int v1)) (value_program v1) :ruleset array_api_program_gen_ruleset)\n(constructor NDArray_index (NDArray TupleInt) Value)\n(rewrite (value_program (NDArray_index xs ti)) (Program_assign (Program___add__ (Program___add__ (Program___add__ (ndarray_program xs) (Program___init__ \"[\" false)) (tuple_int_program ti)) (Program___init__ \"]\" false))) :ruleset array_api_program_gen_ruleset)\n(constructor Value_sqrt (Value) Value)\n(rewrite (value_program (Value_sqrt v1)) (Program___add__ (Program___add__ (Program___init__ \"np.sqrt(\" false) (value_program v1)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Value_real (Value) Value)\n(rewrite (value_program (Value_real v1)) (Program___add__ (Program___add__ (Program___init__ \"np.real(\" false) (value_program v1)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Value_conj (Value) Value)\n(rewrite (value_program (Value_conj v1)) (Program___add__ (Program___add__ (Program___init__ \"np.conj(\" false) (value_program v1)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (float_program (Float___init__ f64_)) (Program___init__ (to-string f64_) false) :ruleset array_api_program_gen_ruleset)\n(constructor Float_abs (Float) Float)\n(rewrite (float_program (Float_abs f)) (Program___add__ (Program___add__ (Program___init__ \"np.abs(\" false) (float_program f)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Float_from_int (Int) Float)\n(rewrite (float_program (Float_from_int i)) (int_program i) :ruleset array_api_program_gen_ruleset)\n(constructor Float___add__ (Float Float) Float)\n(rewrite (float_program (Float___add__ f g)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (float_program f)) (Program___init__ \" + \" false)) (float_program g)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Float___sub__ (Float Float) Float)\n(rewrite (float_program (Float___sub__ f g)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (float_program f)) (Program___init__ \" - \" false)) (float_program g)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Float___mul__ (Float Float) Float)\n(rewrite (float_program (Float___mul__ f g)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (float_program f)) (Program___init__ \" * \" false)) (float_program g)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Float___truediv__ (Float Float) Float)\n(rewrite (float_program (Float___truediv__ f g)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (float_program f)) (Program___init__ \" / \" false)) (float_program g)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (float_program (Float_rational r)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"float(\" false) (Program___init__ (to-string (numer r)) false)) (Program___init__ \" / \" false)) (Program___init__ (to-string (denom r)) false)) (Program___init__ \")\" false)) :when ((!= (denom r) (bigint 1))) :ruleset array_api_program_gen_ruleset)\n(rewrite (float_program (Float_rational r)) (Program___add__ (Program___add__ (Program___init__ \"float(\" false) (Program___init__ (to-string (numer r)) false)) (Program___init__ \")\" false)) :when ((= (denom r) (bigint 1))) :ruleset array_api_program_gen_ruleset)\n(rewrite (dtype_program %__expr_3312772843316740737) (Program___init__ \"np.dtype(np.float64)\" false) :ruleset array_api_program_gen_ruleset)\n(constructor DType_float32 () DType)\n(rewrite (dtype_program (DType_float32 )) (Program___init__ \"np.dtype(np.float32)\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (dtype_program (DType_int64 )) (Program___init__ \"np.dtype(np.int64)\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (dtype_program %__expr_-2743419600569035313) (Program___init__ \"np.dtype(np.int32)\" false) :ruleset array_api_program_gen_ruleset)\n(constructor DType_bool () DType)\n(rewrite (dtype_program (DType_bool )) (Program___init__ \"np.dtype(np.bool)\" false) :ruleset array_api_program_gen_ruleset)\n(constructor DType_object () DType)\n(rewrite (dtype_program (DType_object )) (Program___init__ \"np.dtype(np.object_)\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (int_program (TupleInt___getitem__ ti i)) (Program___add__ (Program___add__ (Program___add__ (tuple_int_program ti) (Program___init__ \"[\" false)) (int_program i)) (Program___init__ \"]\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor TupleInt_length (TupleInt) Int)\n(rewrite (int_program (TupleInt_length ti)) (Program___add__ (Program___add__ (Program___init__ \"len(\" false) (tuple_int_program ti)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor TupleInt_EMPTY () TupleInt)\n(rewrite (tuple_int_foldl_program (TupleInt_EMPTY ) f init) init :ruleset array_api_program_gen_ruleset)\n(constructor TupleInt_append (TupleInt Int) TupleInt)\n(rewrite (tuple_int_foldl_program (TupleInt_append ti i) f init) (unstable-app f (tuple_int_foldl_program ti f init) i) :ruleset array_api_program_gen_ruleset)\n(constructor TupleInt___add__ (TupleInt TupleInt) TupleInt)\n(rewrite (tuple_int_program (TupleInt___add__ ti ti2)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (tuple_int_program ti)) (Program___init__ \" + \" false)) (tuple_int_program ti2)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int_var (String) Int)\n(rewrite (int_program (Int_var s)) (Program___init__ s true) :ruleset array_api_program_gen_ruleset)\n(rewrite (int_program (Int___init__ i64_)) (Program___init__ (to-string i64_) false) :ruleset array_api_program_gen_ruleset)\n(constructor Int___invert__ (Int) Int)\n(rewrite (int_program (Int___invert__ i)) (Program___add__ (Program___init__ \"~\" false) (int_program i)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___lt__ (Int Int) Boolean)\n(rewrite (bool_program (Int___lt__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" < \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___le__ (Int Int) Boolean)\n(rewrite (bool_program (Int___le__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" <= \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___gt__ (Int Int) Boolean)\n(rewrite (bool_program (Int___gt__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" > \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___ge__ (Int Int) Boolean)\n(rewrite (bool_program (Int___ge__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" >= \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___eq__ (Int Int) Boolean)\n(rewrite (bool_program (Int___eq__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" == \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (int_program (Int___add__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" + \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___sub__ (Int Int) Int)\n(rewrite (int_program (Int___sub__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" - \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___mul__ (Int Int) Int)\n(rewrite (int_program (Int___mul__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" * \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___truediv__ (Int Int) Int)\n(rewrite (int_program (Int___truediv__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" / \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___mod__ (Int Int) Int)\n(rewrite (int_program (Int___mod__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" % \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___pow__ (Int Int) Int)\n(rewrite (int_program (Int___pow__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" ** \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___and__ (Int Int) Int)\n(rewrite (int_program (Int___and__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" & \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___or__ (Int Int) Int)\n(rewrite (int_program (Int___or__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" | \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___xor__ (Int Int) Int)\n(rewrite (int_program (Int___xor__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" ^ \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___lshift__ (Int Int) Int)\n(rewrite (int_program (Int___lshift__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" << \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___rshift__ (Int Int) Int)\n(rewrite (int_program (Int___rshift__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" >> \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(constructor Int___floordiv__ (Int Int) Int)\n(rewrite (int_program (Int___floordiv__ i j)) (Program___add__ (Program___add__ (Program___add__ (Program___add__ (Program___init__ \"(\" false) (int_program i)) (Program___init__ \" // \" false)) (int_program j)) (Program___init__ \")\" false)) :ruleset array_api_program_gen_ruleset)\n(rewrite (bool_program (Boolean___init__ true)) (Program___init__ \"True\" false) :ruleset array_api_program_gen_ruleset)\n(rewrite (bool_program %__expr_-5492753565611138931) (Program___init__ \"False\" false) :ruleset array_api_program_gen_ruleset)\n(ruleset program_gen_ruleset)\n(function Program_expr (Program) String :no-merge)\n(function Program_next_sym (Program) i64 :no-merge)\n(function Program_is_identifer (Program) bool :no-merge)\n(rule ((= p (Program___init__ s b))\n       (Program_compile p i))\n      ((set (Program_expr p) s)\n       (set (Program_statements p) \"\")\n       (set (Program_next_sym p) i)\n       (set (Program_is_identifer p) b))\n        :ruleset program_gen_ruleset )\n(constructor Program_expr_to_statement (Program) Program)\n(rewrite (Program_statement p1 p2) (Program___add__ p1 (Program_expr_to_statement p2)) :ruleset program_gen_ruleset)\n(function Program_parent (Program) Program :merge old)\n(rule ((= p (Program_expr_to_statement p1))\n       (Program_compile p i))\n      ((set (Program_parent p1) p)\n       (set (Program_is_identifer p) false))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_expr_to_statement p1))\n       (Program_compile p i)\n       (= (Program_parent p1) p))\n      ((Program_compile p1 i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_expr_to_statement p1))\n       (Program_compile p i)\n       (!= (Program_parent p1) p)\n       (= s1 (Program_expr p1)))\n      ((set (Program_statements p) (+ s1 \"\n\"))\n       (set (Program_next_sym p) i)\n       (set (Program_expr p) \"\"))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_expr_to_statement p1))\n       (= (Program_parent p1) p)\n       (= s1 (Program_expr p1))\n       (= s2 (Program_statements p1))\n       (= i (Program_next_sym p1)))\n      ((set (Program_statements p) (+ s2 s1 \"\n\"))\n       (set (Program_next_sym p) i)\n       (set (Program_expr p) \"\"))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (= (Program_expr p) (Program_expr p1))\n       (= b (Program_is_identifer p1)))\n      ((set (Program_is_identifer p) b))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (= (Program_expr p) (Program_expr p2))\n       (= b (Program_is_identifer p2)))\n      ((set (Program_is_identifer p) b))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (!= (Program_expr p) (Program_expr p1))\n       (!= (Program_expr p) (Program_expr p2)))\n      ((set (Program_is_identifer p) false))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (Program_compile p i))\n      ((set (Program_parent p1) p))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (Program_compile p i)\n       (= (Program_parent p1) p))\n      ((Program_compile p1 i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (Program_compile p i)\n       (Program_next_sym p1))\n      ((set (Program_parent p2) p))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (Program_compile p i)\n       (!= (Program_parent p1) p)\n       (= (Program_parent p2) p))\n      ((Program_compile p2 i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (Program_compile p i2)\n       (= (Program_parent p1) p)\n       (= i (Program_next_sym p1))\n       (= (Program_parent p2) p))\n      ((Program_compile p2 i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (= s1 (Program_expr p1))\n       (= s2 (Program_expr p2)))\n      ((set (Program_expr p) (+ s1 s2)))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (= (Program_parent p1) p)\n       (= (Program_parent p2) p)\n       (= s1 (Program_statements p1))\n       (= s2 (Program_statements p2))\n       (= i (Program_next_sym p2)))\n      ((set (Program_statements p) (+ s1 s2))\n       (set (Program_next_sym p) i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (Program_compile p i)\n       (!= (Program_parent p1) p)\n       (!= (Program_parent p2) p))\n      ((set (Program_statements p) \"\")\n       (set (Program_next_sym p) i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (= (Program_parent p1) p)\n       (!= (Program_parent p2) p)\n       (= s1 (Program_statements p1))\n       (= i (Program_next_sym p1)))\n      ((set (Program_statements p) s1)\n       (set (Program_next_sym p) i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program___add__ p1 p2))\n       (= (Program_parent p2) p)\n       (!= (Program_parent p1) p)\n       (= s2 (Program_statements p2))\n       (= i (Program_next_sym p2)))\n      ((set (Program_statements p) s2)\n       (set (Program_next_sym p) i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_assign p1))\n       (Program_compile p i))\n      ((set (Program_parent p1) p)\n       (set (Program_is_identifer p) true))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_assign p1))\n       (Program_compile p i)\n       (= (Program_parent p1) p))\n      ((Program_compile p1 i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_assign p1))\n       (= (Program_parent p1) p)\n       (= s1 (Program_statements p1))\n       (= i (Program_next_sym p1))\n       (= s2 (Program_expr p1))\n       (= (Program_is_identifer p1) false))\n      ((set (Program_statements p) (+ s1 (+ \"_\" (to-string i)) \" = \" s2 \"\n\"))\n       (set (Program_expr p) (+ \"_\" (to-string i)))\n       (set (Program_next_sym p) (+ i 1)))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_assign p1))\n       (!= (Program_parent p1) p)\n       (Program_compile p i)\n       (= s2 (Program_expr p1))\n       (= (Program_is_identifer p1) false))\n      ((set (Program_statements p) (+ (+ \"_\" (to-string i)) \" = \" s2 \"\n\"))\n       (set (Program_expr p) (+ \"_\" (to-string i)))\n       (set (Program_next_sym p) (+ i 1)))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_assign p1))\n       (= (Program_parent p1) p)\n       (= s1 (Program_statements p1))\n       (= i (Program_next_sym p1))\n       (= s2 (Program_expr p1))\n       (= (Program_is_identifer p1) true))\n      ((set (Program_statements p) s1)\n       (set (Program_expr p) s2)\n       (set (Program_next_sym p) i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_assign p1))\n       (!= (Program_parent p1) p)\n       (Program_compile p i)\n       (= s2 (Program_expr p1))\n       (= (Program_is_identifer p1) true))\n      ((set (Program_statements p) \"\")\n       (set (Program_expr p) s2)\n       (set (Program_next_sym p) i))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_function_two p1 p2 p3 s1))\n       (Program_compile p i))\n      ((set (Program_parent p2) p)\n       (set (Program_parent p3) p)\n       (set (Program_parent p1) p)\n       (Program_compile p2 i)\n       (Program_compile p3 i)\n       (Program_compile p1 i)\n       (set (Program_is_identifer p) true))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_function_two p1 p2 p3 s1))\n       (Program_compile p i)\n       (= s2 (Program_expr p1))\n       (= s3 (Program_statements p1))\n       (= s4 (Program_expr p2))\n       (= s5 (Program_expr p3)))\n      ((set (Program_statements p) (+ \"def \" s1 \"(\" s4 \", \" s5 \"):\n    \" (replace s3 \"\n\" \"\n    \") \"return \" s2 \"\n\"))\n       (set (Program_next_sym p) i)\n       (set (Program_expr p) s1))\n        :ruleset program_gen_ruleset )\n(constructor Program_function_three (Program Program Program Program String) Program)\n(rule ((= p (Program_function_three p1 p2 p3 p4 s1))\n       (Program_compile p i))\n      ((set (Program_parent p2) p)\n       (set (Program_parent p3) p)\n       (set (Program_parent p1) p)\n       (set (Program_parent p4) p)\n       (Program_compile p2 i)\n       (Program_compile p3 i)\n       (Program_compile p1 i)\n       (Program_compile p4 i)\n       (set (Program_is_identifer p) true))\n        :ruleset program_gen_ruleset )\n(rule ((= p (Program_function_three p1 p2 p3 p4 s1))\n       (Program_compile p i)\n       (= s2 (Program_expr p1))\n       (= s3 (Program_statements p1))\n       (= s4 (Program_expr p2))\n       (= s5 (Program_expr p3))\n       (= s6 (Program_expr p4)))\n      ((set (Program_statements p) (+ \"def \" s1 \"(\" s4 \", \" s5 \", \" s6 \"):\n    \" (replace s3 \"\n\" \"\n    \") \"return \" s2 \"\n\"))\n       (set (Program_next_sym p) i)\n       (set (Program_expr p) s1))\n        :ruleset program_gen_ruleset )\n(unstable-combined-ruleset combined_ruleset_4774917760 array_api_program_gen_ruleset program_gen_ruleset)\n(ruleset array_api_program_gen_eval_ruleset)\n(unstable-combined-ruleset combined_ruleset_4774912336 combined_ruleset_4774917760 array_api_program_gen_eval_ruleset)\n(ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleInt_from_vec vs) (TupleInt_EMPTY ) :when ((= (vec-length vs) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleInt_from_vec vs) (TupleInt_append (TupleInt_from_vec (vec-remove vs (- (vec-length vs) 1))) (vec-get vs (- (vec-length vs) 1))) :when ((!= (vec-length vs) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleValue_from_vec vv) (TupleValue_EMPTY ) :when ((= (vec-length vv) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleValue_from_vec vv) (TupleValue_append (TupleValue_from_vec (vec-remove vv (- (vec-length vv) 1))) (vec-get vv (- (vec-length vv) 1))) :when ((!= (vec-length vv) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(sort TupleTupleInt)\n(sort Vec_TupleInt (Vec TupleInt))\n(constructor TupleTupleInt_from_vec (Vec_TupleInt) TupleTupleInt)\n(constructor TupleTupleInt_EMPTY () TupleTupleInt)\n(rewrite (TupleTupleInt_from_vec vt) (TupleTupleInt_EMPTY ) :when ((= (vec-length vt) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(constructor TupleTupleInt_append (TupleTupleInt TupleInt) TupleTupleInt)\n(rewrite (TupleTupleInt_from_vec vt) (TupleTupleInt_append (TupleTupleInt_from_vec (vec-remove vt (- (vec-length vt) 1))) (vec-get vt (- (vec-length vt) 1))) :when ((!= (vec-length vt) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleNDArray_from_vec vn) (TupleNDArray_EMPTY ) :when ((= (vec-length vn) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(rewrite (TupleNDArray_from_vec vn) (TupleNDArray_append (TupleNDArray_from_vec (vec-remove vn (- (vec-length vn) 1))) (vec-get vn (- (vec-length vn) 1))) :when ((!= (vec-length vn) %__expr_7291114401586345010)) :ruleset array_api_vec_to_cons_ruleset)\n(unstable-combined-ruleset combined_ruleset_4774912912 combined_ruleset_4774912336 array_api_vec_to_cons_ruleset)\n(run-schedule (saturate (run combined_ruleset_4774912912)))\n(extract (Program_statements (ndarray_function_two_program (NDArray___getitem__ (NDArray___matmul__ (NDArray___sub__ %__expr_6720480091233118296 %__expr_3758124421086381772) (NDArray___matmul__ %__expr_-4746212653244667575 (NDArray___getitem__ (NDArray_T (TupleNDArray___getitem__ %__expr_6466749670865178762 %__expr_-8967796230287329510)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ %__expr_951252240580768262 (NDArray___mul__ (NDArray_scalar (Value_float (Float___init__ 0.0001))) (NDArray___getitem__ %__expr_951252240580768262 (IndexKey_int %__expr_1515625565982584680)))) %__expr_-2743419600569035313) %__expr_7783735801821713909)))) %__expr_-1452170678296599248)))))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of %__expr_-732844627964303682 (MultiAxisIndexKeyItem_slice (Slice___init__ %__expr_-1452170678296599248 (OptionalInt_some %__expr_-8967796230287329510) %__expr_-1452170678296599248)))))) %__expr_9124251980924877179 %__expr_-4848395256643278075)) 0)\n",
  "stresstest_large_expr": ";; Old version of python array optimization that does not include CSE with let statements\n;; serves as a benchmark for adding large expressions to egglog\n(ruleset array_api_ruleset)\n(sort Int)\n(constructor cast_Callable__Int__Int___Int___lambda_i_____i_ (Int Int) Int)\n(rewrite (cast_Callable__Int__Int___Int___lambda_i_____i_ __var__i __var___) __var__i :ruleset array_api_ruleset)\n(sort TupleInt)\n(constructor TupleInt_single (Int) TupleInt)\n(sort UnstableFn_Int_Int (UnstableFn (Int) Int))\n(constructor TupleInt___init__ (Int UnstableFn_Int_Int) TupleInt)\n(constructor Int___init__ (i64) Int)\n(rewrite (TupleInt_single __var__i) (TupleInt___init__ (Int___init__ 1) (unstable-fn \"cast_Callable__Int__Int___Int___lambda_i_____i_\" __var__i)) :ruleset array_api_ruleset)\n(constructor cast_Callable__Int___Int___lambda_i__i_ (Int) Int)\n(rewrite (cast_Callable__Int___Int___lambda_i__i_ __var__i) __var__i :ruleset array_api_ruleset)\n(constructor TupleInt_range (Int) TupleInt)\n(rewrite (TupleInt_range __var__stop) (TupleInt___init__ __var__stop (unstable-fn \"cast_Callable__Int___Int___lambda_i__i_\")) :ruleset array_api_ruleset)\n(sort Vec_Int (Vec Int))\n(constructor TupleInt_from_vec (Vec_Int) TupleInt)\n(constructor index_vec_int (Vec_Int Int) Int)\n(rewrite (TupleInt_from_vec __var__vec) (TupleInt___init__ (Int___init__ (vec-length __var__vec)) (unstable-fn \"index_vec_int\" __var__vec)) :ruleset array_api_ruleset)\n(constructor cast_Callable__TupleInt__TupleInt__Int___Int___lambda_other__self__i__Int_if__i_<_self_length____self_i___other_i_-_self_length_____ (TupleInt TupleInt Int) Int)\n(sort Boolean)\n(constructor Int_if_ (Boolean Int Int) Int)\n(constructor Int___lt__ (Int Int) Boolean)\n(constructor TupleInt_length (TupleInt) Int)\n(constructor TupleInt___getitem__ (TupleInt Int) Int)\n(constructor Int___sub__ (Int Int) Int)\n(rewrite (cast_Callable__TupleInt__TupleInt__Int___Int___lambda_other__self__i__Int_if__i_<_self_length____self_i___other_i_-_self_length_____ __var__other __var__self __var__i) (Int_if_ (Int___lt__ __var__i (TupleInt_length __var__self)) (TupleInt___getitem__ __var__self __var__i) (TupleInt___getitem__ __var__other (Int___sub__ __var__i (TupleInt_length __var__self)))) :ruleset array_api_ruleset)\n(constructor TupleInt___add__ (TupleInt TupleInt) TupleInt)\n(constructor Int___add__ (Int Int) Int)\n(rewrite (TupleInt___add__ __var__self __var__other) (TupleInt___init__ (Int___add__ (TupleInt_length __var__self) (TupleInt_length __var__other)) (unstable-fn \"cast_Callable__TupleInt__TupleInt__Int___Int___lambda_other__self__i__Int_if__i_<_self_length____self_i___other_i_-_self_length_____\" __var__other __var__self)) :ruleset array_api_ruleset)\n(constructor cast_Callable__Int__Boolean__Int___Boolean___lambda_i__acc__j__acc_|__i_==_j__ (Int Boolean Int) Boolean)\n(constructor Boolean___or__ (Boolean Boolean) Boolean)\n(constructor Int___eq__ (Int Int) Boolean)\n(rewrite (cast_Callable__Int__Boolean__Int___Boolean___lambda_i__acc__j__acc_|__i_==_j__ __var__i __var__acc __var__j) (Boolean___or__ __var__acc (Int___eq__ __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor TupleInt_contains (TupleInt Int) Boolean)\n(sort UnstableFn_Boolean_Boolean_Int (UnstableFn (Boolean Int) Boolean))\n(constructor TupleInt_fold_boolean (TupleInt Boolean UnstableFn_Boolean_Boolean_Int) Boolean)\n(constructor FALSE () Boolean)\n(rewrite (TupleInt_contains __var__self __var__i) (TupleInt_fold_boolean __var__self (FALSE) (unstable-fn \"cast_Callable__Int__Boolean__Int___Boolean___lambda_i__acc__j__acc_|__i_==_j__\" __var__i)) :ruleset array_api_ruleset)\n(sort NDArray)\n(constructor NDArray_size (NDArray) Int)\n(sort UnstableFn_Int_Int_Int (UnstableFn (Int Int) Int))\n(constructor TupleInt_fold (TupleInt Int UnstableFn_Int_Int_Int) Int)\n(constructor NDArray_shape (NDArray) TupleInt)\n(constructor Int___mul__ (Int Int) Int)\n(rewrite (NDArray_size __var__x) (TupleInt_fold (NDArray_shape __var__x) (Int___init__ 1) (unstable-fn \"Int___mul__\")) :ruleset array_api_ruleset)\n(constructor unique_values (NDArray) NDArray)\n(sort TupleValue)\n(constructor NDArray_vector (TupleValue) NDArray)\n(sort Value)\n(constructor possible_values (Value) TupleValue)\n(constructor NDArray_index (NDArray TupleInt) Value)\n(constructor ALL_INDICES () TupleInt)\n(rewrite (unique_values __var__a) (NDArray_vector (possible_values (NDArray_index __var__a (ALL_INDICES)))) :ruleset array_api_ruleset)\n(constructor Value_isfinite (Value) Boolean)\n(constructor Value_int (Int) Value)\n(constructor TRUE () Boolean)\n(rewrite (Value_isfinite (Value_int __var__i)) (TRUE) :ruleset array_api_ruleset)\n(constructor Value_bool (Boolean) Value)\n(rewrite (Value_isfinite (Value_bool __var__b)) (TRUE) :ruleset array_api_ruleset)\n(sort Float)\n(constructor Value_float (Float) Value)\n(constructor Float___init__ (f64) Float :cost 3)\n(rewrite (Value_isfinite (Value_float (Float___init__ __var__f))) (TRUE) :when ((!= __var__f NaN)) :ruleset array_api_ruleset)\n(constructor isfinite (NDArray) NDArray)\n(sort OptionalIntOrTuple)\n(constructor sum (NDArray OptionalIntOrTuple) NDArray)\n(constructor OptionalIntOrTuple_none () OptionalIntOrTuple)\n(constructor NDArray_scalar (Value) NDArray)\n(rewrite (isfinite (sum __var__arr (OptionalIntOrTuple_none))) (NDArray_scalar (Value_bool (Value_isfinite (NDArray_index __var__arr (ALL_INDICES))))) :ruleset array_api_ruleset)\n(constructor assume_value_one_of (NDArray TupleValue) NDArray)\n(rewrite (NDArray_shape (assume_value_one_of __var__x __var__vs)) (NDArray_shape __var__x) :ruleset array_api_ruleset)\n(sort DType)\n(constructor NDArray_dtype (NDArray) DType)\n(rewrite (NDArray_dtype (assume_value_one_of __var__x __var__vs)) (NDArray_dtype __var__x) :ruleset array_api_ruleset)\n(rule ((= __var__v (NDArray_index (assume_value_one_of __var__x __var__vs) __var__idx)))\n      ((union __var__v (NDArray_index __var__x __var__idx))\n       (union (possible_values __var__v) __var__vs))\n        :ruleset array_api_ruleset )\n(constructor assume_isfinite (NDArray) NDArray)\n(rewrite (NDArray_shape (assume_isfinite __var__x)) (NDArray_shape __var__x) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (assume_isfinite __var__x)) (NDArray_dtype __var__x) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (assume_isfinite __var__x) __var__ti) (NDArray_index __var__x __var__ti) :ruleset array_api_ruleset)\n(rewrite (Value_isfinite (NDArray_index (assume_isfinite __var__x) __var__ti)) (TRUE) :ruleset array_api_ruleset)\n(constructor assume_shape (NDArray TupleInt) NDArray)\n(rewrite (NDArray_shape (assume_shape __var__x __var__shape)) __var__shape :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (assume_shape __var__x __var__shape)) (NDArray_dtype __var__x) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (assume_shape __var__x __var__shape) __var__idx) (NDArray_index __var__x __var__idx) :ruleset array_api_ruleset)\n(constructor assume_dtype (NDArray DType) NDArray)\n(rewrite (NDArray_dtype (assume_dtype __var__x __var__dtype)) __var__dtype :ruleset array_api_ruleset)\n(rewrite (NDArray_shape (assume_dtype __var__x __var__dtype)) (NDArray_shape __var__x) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (assume_dtype __var__x __var__dtype) __var__idx) (NDArray_index __var__x __var__idx) :ruleset array_api_ruleset)\n(sort IndexKey)\n(constructor NDArray___getitem__ (NDArray IndexKey) NDArray)\n(constructor IndexKey_int (Int) IndexKey)\n(rewrite (NDArray___getitem__ __var__x (IndexKey_int __var__i)) (NDArray_scalar (NDArray_index __var__x (TupleInt_single __var__i))) :ruleset array_api_ruleset)\n(sort OptionalBool)\n(constructor reshape (NDArray TupleInt OptionalBool) NDArray)\n(rule ((= __a (reshape __var__x __var__shape __var__copy)))\n      ((NDArray_shape __var__x)\n       (TupleInt_length (NDArray_shape __var__x)))\n        :ruleset array_api_ruleset )\n(rule ((reshape __var__x __var__shape __var__copy))\n      ((TupleInt_length __var__shape)\n       (TupleInt___getitem__ __var__shape (Int___init__ 0)))\n        :ruleset array_api_ruleset )\n(rewrite (reshape __var__x __var__shape __var__copy) __var__x :when ((= (TupleInt_length (NDArray_shape __var__x)) (Int___init__ 1)) (= (TupleInt_length __var__shape) (Int___init__ 1)) (= (TupleInt___getitem__ __var__shape (Int___init__ 0)) (Int___init__ -1))) :ruleset array_api_ruleset)\n(constructor TupleValue_length (TupleValue) Int)\n(rewrite (NDArray_shape (NDArray_vector __var__vs)) (TupleInt_single (TupleValue_length __var__vs)) :ruleset array_api_ruleset)\n(constructor Value_dtype (Value) DType)\n(constructor TupleValue___getitem__ (TupleValue Int) Value)\n(rewrite (NDArray_dtype (NDArray_vector __var__vs)) (Value_dtype (TupleValue___getitem__ __var__vs (Int___init__ 0))) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (NDArray_vector __var__vs) __var__ti) (TupleValue___getitem__ __var__vs (TupleInt___getitem__ __var__ti (Int___init__ 0))) :ruleset array_api_ruleset)\n(constructor TupleInt_EMPTY () TupleInt)\n(rewrite (NDArray_shape (NDArray_scalar __var__v)) (TupleInt_EMPTY) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (NDArray_scalar __var__v)) (Value_dtype __var__v) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (NDArray_scalar __var__v) (TupleInt_EMPTY)) __var__v :ruleset array_api_ruleset)\n(constructor any (NDArray) NDArray)\n(constructor TupleValue_includes (TupleValue Value) Boolean)\n(constructor Value_to_truthy_value (Value) Value)\n(rewrite (any __var__x) (NDArray_scalar (Value_bool (TupleValue_includes (possible_values (Value_to_truthy_value (NDArray_index __var__x (ALL_INDICES)))) (Value_bool (TRUE))))) :ruleset array_api_ruleset)\n(constructor NDArray___lt__ (NDArray NDArray) NDArray)\n(constructor Value___lt__ (Value Value) Value)\n(constructor broadcast_index (TupleInt TupleInt TupleInt) TupleInt)\n(constructor broadcast_shapes (TupleInt TupleInt) TupleInt)\n(rewrite (NDArray_index (NDArray___lt__ __var__x __var__y) __var__idx) (Value___lt__ (NDArray_index __var__x (broadcast_index (NDArray_shape __var__x) (broadcast_shapes (NDArray_shape __var__x) (NDArray_shape __var__y)) __var__idx)) (NDArray_index __var__y (broadcast_index (NDArray_shape __var__y) (broadcast_shapes (NDArray_shape __var__x) (NDArray_shape __var__y)) __var__idx))) :ruleset array_api_ruleset)\n(constructor NDArray___truediv__ (NDArray NDArray) NDArray)\n(constructor Value___truediv__ (Value Value) Value)\n(rewrite (NDArray_index (NDArray___truediv__ __var__x __var__y) __var__idx) (Value___truediv__ (NDArray_index __var__x (broadcast_index (NDArray_shape __var__x) (broadcast_shapes (NDArray_shape __var__x) (NDArray_shape __var__y)) __var__idx)) (NDArray_index __var__y (broadcast_index (NDArray_shape __var__y) (broadcast_shapes (NDArray_shape __var__x) (NDArray_shape __var__y)) __var__idx))) :ruleset array_api_ruleset)\n(rewrite (NDArray_index (NDArray_scalar __var__v) __var__idx) __var__v :ruleset array_api_ruleset)\n(constructor astype (NDArray DType) NDArray)\n(constructor Value_astype (Value DType) Value)\n(rewrite (NDArray_index (astype __var__x __var__dtype) __var__idx) (Value_astype (NDArray_index __var__x __var__idx) __var__dtype) :ruleset array_api_ruleset)\n(relation greater_zero (Value))\n(sort TupleNDArray)\n(constructor TupleNDArray___getitem__ (TupleNDArray Int) NDArray)\n(constructor unique_counts (NDArray) TupleNDArray)\n(rule ((= __var__v (NDArray_index (TupleNDArray___getitem__ (unique_counts __var__x) (Int___init__ 1)) __var__idx)))\n      ((greater_zero __var__v))\n        :ruleset array_api_ruleset )\n(rule ((greater_zero __var__v)\n       (= __var__v1 (Value_astype __var__v __var__dtype)))\n      ((greater_zero __var__v1))\n        :ruleset array_api_ruleset )\n(rule ((= __var__v (Value_float (Float___init__ __var__f)))\n       (> __var__f 0.0))\n      ((greater_zero __var__v))\n        :ruleset array_api_ruleset )\n(rule ((= __var__v (Value_int (Int___init__ __var__i)))\n       (> __var__i 0))\n      ((greater_zero __var__v))\n        :ruleset array_api_ruleset )\n(rule ((greater_zero __var__v)\n       (greater_zero __var__v1)\n       (= __var__v2 (Value___truediv__ __var__v __var__v1)))\n      ((greater_zero __var__v2))\n        :ruleset array_api_ruleset )\n(rule ((greater_zero __var__v)\n       (= __var__v1 (Value___lt__ __var__v (Value_int (Int___init__ 0)))))\n      ((union __var__v1 (Value_bool (FALSE))))\n        :ruleset array_api_ruleset )\n(constructor TupleValue___init__ (Value) TupleValue)\n(rewrite (possible_values (Value_bool __var__b)) (TupleValue___init__ (Value_bool __var__b)) :ruleset array_api_ruleset)\n(rule ((= __var__v1 (Value_astype __var__v __var__dtype))\n       (greater_zero __var__v))\n      ((greater_zero __var__v1))\n        :ruleset array_api_ruleset )\n(constructor TupleNDArray_length (TupleNDArray) Int)\n(constructor svd (NDArray Boolean) TupleNDArray)\n(rewrite (TupleNDArray_length (svd __var__x __var__full_matrices)) (Int___init__ 3) :ruleset array_api_ruleset)\n(constructor unique_inverse (NDArray) TupleNDArray)\n(rewrite (TupleNDArray_length (unique_inverse __var__x)) (Int___init__ 2) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray___getitem__ (unique_inverse __var__x) (Int___init__ 0)) (unique_values __var__x) :ruleset array_api_ruleset)\n(constructor ndarray-abs (NDArray) NDArray)\n(constructor Float_abs (Float) Float)\n(rewrite (ndarray-abs (NDArray_scalar (Value_float __var__f))) (NDArray_scalar (Value_float (Float_abs __var__f))) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray_length (unique_counts __var__x)) (Int___init__ 2) :ruleset array_api_ruleset)\n(rewrite (sum (TupleNDArray___getitem__ (unique_counts __var__x) (Int___init__ 1)) (OptionalIntOrTuple_none)) (NDArray_scalar (Value_int (NDArray_size __var__x))) :ruleset array_api_ruleset)\n(rewrite (sum (astype (TupleNDArray___getitem__ (unique_counts __var__x) (Int___init__ 1)) __var__dtype) (OptionalIntOrTuple_none)) (astype (NDArray_scalar (Value_int (NDArray_size __var__x))) __var__dtype) :ruleset array_api_ruleset)\n(rewrite (NDArray_dtype (astype __var__x __var__dtype)) __var__dtype :ruleset array_api_ruleset)\n(constructor DType_float64 () DType)\n(rewrite (astype (NDArray_scalar (Value_int (Int___init__ __var__i))) (DType_float64)) (NDArray_scalar (Value_float (Float___init__ (to-f64 __var__i)))) :ruleset array_api_ruleset)\n(sort OptionalInt)\n(constructor concat (TupleNDArray OptionalInt) NDArray)\n(constructor TupleNDArray___init__ (NDArray) TupleNDArray)\n(constructor OptionalInt_none () OptionalInt)\n(rewrite (concat (TupleNDArray___init__ __var__x) (OptionalInt_none)) __var__x :ruleset array_api_ruleset)\n(rewrite (unique_values (unique_values __var__x)) (unique_values __var__x) :ruleset array_api_ruleset)\n(rewrite (sum (NDArray___truediv__ __var__x (NDArray_scalar __var__v)) (OptionalIntOrTuple_none)) (NDArray___truediv__ (sum __var__x (OptionalIntOrTuple_none)) (NDArray_scalar __var__v)) :ruleset array_api_ruleset)\n(constructor NDArray_ndim (NDArray) Int)\n(sort OptionalDType)\n(sort OptionalDevice)\n(constructor asarray (NDArray OptionalDType OptionalBool OptionalDevice) NDArray)\n(constructor OptionalDevice_none () OptionalDevice)\n(rewrite (NDArray_ndim (asarray __var__a __var__d __var__ob (OptionalDevice_none))) (NDArray_ndim __var__a) :ruleset array_api_ruleset)\n(constructor OptionalDType_none () OptionalDType)\n(constructor OptionalBool_none () OptionalBool)\n(rewrite (asarray __var__a (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) __var__a :ruleset array_api_ruleset)\n(constructor TupleNDArray___add__ (TupleNDArray TupleNDArray) TupleNDArray)\n(constructor TupleNDArray_EMPTY () TupleNDArray)\n(rewrite (TupleNDArray___add__ __var__ti (TupleNDArray_EMPTY)) __var__ti :ruleset array_api_ruleset)\n(rewrite (TupleNDArray_length (TupleNDArray___init__ __var__n)) (Int___init__ 1) :ruleset array_api_ruleset)\n(rewrite (TupleNDArray_length (TupleNDArray___add__ __var__ti __var__ti2)) (Int___add__ (TupleNDArray_length __var__ti) (TupleNDArray_length __var__ti2)) :ruleset array_api_ruleset)\n(rewrite (NDArray_ndim __var__x) (TupleInt_length (NDArray_shape __var__x)) :ruleset array_api_ruleset)\n(constructor NDArray_to_value (NDArray) Value)\n(rewrite (NDArray_to_value __var__x) (NDArray_index __var__x (TupleInt_EMPTY)) :ruleset array_api_ruleset)\n(rewrite (NDArray___truediv__ (NDArray_scalar (Value_float __var__f)) (NDArray_scalar (Value_float __var__f))) (NDArray_scalar (Value_float (Float___init__ 1.0))) :ruleset array_api_ruleset)\n(constructor NDArray___sub__ (NDArray NDArray) NDArray)\n(rewrite (NDArray___sub__ (NDArray_scalar (Value_float __var__f)) (NDArray_scalar (Value_float __var__f))) (NDArray_scalar (Value_float (Float___init__ 0.0))) :ruleset array_api_ruleset)\n(constructor NDArray___gt__ (NDArray NDArray) NDArray)\n(rewrite (NDArray___gt__ (NDArray_scalar (Value_float (Float___init__ __var__fi1))) (NDArray_scalar (Value_float (Float___init__ __var__fi2)))) (NDArray_scalar (Value_bool (TRUE))) :when ((> __var__fi1 __var__fi2)) :ruleset array_api_ruleset)\n(rewrite (NDArray___gt__ (NDArray_scalar (Value_float (Float___init__ __var__fi1))) (NDArray_scalar (Value_float (Float___init__ __var__fi2)))) (NDArray_scalar (Value_bool (FALSE))) :when ((<= __var__fi1 __var__fi2)) :ruleset array_api_ruleset)\n(constructor NDArray_T (NDArray) NDArray)\n(rewrite (NDArray_T (NDArray_T __var__x)) __var__x :ruleset array_api_ruleset)\n(constructor TupleValue___add__ (TupleValue TupleValue) TupleValue)\n(constructor TupleValue_EMPTY () TupleValue)\n(rewrite (TupleValue___add__ __var__ti (TupleValue_EMPTY)) __var__ti :ruleset array_api_ruleset)\n(rewrite (TupleValue_length (TupleValue_EMPTY)) (Int___init__ 0) :ruleset array_api_ruleset)\n(rewrite (TupleValue_length (TupleValue___init__ __var__v)) (Int___init__ 1) :ruleset array_api_ruleset)\n(rewrite (TupleValue_length (TupleValue___add__ __var__ti __var__ti2)) (Int___add__ (TupleValue_length __var__ti) (TupleValue_length __var__ti2)) :ruleset array_api_ruleset)\n(rewrite (TupleValue___getitem__ (TupleValue___init__ __var__v) (Int___init__ 0)) __var__v :ruleset array_api_ruleset)\n(rewrite (TupleValue___getitem__ (TupleValue___add__ (TupleValue___init__ __var__v) __var__ti) (Int___init__ 0)) __var__v :ruleset array_api_ruleset)\n(rule ((= __var__v (TupleValue___getitem__ (TupleValue___add__ (TupleValue___init__ __var__v2) __var__ti) (Int___init__ __var__k)))\n       (> __var__k 0))\n      ((union __var__v (TupleValue___getitem__ __var__ti (Int___init__ (- __var__k 1)))))\n        :ruleset array_api_ruleset )\n(rewrite (TupleValue_includes (TupleValue_EMPTY) __var__v) (FALSE) :ruleset array_api_ruleset)\n(rewrite (TupleValue_includes (TupleValue___init__ __var__v) __var__v) (TRUE) :ruleset array_api_ruleset)\n(rewrite (TupleValue_includes (TupleValue___init__ __var__v) __var__v2) (FALSE) :when ((!= __var__v __var__v2)) :ruleset array_api_ruleset)\n(rewrite (TupleValue_includes (TupleValue___add__ __var__ti __var__ti2) __var__v) (Boolean___or__ (TupleValue_includes __var__ti __var__v) (TupleValue_includes __var__ti2 __var__v)) :ruleset array_api_ruleset)\n(constructor DType_int64 () DType)\n(rewrite (Value_dtype (Value_int __var__i)) (DType_int64) :ruleset array_api_ruleset)\n(rewrite (Value_dtype (Value_float __var__f)) (DType_float64) :ruleset array_api_ruleset)\n(constructor DType_bool () DType)\n(rewrite (Value_dtype (Value_bool __var__b)) (DType_bool) :ruleset array_api_ruleset)\n(constructor Value_to_bool (Value) Boolean)\n(rewrite (Value_to_bool (Value_bool __var__b)) __var__b :ruleset array_api_ruleset)\n(constructor Value_to_int (Value) Int)\n(rewrite (Value_to_int (Value_int __var__i)) __var__i :ruleset array_api_ruleset)\n(rewrite (Value_to_truthy_value (Value_bool __var__b)) (Value_bool __var__b) :ruleset array_api_ruleset)\n(sort IsDtypeKind)\n(constructor isdtype (DType IsDtypeKind) Boolean)\n(constructor DType_float32 () DType)\n(constructor IsDtypeKind_string (String) IsDtypeKind)\n(rewrite (isdtype (DType_float32) (IsDtypeKind_string \"integral\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_float64) (IsDtypeKind_string \"integral\")) (FALSE) :ruleset array_api_ruleset)\n(constructor DType_object () DType)\n(rewrite (isdtype (DType_object) (IsDtypeKind_string \"integral\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int64) (IsDtypeKind_string \"integral\")) (TRUE) :ruleset array_api_ruleset)\n(constructor DType_int32 () DType)\n(rewrite (isdtype (DType_int32) (IsDtypeKind_string \"integral\")) (TRUE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_float32) (IsDtypeKind_string \"real floating\")) (TRUE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_float64) (IsDtypeKind_string \"real floating\")) (TRUE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_object) (IsDtypeKind_string \"real floating\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int64) (IsDtypeKind_string \"real floating\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int32) (IsDtypeKind_string \"real floating\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_float32) (IsDtypeKind_string \"complex floating\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_float64) (IsDtypeKind_string \"complex floating\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_object) (IsDtypeKind_string \"complex floating\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int64) (IsDtypeKind_string \"complex floating\")) (FALSE) :ruleset array_api_ruleset)\n(rewrite (isdtype (DType_int32) (IsDtypeKind_string \"complex floating\")) (FALSE) :ruleset array_api_ruleset)\n(constructor IsDtypeKind_NULL () IsDtypeKind)\n(rewrite (isdtype __var__d (IsDtypeKind_NULL)) (FALSE) :ruleset array_api_ruleset)\n(constructor IsDtypeKind_dtype (DType) IsDtypeKind)\n(rewrite (isdtype __var__d (IsDtypeKind_dtype __var__d)) (TRUE) :ruleset array_api_ruleset)\n(constructor IsDtypeKind___or__ (IsDtypeKind IsDtypeKind) IsDtypeKind :cost 10)\n(rewrite (isdtype __var__d (IsDtypeKind___or__ __var__k1 __var__k2)) (Boolean___or__ (isdtype __var__d __var__k1) (isdtype __var__d __var__k2)) :ruleset array_api_ruleset)\n(rewrite (IsDtypeKind___or__ __var__k1 (IsDtypeKind_NULL)) __var__k1 :ruleset array_api_ruleset)\n(constructor DType___eq__ (DType DType) Boolean)\n(rewrite (DType___eq__ (DType_float64) (DType_float64)) (TRUE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float64) (DType_float32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float64) (DType_int32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float64) (DType_int64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float64) (DType_object)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32) (DType_float64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32) (DType_float32)) (TRUE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32) (DType_int32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32) (DType_int64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_float32) (DType_object)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32) (DType_float64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32) (DType_float32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32) (DType_int32)) (TRUE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32) (DType_int64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int32) (DType_object)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64) (DType_float64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64) (DType_float32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64) (DType_int32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64) (DType_int64)) (TRUE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_int64) (DType_object)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object) (DType_float64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object) (DType_float32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object) (DType_int32)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object) (DType_int64)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (DType___eq__ (DType_object) (DType_object)) (TRUE) :ruleset array_api_ruleset)\n(constructor cast_Callable__UnstableFn_Int__Int___Int___Int___lambda_idx_fn__i__idx_fn_i_+_Int_1___ (UnstableFn_Int_Int Int) Int)\n(rewrite (cast_Callable__UnstableFn_Int__Int___Int___Int___lambda_idx_fn__i__idx_fn_i_+_Int_1___ __var__idx_fn __var__i) (unstable-app __var__idx_fn (Int___add__ __var__i (Int___init__ 1))) :ruleset array_api_ruleset)\n(rewrite (index_vec_int __var__vs (Int___init__ __var__k)) (vec-get __var__vs __var__k) :ruleset array_api_ruleset)\n(rewrite (TupleInt_length (TupleInt___init__ __var__i __var__idx_fn)) __var__i :ruleset array_api_ruleset)\n(rewrite (TupleInt___getitem__ (TupleInt___init__ __var__i __var__idx_fn) __var__i2) (unstable-app __var__idx_fn __var__i2) :ruleset array_api_ruleset)\n(rewrite (TupleInt_fold (TupleInt___init__ (Int___init__ 0) __var__idx_fn) __var__i __var__f) __var__i :ruleset array_api_ruleset)\n(rewrite (TupleInt_fold (TupleInt___init__ (Int___init__ __var__k) __var__idx_fn) __var__i __var__f) (unstable-app __var__f (TupleInt_fold (TupleInt___init__ (Int___init__ (- __var__k 1)) (unstable-fn \"cast_Callable__UnstableFn_Int__Int___Int___Int___lambda_idx_fn__i__idx_fn_i_+_Int_1___\" __var__idx_fn)) __var__i __var__f) (unstable-app __var__idx_fn (Int___init__ 0))) :when ((!= __var__k 0)) :ruleset array_api_ruleset)\n(rewrite (TupleInt_fold_boolean (TupleInt___init__ (Int___init__ 0) __var__idx_fn) __var__b __var__bool_f) __var__b :ruleset array_api_ruleset)\n(rewrite (TupleInt_fold_boolean (TupleInt___init__ (Int___init__ __var__k) __var__idx_fn) __var__b __var__bool_f) (unstable-app __var__bool_f (TupleInt_fold_boolean (TupleInt___init__ (Int___init__ (- __var__k 1)) (unstable-fn \"cast_Callable__UnstableFn_Int__Int___Int___Int___lambda_idx_fn__i__idx_fn_i_+_Int_1___\" __var__idx_fn)) __var__b __var__bool_f) (unstable-app __var__idx_fn (Int___init__ 0))) :when ((!= __var__k 0)) :ruleset array_api_ruleset)\n(constructor bottom_indexing (Int) Int)\n(rewrite (TupleInt_EMPTY) (TupleInt___init__ (Int___init__ 0) (unstable-fn \"bottom_indexing\")) :ruleset array_api_ruleset)\n(rewrite (Float_abs (Float___init__ __var__f)) (Float___init__ __var__f) :when ((>= __var__f 0.0)) :ruleset array_api_ruleset)\n(rewrite (Float_abs (Float___init__ __var__f)) (Float___init__ (neg __var__f)) :when ((< __var__f 0.0)) :ruleset array_api_ruleset)\n(constructor Float_rational (BigRat) Float :cost 2)\n(rewrite (Float___init__ __var__f) (Float_rational (bigrat (bigint (to-i64 __var__f)) (bigint 1))) :when ((= (to-f64 (to-i64 __var__f)) __var__f)) :ruleset array_api_ruleset)\n(constructor Float_from_int (Int) Float)\n(rewrite (Float_from_int (Int___init__ __var__i)) (Float_rational (bigrat (bigint __var__i) (bigint 1))) :ruleset array_api_ruleset)\n(constructor Float___add__ (Float Float) Float)\n(rewrite (Float___add__ (Float___init__ __var__f) (Float___init__ __var__f2)) (Float___init__ (+ __var__f __var__f2)) :ruleset array_api_ruleset)\n(constructor Float___sub__ (Float Float) Float)\n(rewrite (Float___sub__ (Float___init__ __var__f) (Float___init__ __var__f2)) (Float___init__ (- __var__f __var__f2)) :ruleset array_api_ruleset)\n(constructor Float___mul__ (Float Float) Float)\n(rewrite (Float___mul__ (Float___init__ __var__f) (Float___init__ __var__f2)) (Float___init__ (* __var__f __var__f2)) :ruleset array_api_ruleset)\n(constructor Float___truediv__ (Float Float) Float)\n(rewrite (Float___truediv__ (Float_rational __var__r) (Float_rational __var__r1)) (Float_rational (/ __var__r __var__r1)) :ruleset array_api_ruleset)\n(rewrite (Float___add__ (Float_rational __var__r) (Float_rational __var__r1)) (Float_rational (+ __var__r __var__r1)) :ruleset array_api_ruleset)\n(rewrite (Float___sub__ (Float_rational __var__r) (Float_rational __var__r1)) (Float_rational (- __var__r __var__r1)) :ruleset array_api_ruleset)\n(rewrite (Float___mul__ (Float_rational __var__r) (Float_rational __var__r1)) (Float_rational (* __var__r __var__r1)) :ruleset array_api_ruleset)\n(rewrite (Int___eq__ (Int___init__ __var__i) (Int___init__ __var__i)) (TRUE) :ruleset array_api_ruleset)\n(rule ((= __var__r (Int___eq__ (Int___init__ __var__i) (Int___init__ __var__j)))\n       (!= __var__i __var__j))\n      ((union __var__r (FALSE)))\n        :ruleset array_api_ruleset )\n(constructor Int___ge__ (Int Int) Boolean)\n(rewrite (Int___ge__ (Int___init__ __var__i) (Int___init__ __var__i)) (TRUE) :ruleset array_api_ruleset)\n(rule ((= __var__r (Int___ge__ (Int___init__ __var__i) (Int___init__ __var__j)))\n       (> __var__i __var__j))\n      ((union __var__r (TRUE)))\n        :ruleset array_api_ruleset )\n(rule ((= __var__r (Int___ge__ (Int___init__ __var__i) (Int___init__ __var__j)))\n       (< __var__i __var__j))\n      ((union __var__r (FALSE)))\n        :ruleset array_api_ruleset )\n(rewrite (Int___lt__ (Int___init__ __var__i) (Int___init__ __var__i)) (FALSE) :ruleset array_api_ruleset)\n(rule ((= __var__r (Int___lt__ (Int___init__ __var__i) (Int___init__ __var__j)))\n       (< __var__i __var__j))\n      ((union __var__r (TRUE)))\n        :ruleset array_api_ruleset )\n(rule ((= __var__r (Int___lt__ (Int___init__ __var__i) (Int___init__ __var__j)))\n       (> __var__i __var__j))\n      ((union __var__r (FALSE)))\n        :ruleset array_api_ruleset )\n(constructor Int___gt__ (Int Int) Boolean)\n(rewrite (Int___gt__ (Int___init__ __var__i) (Int___init__ __var__i)) (FALSE) :ruleset array_api_ruleset)\n(rule ((= __var__r (Int___gt__ (Int___init__ __var__i) (Int___init__ __var__j)))\n       (> __var__i __var__j))\n      ((union __var__r (TRUE)))\n        :ruleset array_api_ruleset )\n(rule ((= __var__r (Int___gt__ (Int___init__ __var__i) (Int___init__ __var__j)))\n       (< __var__i __var__j))\n      ((union __var__r (FALSE)))\n        :ruleset array_api_ruleset )\n(function Int_i64 (Int) i64 :no-merge)\n(rule ((= __var__o (Int___init__ __var__j)))\n      ((set (Int_i64 __var__o) __var__j))\n        :ruleset array_api_ruleset )\n(rewrite (Int___add__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (+ __var__i __var__j)) :ruleset array_api_ruleset)\n(rewrite (Int___sub__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (- __var__i __var__j)) :ruleset array_api_ruleset)\n(rewrite (Int___mul__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (* __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___truediv__ (Int Int) Int)\n(rewrite (Int___truediv__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (/ __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___mod__ (Int Int) Int)\n(rewrite (Int___mod__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (% __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___and__ (Int Int) Int)\n(rewrite (Int___and__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (& __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___or__ (Int Int) Int)\n(rewrite (Int___or__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (| __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___xor__ (Int Int) Int)\n(rewrite (Int___xor__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (^ __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___lshift__ (Int Int) Int)\n(rewrite (Int___lshift__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (<< __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___rshift__ (Int Int) Int)\n(rewrite (Int___rshift__ (Int___init__ __var__i) (Int___init__ __var__j)) (Int___init__ (>> __var__i __var__j)) :ruleset array_api_ruleset)\n(constructor Int___invert__ (Int) Int)\n(rewrite (Int___invert__ (Int___init__ __var__i)) (Int___init__ (not-i64 __var__i)) :ruleset array_api_ruleset)\n(rewrite (Int_if_ (TRUE) __var__o __var__b) __var__o :ruleset array_api_ruleset)\n(rewrite (Int_if_ (FALSE) __var__o __var__b) __var__b :ruleset array_api_ruleset)\n(function Boolean_bool (Boolean) bool :no-merge)\n(rule ((= __var__x (TRUE)))\n      ((set (Boolean_bool __var__x) true))\n        :ruleset array_api_ruleset )\n(rule ((= __var__x (FALSE)))\n      ((set (Boolean_bool __var__x) false))\n        :ruleset array_api_ruleset )\n(rewrite (Boolean___or__ (TRUE) __var__x) (TRUE) :ruleset array_api_ruleset)\n(rewrite (Boolean___or__ (FALSE) __var__x) __var__x :ruleset array_api_ruleset)\n(constructor Boolean___and__ (Boolean Boolean) Boolean)\n(rewrite (Boolean___and__ (TRUE) __var__x) __var__x :ruleset array_api_ruleset)\n(rewrite (Boolean___and__ (FALSE) __var__x) (FALSE) :ruleset array_api_ruleset)\n(constructor Boolean_if_int (Boolean Int Int) Int)\n(rewrite (Boolean_if_int (TRUE) __var__i __var__j) __var__i :ruleset array_api_ruleset)\n(rewrite (Boolean_if_int (FALSE) __var__i __var__j) __var__j :ruleset array_api_ruleset)\n(constructor Boolean___invert__ (Boolean) Boolean)\n(rewrite (Boolean___invert__ (TRUE)) (FALSE) :ruleset array_api_ruleset)\n(rewrite (Boolean___invert__ (FALSE)) (TRUE) :ruleset array_api_ruleset)\n(ruleset ruleset_5218390416)\n(constructor NDArray___eq__ (NDArray NDArray) NDArray)\n(rewrite (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse __var__x) (Int___init__ 1)) (NDArray_scalar (Value_int __var__i))) (NDArray___eq__ __var__x (NDArray_scalar (NDArray_index (unique_values __var__x) (TupleInt_from_vec (vec-of __var__i))))) :subsume :ruleset ruleset_5218390416)\n(constructor count_values (NDArray NDArray) TupleValue :unextractable)\n(rewrite (TupleNDArray___getitem__ (unique_counts __var__x) (Int___init__ 1)) (NDArray_vector (count_values __var__x (unique_values __var__x))) :subsume :ruleset ruleset_5218390416)\n(rewrite (count_values __var__x (NDArray_vector (TupleValue___add__ (TupleValue___init__ __var__v) __var__tv))) (TupleValue___add__ (TupleValue___init__ (NDArray_to_value (sum (NDArray___eq__ __var__x (NDArray_scalar __var__v)) (OptionalIntOrTuple_none)))) (count_values __var__x (NDArray_vector __var__tv))) :subsume :ruleset ruleset_5218390416)\n(rewrite (count_values __var__x (NDArray_vector (TupleValue___init__ __var__v))) (TupleValue___init__ (NDArray_to_value (sum (NDArray___eq__ __var__x (NDArray_scalar __var__v)) (OptionalIntOrTuple_none)))) :subsume :ruleset ruleset_5218390416)\n(constructor std (NDArray OptionalIntOrTuple) NDArray)\n(sort IntOrTuple)\n(constructor OptionalIntOrTuple_some (IntOrTuple) OptionalIntOrTuple)\n(constructor IntOrTuple_int (Int) IntOrTuple)\n(constructor ndarray-sqrt (NDArray) NDArray)\n(constructor mean (NDArray OptionalIntOrTuple Boolean) NDArray)\n(constructor square (NDArray) NDArray)\n(rewrite (std __var__x (OptionalIntOrTuple_some (IntOrTuple_int __var__i))) (ndarray-sqrt (mean (square (NDArray___sub__ __var__x (mean __var__x (OptionalIntOrTuple_some (IntOrTuple_int __var__i)) (TRUE)))) (OptionalIntOrTuple_some (IntOrTuple_int __var__i)) (FALSE))) :subsume :ruleset ruleset_5218390416)\n(rewrite (mean __var__x (OptionalIntOrTuple_some (IntOrTuple_int __var__i)) (FALSE)) (NDArray___truediv__ (sum __var__x (OptionalIntOrTuple_some (IntOrTuple_int __var__i))) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape __var__x) __var__i)))) :subsume :ruleset ruleset_5218390416)\n(constructor expand_dims (NDArray Int) NDArray)\n(rewrite (mean __var__x (OptionalIntOrTuple_some (IntOrTuple_int __var__i)) (TRUE)) (expand_dims (NDArray___truediv__ (sum __var__x (OptionalIntOrTuple_some (IntOrTuple_int __var__i))) (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape __var__x) __var__i)))) __var__i) :subsume :ruleset ruleset_5218390416)\n(constructor NDArray___matmul__ (NDArray NDArray) NDArray)\n(constructor NDArray_var (String) NDArray :cost 200)\n(constructor NDArray___setitem__ (NDArray IndexKey NDArray) NDArray)\n(constructor zeros (TupleInt OptionalDType OptionalDevice) NDArray)\n(constructor OptionalDType_some (DType) OptionalDType)\n(sort Device)\n(constructor OptionalDevice_some (Device) OptionalDevice)\n(constructor NDArray_device (NDArray) Device)\n(sort MultiAxisIndexKey)\n(constructor IndexKey_multi_axis (MultiAxisIndexKey) IndexKey)\n(sort MultiAxisIndexKeyItem)\n(sort Vec_MultiAxisIndexKeyItem (Vec MultiAxisIndexKeyItem))\n(constructor MultiAxisIndexKey_from_vec (Vec_MultiAxisIndexKeyItem) MultiAxisIndexKey)\n(constructor MultiAxisIndexKeyItem_int (Int) MultiAxisIndexKeyItem)\n(sort Slice)\n(constructor MultiAxisIndexKeyItem_slice (Slice) MultiAxisIndexKeyItem)\n(constructor Slice___init__ (OptionalInt OptionalInt OptionalInt) Slice)\n(constructor IndexKey_ndarray (NDArray) IndexKey)\n(constructor NDArray___mul__ (NDArray NDArray) NDArray)\n(constructor OptionalInt_some (Int) OptionalInt)\n(constructor IndexKey_slice (Slice) IndexKey)\n(simplify (saturate (seq (run array_api_ruleset) (run ruleset_5218390416))) (NDArray___getitem__ (NDArray___matmul__ (NDArray___sub__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___matmul__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))))) (NDArray___matmul__ (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 2)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none))) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (IndexKey_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none))))) (NDArray___getitem__ (NDArray_T (TupleNDArray___getitem__ (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)))) (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (NDArray_scalar (Value_float (Float___init__ 150.0))))) (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0)) (Int___init__ 1)))))))) (NDArray_T (NDArray___sub__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (NDArray___matmul__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE)))))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 2)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none))) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (IndexKey_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none)))))) (FALSE)) (Int___init__ 2))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)))) (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (NDArray_scalar (Value_float (Float___init__ 150.0))))) (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0)) (Int___init__ 1)))))))) (NDArray_T (NDArray___sub__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (NDArray___matmul__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE)))))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 2)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none))) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (IndexKey_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none)))))) (FALSE)) (Int___init__ 1)) (NDArray___mul__ (NDArray_scalar (Value_float (Float___init__ 0.0001))) (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___matmul__ (NDArray_T (NDArray___mul__ (ndarray-sqrt (NDArray___mul__ (NDArray___mul__ (NDArray_scalar (Value_int (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)))) (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (NDArray_scalar (Value_float (Float___init__ 150.0))))) (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0)) (Int___init__ 1)))))))) (NDArray_T (NDArray___sub__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (NDArray___matmul__ (NDArray___truediv__ (astype (TupleNDArray___getitem__ (unique_counts (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (NDArray_scalar (Value_float (Float___init__ 150.0)))) (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE)))))))) (NDArray___truediv__ (NDArray_T (NDArray___truediv__ (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 2)) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none))) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (NDArray___getitem__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (IndexKey_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Value_to_int (NDArray_to_value (sum (astype (NDArray___gt__ (TupleNDArray___getitem__ (svd (NDArray___mul__ (ndarray-sqrt (asarray (NDArray_scalar (Value_float (Float___truediv__ (Float___init__ 1.0) (Float_from_int (Int___sub__ (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none)))) (Int___init__ 0))))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (NDArray___truediv__ (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (NDArray___setitem__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (IndexKey_ndarray (NDArray___eq__ (std (concat (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 0)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___add__ (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 1)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))) (TupleNDArray___init__ (NDArray___sub__ (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (NDArray___getitem__ (unique_values (concat (TupleNDArray___init__ (unique_values (asarray (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalInt_none))) (IndexKey_int (Int___init__ 2)))))) (NDArray___getitem__ (NDArray___setitem__ (NDArray___setitem__ (NDArray___setitem__ (zeros (TupleInt_from_vec (vec-of (TupleInt___getitem__ (NDArray_shape (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 0))) (Int___init__ 0)) (TupleInt___getitem__ (NDArray_shape (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)))) (OptionalDType_some (NDArray_dtype (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)))) (OptionalDevice_some (NDArray_device (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 0)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 0)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 1)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 1)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none)))))) (mean (NDArray___getitem__ (asarray (assume_isfinite (assume_shape (assume_dtype (NDArray_var \"X\") (DType_float64)) (TupleInt_from_vec (vec-of (Int___init__ 150) (Int___init__ 4))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (IndexKey_ndarray (NDArray___eq__ (TupleNDArray___getitem__ (unique_inverse (asarray (reshape (asarray (assume_value_one_of (assume_shape (assume_dtype (NDArray_var \"y\") (DType_int64)) (TupleInt_from_vec (vec-of (Int___init__ 150)))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 0))) (TupleValue___add__ (TupleValue___init__ (Value_int (Int___init__ 1))) (TupleValue___init__ (Value_int (Int___init__ 2)))))) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none)) (TupleInt_from_vec (vec-of (Int___init__ -1))) (OptionalBool_none)) (OptionalDType_none) (OptionalBool_none) (OptionalDevice_none))) (Int___init__ 1)) (NDArray_scalar (Value_int (Int___init__ 2)))))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0))) (FALSE))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_int (Int___init__ 2)) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))))))))))) (OptionalInt_some (Int___init__ 0))) (OptionalIntOrTuple_some (IntOrTuple_int (Int___init__ 0)))) (NDArray_scalar (Value_int (Int___init__ 0))))) (NDArray_scalar (Value_float (Float___init__ 1.0)))))) (FALSE)) (Int___init__ 1)) (NDArray_scalar (Value_float (Float___init__ 0.0001)))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none)))))) (FALSE)) (Int___init__ 1)) (IndexKey_int (Int___init__ 0))))) (DType_int32)) (OptionalIntOrTuple_none))))) (OptionalInt_none))))))))) (IndexKey_multi_axis (MultiAxisIndexKey_from_vec (vec-of (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_none) (OptionalInt_none))) (MultiAxisIndexKeyItem_slice (Slice___init__ (OptionalInt_none) (OptionalInt_some (Int___init__ 2)) (OptionalInt_none))))))))\n",
  "path-union": "(datatype Node\n (mk i64))\n\n(relation edge (Node Node))\n(relation path (Node Node))\n            \n(rule ((edge x y))\n      ((path x y)))\n\n(rule ((path x y) (edge y z))\n      ((path x z)))\n\n(edge (mk 1) (mk 2))\n(edge (mk 2) (mk 3))\n(edge (mk 5) (mk 6))\n\n(union (mk 3) (mk 5))\n\n(run 10)\n(check (edge (mk 3) (mk 6)))\n(check (path (mk 1) (mk 6)))",
  "path": "(relation path (i64 i64))\n(relation edge (i64 i64))\n\n(rule ((edge x y))\n      ((path x y)))\n\n(rule ((path x y) (edge y z))\n      ((path x z)))\n        \n(edge 1 2)\n(edge 2 3)\n(edge 3 4)\n(check (edge 1 2))\n(fail (check (path 1 2)))\n(run 3)\n\n(print-function path 100)\n(check (path 1 4))\n(fail (check (path 4 1)))\n",
  "pathproof": "; proofs of connectivity are paths\n(datatype Proof\n  (Trans i64 Proof)\n  (Edge i64 i64))\n\n; We enhance the path relation to carry a proof field\n(relation path (i64 i64 Proof))\n(relation edge (i64 i64))\n\n(edge 2 1)\n(edge 3 2)\n(edge 1 3)\n\n(rule ((edge x y))  \n      ((path x y (Edge x y))))\n(rule ((edge x y) (path y z p))  \n      ((path x z (Trans x p))))\n\n; We consider equal all paths tha connect same points.\n; Smallest Extraction will extract shortest path.\n(rule ((path x y p1) (path x y p2))  \n      ((union p1 p2)))\n\n(run 3)\n(check (path 3 1 (Trans 3 (Edge 2 1))))\n; Would prefer being able to check\n;(check (path 1 2 _))\n; or extract\n;(query-extract (path 1 4 ?p))\n(print-function path 100)",
  "points-to": "; Identifiers represented as strings, keep some newtypes around to aid clarity\n(datatype ClassT (Class String))\n(datatype FieldT (Field String))\n\n(datatype Stmt\n    (New String ClassT)\n    ; Assign dst src\n    (Assign String String)\n    ; Store dst field src\n    (Store String FieldT String)\n    ; Load dst src field\n    (Load String String FieldT))\n\n(relation VarPointsTo (String ClassT))\n(relation HeapPointsTo (ClassT FieldT ClassT))\n\n; New variables point to classes they're initialized as\n(rule ((= x (New a b))) ((VarPointsTo a b)))\n\n; If I assign v1 <- v2 and v2 points to a class c2, then v1 points to class c2\n; as well\n(rule ((= x (Assign v1 v2)) (VarPointsTo v2 c2))\n      ((VarPointsTo v1 c2)))\n\n; If c1.f points to c2, and v2 points to class c1, then assigning v1 <- v2.f\n; means v1 points to c2\n(rule ((= x (Load v1 v2 f)) \n       (VarPointsTo v2 c1)\n       (HeapPointsTo c1 f c2))\n      ((VarPointsTo v1 c2)))\n\n; If v1 points to class c1, and v2 to c2, and if v1.f <- v2, then c1.f points to\n; c2\n(rule ((= x (Store v1 f v2))\n       (VarPointsTo v1 c1)\n       (VarPointsTo v2 c2))\n      ((HeapPointsTo c1 f c2)))\n\n; Example in \"From Datalog to Flix\"\n; l1: ClassA o1 = new ClassA();\n; l2: ClassB o2 = new ClassB();\n; l3: ClassB o3 = o2;\n; l4: o2.f = o1;\n; l5: Object r = o3.f;\n\n(let A (Class \"A\"))\n(let B (Class \"B\"))\n(let f (Field \"f\"))\n\n(let l1 (New \"o1\" A))\n(let l2 (New \"o2\" B))\n(let l3 (Assign \"o3\" \"o2\"))\n(let l4 (Store \"o2\" f \"o1\"))\n(let l5 (Load \"r\" \"o3\" f))\n\n(run 3)\n\n(check (VarPointsTo \"o1\" A))\n(check (VarPointsTo \"o2\" B))\n\n(check (VarPointsTo \"o3\" B))\n(check (HeapPointsTo B f A))\n(check (VarPointsTo \"r\" A))",
  "primitives": "(check (= (+ 2 2)  4))\n(check (= (- 2 1)  1))\n(check (= (- 1 2) -1))\n(check (< 1 2))\n(check (> 1 -2))",
  "prims": "; A nasty, imperative implementation of Prim's algorithm... in egglog!\n; https://en.wikipedia.org/wiki/Prim%27s_algorithm\n\n; Weighted edge (vertex 1 * vertex 2 * weight)\n(datatype edge (Edge i64 i64 i64))\n(relation edge-exists (edge))\n\n(relation mytrue ())\n(mytrue)\n(let infinity 99999999)  ; close enough\n\n; ==== PROBLEM INSTANCES ====\n\n; Graph 1\n; (1)--2--(2)\n;    \\     |\n;      1   2\n;        \\ |\n; (3)--3--(4)\n(ruleset graph1)\n(rule ((mytrue))\n      ((edge-exists (Edge 1 2 2))\n       (edge-exists (Edge 1 4 1))\n       (edge-exists (Edge 2 4 2))\n       (edge-exists (Edge 3 4 3)))\n       :ruleset graph1)\n\n; Graph 2\n; (1)-2-(2)  (3)\n;  |\\   /|   / |\n;  | 3 5 |  4  |\n;  5  X  2 /   5\n;  | / \\ |/    |\n; (4)-4-(5)-7-(6)\n(ruleset graph2)\n(rule ((mytrue))\n      ((edge-exists (Edge 1 2 1))\n       (edge-exists (Edge 1 4 5))\n       (edge-exists (Edge 1 5 3))\n       (edge-exists (Edge 2 4 5))\n       (edge-exists (Edge 2 5 2))\n       (edge-exists (Edge 3 5 4))\n       (edge-exists (Edge 3 6 5))\n       (edge-exists (Edge 4 5 4))\n       (edge-exists (Edge 5 6 7)))\n       :ruleset graph2)\n\n; ==== \"INIT\" RULESET ====\n\n(ruleset init)\n\n; Graph is undirected\n(rule ((= e (Edge x y weight)))\n      ((union e (Edge y x weight)))\n      :ruleset init)\n\n; Whether a vertex is included *so far* (this changes). Returns 0 or 1.\n(function vertex-included (i64) i64 :merge (max old new))\n\n; All vertices default to being not included (note vertex-included's :merge)\n(rule ((edge-exists (Edge x y weight)))\n      ((set (vertex-included x) 0))\n      :ruleset init)\n\n; Keep track of the current iteration\n(function current-iteration () i64 :merge (max old new))\n\n; Map iteration to best edge found so far\n(function iteration-to-best-edge (i64) edge :merge new)\n(function iteration-to-best-edge-weight (i64) i64 :merge new)\n\n(rule ((mytrue))\n      ((set (vertex-included 1) 1)  ; Initially just include vertex 1\n       (set (current-iteration) 0)\n       (set (iteration-to-best-edge-weight 0) infinity))\n      :ruleset init)\n\n; === \"CHOOSE BEST EDGE\" RULESET ===\n\n(relation edge-in-mst (edge))  ; whether an edge is in our solution\n\n(ruleset choose-best-edge)\n(rule ((= i (current-iteration))\n       (edge-exists (Edge x y weight))\n       (= 1 (vertex-included x))\n       (= 0 (vertex-included y))\n       (< weight (iteration-to-best-edge-weight i)))\n      ((set (iteration-to-best-edge-weight i) weight)\n       (set (iteration-to-best-edge i) (Edge x y weight)))\n      :ruleset choose-best-edge)\n\n; === \"FINISH ITERATION\" RULESET ===\n\n(ruleset finish-iteration)\n(rule ((= i (current-iteration))\n       (= (Edge x y weight) (iteration-to-best-edge i)))\n      ((edge-in-mst (Edge x y weight))    ; incorporate chosen best edge\n       (set (vertex-included x) 1)        ; mark its vertices as included\n       (set (vertex-included y) 1)\n       (set (current-iteration) (+ i 1))  ; advance iteration\n       (set (iteration-to-best-edge-weight (+ i 1)) infinity))\n      :ruleset finish-iteration)\n\n; === RUN VIA SCHEDULE ===\n\n(run-schedule\n    (saturate init graph1)  ; change to graph2 to see other example\n    (saturate (saturate choose-best-edge) finish-iteration)\n)\n\n; === PRINT RESULTS ===\n\n; (print-function edge-in-mst) ; this is not very helpful\n\n; Just copy canonical edges to solution\n(relation solution (i64 i64 i64))\n\n(ruleset finalize)\n(rule ((edge-in-mst (Edge x y weight)) (< x y))\n      ((solution x y weight))\n      :ruleset finalize)\n(run-schedule (saturate finalize))\n\n(print-function solution 100) ; this is better\n",
  "push-pop": "(function foo () i64 :merge (max old new))\n\n(set (foo) 1)\n(check (= (foo) 1))\n\n(push)\n(set (foo) 2)\n(check (= (foo) 2))\n(pop)\n\n(check (= (foo) 1))",
  "rat-pow-eval": "(let zero (bigrat (bigint 0) (bigint 1)))\n(let zero-alt (bigrat (bigint 0) (bigint -1)))\n(check (= zero zero-alt))\n(check (= zero (* (bigrat (bigint -1) (bigint 1)) zero-alt)))\n\n(let one (bigrat (bigint 1) (bigint 1)))\n(let two (bigrat (bigint 2) (bigint 1)))\n\n(let four (bigrat (bigint 4) (bigint 1)))\n(let fourth (bigrat (bigint 1) (bigint 4)))\n(check (!= four fourth))\n\n(let neg-one (bigrat (bigint -1) (bigint 1)))\n(let neg-one-alt (bigrat (bigint 1) (bigint -1)))\n(check (= neg-one neg-one-alt))\n\n(let neg-two (* neg-one two))\n\n\n; 1 = 0^0 (zero-to-zero edge case)\n(check (= one (pow zero zero)))\n(check (= one (pow zero zero-alt)))\n; 0 = 0^2 (a positive power)\n(check (= zero (pow zero two)))\n; 1/0 error condition\n(fail (pow zero neg-one))\n(fail (pow zero neg-two))\n\n; 4 = 2^2\n(check (= four (pow two two)))\n; 1/4 == 4^-1\n(check (= fourth (pow four neg-one)))\n; 1/4 = 2^-2\n(check (= fourth (pow two neg-two)))\n; 1 = 1^-2\n(check (= one (pow one neg-two)))\n; 1 = 2^0\n(check (= one (pow two zero)))\n; 1 = (-2)^0\n(check (= one (pow neg-two zero)))\n\n; rational powers are forbidden!\n(fail (pow zero fourth))\n(fail (pow two fourth))\n\n\n; big numbers\n(let sixty-four (bigrat (bigint 64) (bigint 1)))\n(let sixty-three (- sixty-four one))\n(let max-i64 (- (pow two sixty-three) one ))\n(let max-u64 (pow two sixty-four))\n\n; max power is max-i64\n(check (= one (pow one max-i64)))\n; adding one more to the power should fail\n(fail (check (= one (pow one (+ one max-i64) ))))\n(fail (pow two max-u64))\n",
  "resolution": "; Resolution theorem proving\n; \n; Traditional resolution theorem provers maintain a clause database\n; of formulas in Conjunction Normal Form (CNF a big And of Ors).\n; Each clause is a set of positive and negative literals\n; The prover saturates this set by taking two clauses \n; {a}\\/c1  {not a}\\/c2 and creating a new clause c1 \\/ c2.\n; Clauses also are pruned by simplications, unit propagation,\n; and subsumption.\n; These systems use sophisticated term indexing to find matching clauses\n\n; A natural question is whether egglog's saturation and term indexing gives\n; a leg up towards building one of these systems. A programmable one even,\n; with built in support for equality reasoning\n\n; Resolution is provided by a join\n; unit propagation is an equation solving process and egraph substitution\n; Clause Simplification is provided by rewrite rules\n\n; This encoding seems about right but is unsatisfying\n; Using AC to encode the set nature of clauses is inefficient\n\n; An important aspect of these provers that seems challenging to encode shallowly\n; is that the match also occurs modulo _unification_.\n; The unification variables of each clause are not globally scoped, really\n; they are scoped outside the body of each clase in an implicit \\forall\n; This encoding as it stands really only supports ground atoms modulo equality\n\n(datatype Bool)\n(constructor TrueConst () Bool)\n(let True (TrueConst))\n(constructor FalseConst () Bool)\n(let False (FalseConst))\n(constructor myor (Bool Bool) Bool)\n(constructor negate (Bool) Bool)\n\n; clauses are assumed in the normal form (or a (or b (or c False)))\n\n(union (negate False) True)\n(union (negate True) False)\n\n; \"Solving\" negation equations\n(rule ((= (negate p) True)) ((union p False)))\n(rule ((= (negate p) False)) ((union p True)))\n\n; canonicalize associtivity. \"append\" for clauses\n; terminate with false\n(rewrite (myor (myor a  b) c) (myor a (myor b c)))\n; commutativity\n(rewrite (myor a (myor b c)) (myor b (myor a c)))\n\n;absorption\n(rewrite (myor a (myor a b)) (myor a b))\n(rewrite (myor a (myor (negate a) b)) True)\n\n; simplification\n(rewrite (myor False a) a)\n(rewrite (myor a False) a)\n(rewrite (myor True a) True)\n(rewrite (myor a True) True)\n\n; unit propagation\n; This is kind of interesting actually.\n; Looks a bit like equation solving\n\n; The following is not valid egglog but could be?\n;(rewrite p True    \n;    :when ((= True (or p False))))\n\n(rule ((= True (myor p False))) ((union p True)))\n\n; resolution\n; This counts on commutativity to bubble everything possible up to the front of the clause.\n(rule ((= True (myor a as)) (= True (myor (negate a) bs)))\n      ((union (myor as bs) True)))\n\n; example predicate\n(constructor p (i64) Bool)\n(let p0 (p 0))\n(let p1 (p 1))\n(let p2 (p 2))\n;(union (or p0 (or p1 (or p2 False))) True)\n;(union (or (negate p0) (or p1 (or (negate p2) False))) True)\n(union (myor p1 (myor (negate p2) False)) True)\n(union (myor p2 (myor (negate p0) False)) True)\n(union (myor p0 (myor (negate p1) False)) True)\n(union p1 False)\n(union (myor (negate p0) (myor p1 (myor p2 False))) True)\n(run 10)\n\n\n(check (!= True False))\n(check (= p0 False))\n(check (= p2 False))\n\n; we could turn the original axioms into _patterns_  in all possible directions.\n; Which is kind of compelling\n; (rule ((or (pat x)))  )\n; or let a unification expansion happen and use thos\n\n\n",
  "rw-analysis": ";;;;;;;;;;;;;;;;\n;; Abstact Domain\n;;;;;;;;;;;;;;;;\n\n; Top means it can be an arbitrary value\n(datatype Val (I i64))\n(constructor TopConst () Val)\n(let Top (TopConst))\n(constructor TrueConst () Val)\n(let True (TrueConst))\n(constructor FalseConst () Val)\n(let False (FalseConst))\n(relation Bool (Val))\n(Bool True)\n(Bool False)\n\n(constructor merge-val (Val Val) Val)\n\n(rewrite (merge-val Top x) Top)\n(rewrite (merge-val x Top) Top)\n(rewrite (merge-val True  False) Top)\n(rewrite (merge-val True  (I x))   Top)\n(rewrite (merge-val False True)  Top)\n(rewrite (merge-val False (I x))   Top)\n(rewrite (merge-val (I x) (I y)) Top :when ((!= x y)))\n(rewrite (merge-val x x) x)\n\n(constructor add-val (Val Val) Val)\n\n(rewrite (add-val Top x) Top)\n(rewrite (add-val x Top) Top)\n(rewrite (add-val True x) Top)\n(rewrite (add-val False x) Top)\n(rewrite (add-val x True) Top)\n(rewrite (add-val x False) Top)\n(rewrite (add-val (I x) (I y)) (I (+ x y)))\n\n(constructor eq-val (Val Val) Val)\n\n(rewrite (eq-val Top x) Top)\n(rewrite (eq-val x Top) Top)\n(rewrite (eq-val True False) False)\n(rewrite (eq-val True (I x)) False)\n(rewrite (eq-val False True) False)\n(rewrite (eq-val False (I x)) False)\n(rewrite (eq-val (I x) True) False)\n(rewrite (eq-val (I x) False) False)\n(rewrite (eq-val x x) True)\n\n(datatype VarT (V String))\n(datatype Loc (L i64))\n(datatype Exp\n    (Add VarT VarT)\n    (Eq VarT VarT)\n    (Var VarT)\n    (Const Val))\n(datatype ProgStmt\n    (Ass VarT Exp)\n    (If VarT Loc Loc)\n    (Goto Loc)\n    (Call VarT))\n(constructor EndConst () ProgStmt)\n(let End (EndConst))\n(constructor Prog (Loc) ProgStmt)\n(relation RProg (Loc ProgStmt))\n\n(function const-prop (Loc VarT) Val :merge (merge-val old new))\n\n;;;;;;;;;;;;;;;;\n;; ASS Case\n;;;;;;;;;;;;;;;;\n\n;; PROPAGATION\n\n; propagate x = k\n(rule (\n    (RProg (L li) (Ass x (Const k)))\n)(\n    (set (const-prop (L (+ li 1)) x) k)\n))\n\n; propagate x = a + b (non-constant)\n(rule (\n    (RProg l (Ass x (Add x1 x2)))\n    (= v1 (const-prop l x1))\n    (= v2 (const-prop l x2))\n    (= l (L li))\n)(\n    (set (const-prop (L (+ li 1)) x) (add-val v1 v2))\n))\n\n; propagate x = a == b\n(rule (\n    (RProg l (Ass x (Eq x1 x2)))\n    (= v1 (const-prop l x1))\n    (= v2 (const-prop l x2))\n    (= l (L li))\n)(\n    (set (const-prop (L (+ li 1)) x) (eq-val v1 v2))\n))\n\n; propagate other vars\n(rule (\n    (RProg (L li) (Ass (V x) e))\n    (= val (const-prop (L li) (V y)))\n    (!= x y)\n)(\n    (set (const-prop (L (+ li 1)) (V y)) val)\n))\n\n;; TRANSFORMATION \n\n; generate demand for biop\n(rule (\n    (= (Prog l) (Ass x (Add x1 x2)))\n    (= v1 (const-prop l x1))\n    (= v2 (const-prop l x2))\n)(\n    (add-val v1 v2)\n))\n\n(rule (\n    (= (Prog l) (Ass x (Eq x1 x2)))\n    (= v1 (const-prop l x1))\n    (= v2 (const-prop l x2))\n)(\n    (eq-val v1 v2)\n))\n\n; replace x = a + b (constant)\n(rule (\n    (= (Prog l) (Ass x (Add x1 x2)))\n    (= (I val) (add-val (const-prop l x1)\n                        (const-prop l x2)))\n)(\n    (RProg l (Ass x (Const (I val))))\n))\n\n; replace x = a + b (non-contant)\n(rule (\n    (= (Prog l) (Ass x (Add x1 x2)))\n    (= Top (add-val (const-prop l x1)\n                      (const-prop l x2)))\n)(\n    (RProg l (Ass x (Add x1 x2)))\n))\n\n; replace x = a == b (constant)\n(rule (\n    (= (Prog l) (Ass x (Eq x1 x2)))\n    (= b (eq-val (const-prop l x1) (const-prop l x2)))\n    (Bool b)\n)(\n    (RProg l (Ass x (Const b)))\n))\n\n; replace x = a == b (non-constant)\n(rule (\n    (= (Prog l) (Ass x (Eq x1 x2)))\n    (= Top (eq-val (const-prop l x1) (const-prop l x2)))\n)(\n    (RProg l (Ass x (Eq x1 x2)))\n))\n\n; replace x = k\n(rule (\n    (= (Prog l) (Ass x (Const val)))\n)(\n    (RProg l (Ass x (Const val)))\n))\n\n;;;;;;;;;;;;;;;;\n;; CALL CASE\n;;;;;;;;;;;;;;;;\n\n;; PROPAGATION\n(rule (\n    (RProg l (Call f))\n    (= val (const-prop l x))\n    (= l (L li))\n)(\n    (set (const-prop (L (+ li 1)) x) val)\n))\n\n;; TRANSFORMATION\n(rule (\n    (= (Prog l) (Call f))\n)(\n    (RProg l (Call f))\n))\n\n;;;;;;;;;;;;;;;;\n;; IF CASE\n;;;;;;;;;;;;;;;;\n\n;; PROPAGATION\n(rule (\n    (RProg l (If b l1 l2))\n    (= val (const-prop l x))\n)(\n    (set (const-prop l1 x) val)\n    (set (const-prop l2 x) val)\n))\n\n;; TRANSFORMATION\n\n; replace if true\n(rule (\n    (= (Prog l) (If b l1 l2))\n    (= True (const-prop l b))\n)(\n    (RProg l (Goto l1))\n))\n\n; replace if false\n(rule (\n    (= (Prog l) (If b l1 l2))\n    (= False (const-prop l b))\n)(\n    (RProg l (Goto l2))\n))\n\n; replace if Top\n(rule (\n    (= (Prog l) (If b l1 l2))\n    (= Top (const-prop l b))\n)(\n    (RProg l (If b l1 l2))\n))\n\n;;;;;;;;;;;;;;;;\n;; GOTO CASE\n;;;;;;;;;;;;;;;;\n\n;; PROPAGATION\n(rule (\n    (RProg l1 (Goto l2))\n    (= val (const-prop l1 x))\n)(\n    (set (const-prop l2 x) val)\n))\n\n;; TRANSFORMATION\n(rule (\n    (= (Prog l1) (Goto l2))\n)(\n    (RProg l1 (Goto l2))\n))\n\n;;;;;;;;;;;;;;;;\n;; TEST\n;;;;;;;;;;;;;;;;\n\n(union (Prog (L 0)) (Ass (V \"b\") (Const Top)))\n(union (Prog (L 1)) (Ass (V \"ten\") (Const (I 10))))\n(union (Prog (L 2)) (Ass (V \"one\") (Const (I 1))))\n(union (Prog (L 3)) (Ass (V \"zero\") (Const (I 0))))\n; x := 10\n(union (Prog (L 4)) (Ass (V \"x\") (Const (I 10))))\n; while (...) {\n(union (Prog (L 5)) (If (V \"b\") (L 6) (L 13)))\n;     if (x == 10) {\n(union (Prog (L 6)) (Ass (V \"cond\") (Eq (V \"x\") (V \"ten\"))))\n(union (Prog (L 7)) (If (V \"cond\") (L 8) (L 10)))\n;         DoSomething();\n(union (Prog (L 8)) (Call (V \"DoSomething\")))\n;     }\n(union (Prog (L 9)) (Goto (L 12)))\n;     else {\n;         DoSomething();\n(union (Prog (L 10)) (Call (V \"DoSomethingElse\")))\n;         x := x + 1;\n(union (Prog (L 11)) (Ass (V \"x\") (Add (V \"x\") (V \"one\"))))\n;; (union (Prog (L 11)) (Call (V \"DoSomethingElse\")))\n;     }\n(union (Prog (L 12)) (Goto (L 5)))\n; y := x\n(union (Prog (L 13)) (Ass (V \"y\") (Add (V \"x\") (V \"zero\"))))\n(union (Prog (L 14)) End)\n\n(run 20)\n\n(check (= (const-prop (L 14) (V \"y\")) (I 10)))\n\n",
  "schedule-demo": "; Step with alternating feet, left before right\n(relation left (i64))\n(relation right (i64))\n\n(left 0)\n(right 0)\n\n(ruleset step-left)\n(rule ((left x) (right x))\n      ((left (+ x 1)))\n      :ruleset step-left)\n\n(ruleset step-right)\n(rule ((left x) (right y) (= x (+ y 1)))\n      ((right x))\n      :ruleset step-right)\n\n(run-schedule\n      (repeat 10\n            (saturate step-right)\n            (saturate step-left)))\n\n; We took 10 steps with the left, but the right couldn't go the first round,\n; so we took only 9 steps with the right.\n(check (left 10))\n(check (right 9))\n(fail (check (left 11)))\n(fail (check (right 10)))\n",
  "set": "(sort ISetBase (Set i64))\n\n; Test set-of\n(check (= (set-of 1 2) (set-insert (set-insert (set-empty) 1) 2)))\n(check (= (set-of 1 2) (set-insert (set-insert (set-empty) 2) 1)))\n\n; Test set-union\n(check (= (set-union (set-of 1 2) (set-of 3 4)) (set-of 1 2 3 4)))\n\n; Test set-length\n(check (= 0 (set-length (set-empty))))\n(check (= 1 (set-length (set-of 1 1 1))))\n(check (= 2 (set-length (set-of 1 -1 1 1))))\n\n; Test set-get\n(check (= 1 (set-get (set-of 1 -1 2 4 1) 0)))\n(check (= 2 (set-get (set-of 1 -1 2 4 1) 1)))\n(check (= 4 (set-get (set-of 1 -1 2 4 1) 2)))\n(check (= -1 (set-get (set-of 1 -1 2 4 1) 3)))\n\n; Test set-remove\n(check (= (set-remove (set-of 1 2 3) 3) (set-of 1 2)))\n\n; Reify set\n(sort ISet)\n(constructor IS (ISetBase) ISet)\n\n(function ISet-get (ISet i64) i64 :no-merge)\n(rule ((IS x) (> (set-length x) 0))\n    ((set (ISet-get (IS x) 0) (set-get x 0))))\n(rule ((ISet-get (IS x) j)\n     (= i (+ j 1)) (< i (set-length x)))\n    ((set (ISet-get (IS x) i) (set-get x i))))\n\n(let myset (IS (set-of 2 4 1 4 -1)))\n(run 100)\n(check (= 1 (ISet-get myset 0)))\n(check (= 2 (ISet-get myset 1)))\n(check (= 4 (ISet-get myset 2)))\n(check (= -1 (ISet-get myset 3)))\n",
  "set_sort_function": "(sort Foo)\n(function bar () Foo :no-merge)\n(constructor baz () Foo)\n(constructor qux () Foo)\n(constructor quux () Foo)\n\n(set (bar) (baz))\n(union (baz) (qux))\n(set (bar) (qux))\n(fail (set (bar) (quux)))",
  "stratified": "(relation path (i64 i64))\n(relation edge (i64 i64))\n\n(rule ((edge x y))\n      ((path x y)))\n\n(edge 1 2)\n(edge 2 3)\n(edge 3 4)\n(check (edge 1 2))\n(run 3)\n(check (path 1 2))\n\n(ruleset path-rules)\n\n(rule ((path x y) (edge y z))\n      ((path x z))\n      :ruleset path-rules)\n\n(edge 3 8)\n(run path-rules 1)\n(check (path 1 3))\n\n\n\n; Should fail\n; (check (path 1 4))\n; (check (path 3 8)) \n",
  "string": "; Tests for the string sort\n\n; Concatenation\n(check (= (+ \"a\" \"bc\" \"de\") \"abcde\"))\n; Counting the number of substring occurances\n(check (= (count-matches \"ab ab\" \"ab\") 2))\n; replacing a substring\n(check (= (replace \"ab ab\" \"ab\" \"cd\") \"cd cd\"))\n",
  "string_quotes": "(function f () String :no-merge)\n(input f \"tests/string_quotes.csv\")\n(check (= (f) \"abc\"))\n",
  "subsume-relation": "(datatype V (A) (B) (C))\n(relation R (V V))\n\n(A) (B) (C)\n(subsume (R (A) (B)))\n(R (A) (C))\n(union (B) (C))\n\n(check (= (R (A) (B)) ()))\n",
  "subsume": ";; Let's pretend that we are optimizing mathematical expressions, but for some reason on our compiler\n;; multiplying by three is very expensive. So we want to rewrite those forms to three additions instead, and always\n;; extract that form.\n\n(datatype Math\n  (Num i64)\n  (Var String)\n  (Add Math Math)\n  (Mul Math Math))\n\n\n(rewrite (Mul (Num 3) x) (Add x (Add x x)) :subsume)\n\n(let x (Mul (Num 2) (Mul (Num 3) (Var \"x\"))))\n\n(run 10)\n\n; When X is extracted, we get the optimized form, where the * 3 is expanded out\n(check (= x (Mul (Num 2) (Add (Var \"x\") (Add (Var \"x\") (Var \"x\"))))))\n(extract x)\n; Will be (Mul (Num 2) (Add (Var \"x\") (Add (Var \"x\") (Var \"x\"))))\n\n; Even though it can't be extracted, we can still check that x equal 2 * (3 * x)\n(check (= x (Mul (Num 2) (Mul (Num 3) (Var \"x\")))))\n\n; Also if we make multiplication commutative and run that run, we won't get that result either\n; since the original expr has been subsumed when it was replaced with the addition\n(rewrite (Mul x y) (Mul y x))\n(run 10)\n(extract x)\n",
  "test-combined-steps": "; Step with alternating feet, left before right\n(relation left (i64))\n(relation right (i64))\n(relation middle (i64))\n\n(left 0)\n(right 0)\n\n(ruleset step-left)\n(rule ((left x) (right x))\n      ((left (+ x 1)))\n      :ruleset step-left)\n\n(ruleset step-right)\n(rule ((left x) (right y) (= x (+ y 1)))\n      ((right x))\n      :ruleset step-right)\n\n(ruleset step-middle)\n(rule ((left x))\n      ((middle x))\n      :ruleset step-middle)\n\n(unstable-combined-ruleset\n  my-combination \n  step-left step-right \n  step-middle)\n\n(run-schedule (repeat 1 my-combination))\n\n(check (left 1))\n(check (right 0))\n;; middle didn't observe anything except original step\n(check (middle 0))\n(fail (check (left 2)))\n(fail (check (right 1)))\n(fail (check (middle 1)))\n(fail (check (middle 2)))\n\n\n(run-schedule\n      (repeat 9\n            (saturate step-right)\n            my-combination\n            (saturate step-right)))\n\n(check (left 10))\n(check (right 10))\n;; middle didn't get a chance to observe (left 10)\n(check (middle 9))\n(fail (check (middle 10)))\n(fail (check (left 11)))\n(fail (check (right 11)))\n",
  "test-combined": "(relation edge (i64 i64))\n(relation path (i64 i64))\n\n\n(ruleset myrules1)\n(rule ((edge x y))\n      ((path x y))\n      :ruleset myrules1)\n(ruleset myrules2)\n(rule ((path x y) (edge y z))\n      ((path x z))\n      :ruleset myrules2)\n\n(unstable-combined-ruleset myrules-combined\n    myrules1 myrules2)\n\n\n(edge 0 1)\n(edge 1 2)\n(edge 2 3)\n(edge 2 4)\n\n(run-schedule\n  (repeat 3 myrules-combined))\n\n\n(check (path 0 1))\n(check (path 0 2))\n(check (path 0 3))\n(check (path 0 4))\n(check (path 1 2))\n(check (path 1 3))\n(check (path 1 4))\n",
  "towers-of-hanoi": "(datatype Stack\n          (Empty)\n          (Cons i64 Stack))\n\n(function Config (Stack Stack Stack) i64 :merge (min old new))\n\n;; move from first stack\n(rule ((= len (Config (Cons x a) b c)))\n      ((set (Config a (Cons x b) c) (+ len 1))\n       (set (Config a b (Cons x c)) (+ len 1))))\n\n;; move from second stack\n(rule ((= len (Config a (Cons x b) c)))\n      ((set (Config (Cons x a) b c) (+ len 1))\n       (set (Config a b (Cons x c)) (+ len 1))))\n\n;; move from third stack\n(rule ((= len (Config a b (Cons x c))))\n      ((set (Config (Cons x a) b c) (+ len 1))\n       (set (Config a (Cons x b) c) (+ len 1))))\n\n(let e (Empty))\n\n\n;; initial state [123 _ _] with path \"length\" 0\n(set (Config (Cons 1 (Cons 2 (Cons 3 e))) e e) 0)\n\n;; find all reachable states\n(run 1000000)\n\n;; print first 10 tuples\n(print-function Config 10)\n(print-size Config)\n\n;; how to long to move to state [_ _ 123]\n(query-extract (Config e e (Cons 1 (Cons 2 (Cons 3 e)))))\n\n;; actually do the assertion\n(check (= 5 (Config e e (Cons 1 (Cons 2 (Cons 3 e))))))",
  "tricky-type-checking": ";;;;;;;;;;;;;;;;;;\n;; From repro-constraineq\n\n;; repro-constraineq\n(push)\n(rule ((= x 1) (= y x) (= z y)) ())\n(run 1)\n(pop)\n\n;; repro-constraineq2\n(push)\n(rule ((= x 1) (= y x)) ())\n(run 1)\n(pop)\n\n;; repro-constraineq3\n(push)\n(relation f (i64))\n\n(rule ((= x 1)\n       (= x 2))\n      ((f x)))\n      \n(run 1)\n(print-function f 10)\n(pop)\n\n;;;;;;;;;;;;;;;;;;\n;; Atoms need to be order-insensitive\n\n;; Issue #196\n(push)\n(relation R (i64))\n\n(rule \n  ((= x y)\n   (= y 1)) \n  ((R x)))\n(run 1)\n(check (R 1))\n(pop)\n\n(push)\n(relation R (i64))\n\n(rule \n  ((= x (+ y 1))\n   (= y 1)) \n  ((R x)))\n(run 1)\n(check (R 2))\n(pop)\n\n;; Issue #80\n(push)\n(datatype TYPE)\n(datatype TERM)\n(constructor type (TERM) TYPE)\n(constructor Ob () TYPE)\n(constructor Hom (TERM TERM) TYPE)\n\n(constructor id (TERM) TERM)\n(rule ((type (id A)))\n      ((type A)))\n(rewrite (type (id A)) \n         (Hom A A) \n    :when ((= (type A) (Ob))))\n\n(constructor compose (TERM TERM) TERM)\n(rule ((type (compose f g)))  \n      ((type f) \n       (type g)))\n(rewrite (type (compose f g)) \n         (Hom A C) \n    :when ((= (type f) (Hom A B)) \n           (= (type g) (Hom B C))))\n\n(birewrite (compose (compose f g) h) \n           (compose f (compose g h)) \n    :when ((= (type A) (Ob)) \n           (= (type B) (Ob))\n           (= (type C) (Ob))\n           (= (type D) (Ob))\n           (= (type f) (Hom A B))\n           (= (type g) (Hom B C))\n           (= (type h) (Hom C D))))\n(birewrite (compose f (id B)) f \n    :when ((= (type A) (Ob)) \n           (= (type B) (Ob))\n           (= (type f) (Hom A B))))\n(birewrite (compose (id A) f) f \n    :when ((= (type A) (Ob)) \n           (= (type B) (Ob))\n           (= (type f) (Hom A B))))\n\n(constructor AConst () TERM)\n(let A (AConst))\n(constructor BConst () TERM)\n(let B (BConst))\n(constructor fConst () TERM)\n(let f (fConst))\n(constructor gConst () TERM)\n(let g (gConst))\n(let fog (compose g f))\n(union (type f) (Hom A B))\n(union (type g) (Hom B A))\n(union (type A) (Ob))\n(union (type B) (Ob))\n(type fog)\n(run 10)\n(print-function type 10)\n(check (= (type f) \n          (type (compose (id A) \n                         (compose f (id B))))))\n(check (= (type fog)\n          (Hom B B)))\n(pop)\n\n\n;;;;;;;;;;;;;;;;;;\n;; Finding the right type in case of container types and primitives\n\n;; Issue #113\n\n(push)\n(sort MyMap (Map i64 String))\n(sort MyMap1 (Map i64 i64))\n\n(let my_map1 (map-insert (map-empty) 1 \"one\"))\n(pop)\n\n(push)\n(sort MyMap1 (Map i64 i64))\n(sort MyMap (Map i64 String))\n\n(let my_map1 (map-insert (map-empty) 1 \"one\"))\n(pop)\n\n",
  "type-constraints-tests": "(datatype Operand)\n(sort VecOperandBase (Vec Operand))\n(datatype VecOperand (VO VecOperandBase))\n(sort VecVecOperandBase (Vec VecOperand))\n\n(rule\n   ((= v1 (vec-of))\n    (= v2 (VO v1))\n    (= v3 (vec-of v2)))\n   ())\n",
  "typecheck": "; type checking for simply typed lambda calculus\n\n(datatype Type \n  (TArr Type Type) ; t1 -> t2\n)\n(constructor TUnitConst () Type)\n(let TUnit (TUnitConst))\n\n(datatype Expr \n  (Lam String Type Expr) ; lam x : t . e\n  (App Expr Expr) \n  (Var String) \n)\n(constructor MyUnitConst () Expr)\n(let MyUnit (MyUnitConst))\n\n(datatype Ctx \n  (Cons String Type Ctx)\n)\n(constructor NilConst () Ctx)\n(let Nil (NilConst))\n\n; ctx |- expr : type\n(constructor typeof (Ctx Expr) Type)\n\n; ctx |- () : unit\n(rewrite (typeof ctx MyUnit) TUnit)\n\n; ctx; x: t |- x : t\n(rewrite (typeof (Cons x t ctx) (Var x)) t)\n\n; ctx |- f :- t1 -> t2\n; ctx |- e : t1\n; -----------------\n; ctx |- f e : t2\n\n(rule (\n  (= (typeof ctx (App f e)) t2)\n)(\n  (typeof ctx f)\n  (typeof ctx e)\n))\n\n(rule (\n  (= (typeof ctx (App f e)) t1)\n  (= (typeof ctx f) (TArr (typeof ctx e) t2))\n)(\n  (union t1 t2)\n))\n\n; ctx |- x : t\n; ------------------ y != x \n; ctx; y: t |- x : t\n\n(rewrite (typeof (Cons y ty ctx) (Var x))\n         (typeof ctx (Var x))\n    :when ((!= x y)))\n\n; ctx; x: t1 |- e : t2\n; ------------------------------\n; ctx |- lam x: t1. e : t1 -> t2\n\n; rhs of rewrite creates demand\n(rewrite (typeof ctx (Lam x t1 e))\n         (TArr t1 (typeof (Cons x t1 ctx) e)))\n\n; TEST\n; ----\n\n; lam x : unit, f : unit -> unit . f x\n(let e \n  (Lam \"x\" TUnit \n       (Lam \"f\" (TArr TUnit TUnit)\n            (App (Var \"f\") (Var \"x\")))))\n\n; lam x : unit . x\n(let id (Lam \"x\" TUnit (Var \"x\")))\n(let t-id (typeof Nil id))\n\n; (e () id) = ()\n(let app-unit-id (App (App e MyUnit) id))\n(let t-app (typeof Nil app-unit-id))\n\n(let free (Lam \"x\" TUnit (Var \"y\")))\n(let t-free-ill (typeof Nil free))\n(let t-free-1 (typeof (Cons \"y\" TUnit Nil) free))\n(let t-free-2 (typeof (Cons \"y\" (TArr (TArr TUnit TUnit) TUnit) Nil) free))\n\n(run 15)\n\n(query-extract t-id)\n(check (= t-id (TArr TUnit TUnit)))\n\n(query-extract t-app)\n(check (= t-app TUnit))\n\n(query-extract t-free-1)\n(check (= t-free-1 (TArr TUnit TUnit)))\n(query-extract t-free-2)\n(check (= t-free-2 (TArr TUnit (TArr (TArr TUnit TUnit) TUnit))))\n; this will err\n; (query-extract t-free-ill)\n",
  "typeinfer": ";;;;;;;;;;;;;;;;;;;;;;\n;; Exprs and Types\n;;;;;;;;;;;;;;;;;;;;;;\n\n(datatype Ident)\n(datatype Expr)\n(datatype Type)\n(datatype Scheme)\n(datatype Ctx)\n;; TODO: can't do unit right now\n(sort QuantifiedVs (Set Ident))\n\n(constructor Fresh (Ident i64) Ident)\n(constructor V (String) Ident)\n\n(constructor Var (Ident) Expr)\n(constructor App (Expr Expr) Expr)\n(constructor Abs (Ident Expr) Expr)\n(constructor Let (Ident Expr Expr) Expr)\n(constructor Num (i64) Expr)\n(constructor True () Expr)\n(constructor False () Expr)\n(constructor MyUnit () Expr)\n\n(constructor TVar (Ident) Type :cost 3)\n(constructor TArr (Type Type) Type :cost 1)\n(constructor TInt () Type :cost 1)\n(constructor TBool () Type :cost 1)\n(constructor TUnit () Type :cost 1)\n\n(constructor Forall (QuantifiedVs Type) Scheme)\n(constructor Nil () Ctx)\n(constructor Cons (Ident Scheme Ctx) Ctx)\n\n(relation ftvCtx (Ctx QuantifiedVs))\n(relation ftv (Type QuantifiedVs))\n(relation ftvScheme (Scheme QuantifiedVs))\n(relation has-qs (Ctx Type QuantifiedVs))\n(relation has-qs-demand (Ctx Type))\n\n;;;;;;;;;;;;;;;;;;;;;;\n;; Expression size\n;;;;;;;;;;;;;;;;;;;;;;\n(relation expr-size (Expr i64))\n(rule ((= e (Num n)))((expr-size e 1)))\n(rule ((= e (Var x)))((expr-size e 1)))\n;; asserted facts will be cleared so we define them as rules\n(rule ((= e (True))) ((expr-size e 1)))\n(rule ((= e (False))) ((expr-size e 1)))\n(rule ((= e (MyUnit))) ((expr-size e 1)))\n(rule ((= e (App e1 e2)) \n       (expr-size e1 s1) \n       (expr-size e2 s2))\n      ((expr-size e (+ (+ s1 s2) 1))))\n(rule ((= e (Let x e1 e2)) \n       (expr-size e1 s1) \n       (expr-size e2 s2))\n      ((expr-size e (+ (+ s1 s2) 1))))\n(rule ((= e (Abs x e1)) \n       (expr-size e1 s1))\n      ((expr-size e (+ s1 1))))\n\n;;;;;;;;;;;;;;;;;;;;;;\n;; Scheme and Context\n;;;;;;;;;;;;;;;;;;;;;;\n\n(rule ((= e (TBool)))((ftv e (set-empty))))\n(rule ((= e (TUnit)))((ftv e (set-empty))))\n(rule ((= e (TInt)))((ftv e (set-empty))))\n(rule ((= e (TVar x)))((ftv e (set-insert (set-empty) x))))\n(rule ((= e (TArr fr to))\n       (ftv fr s1)\n       (ftv to s2))\n      ((ftv e (set-union s1 s2))))\n(rule ((= c (Nil))) ((ftvCtx c (set-empty))))\n(rule ((= e (Forall qs t))\n       (ftv t fvs))\n      ((ftvScheme e (set-diff fvs qs)))) \n(rule ((= c (Cons x s n))\n       (ftvCtx n fvs1)\n       (ftvScheme s fvs2))\n      ((ftvCtx c (set-union fvs1 fvs2))))\n\n\n;; TODO: rewrite lookup to use native sets\n(constructor lookup (Ctx Ident) Scheme :cost 1000)\n(rewrite (lookup (Cons x s tl) x) s)\n(rule (\n  (= t (lookup (Cons y s tl) x))\n  (!= x y)\n)(\n  (union t (lookup tl x))\n))\n\n;;;;;;;;;;;;;;;;;;;;;;\n;; Generalization and Instantiation\n;;;;;;;;;;;;;;;;;;;;;;\n\n(constructor generalize (Ctx Type) Scheme :cost 1000)\n(constructor instantiate (Scheme i64) Type :cost 1000)\n\n(rule ((has-qs-demand ctx (TInt)))\n      ((has-qs ctx (TInt) (set-empty))))\n(rule ((has-qs-demand ctx (TBool)))\n      ((has-qs ctx (TBool) (set-empty))))\n(rule ((has-qs-demand ctx (TUnit)))\n      ((has-qs ctx (TUnit) (set-empty))))\n\n(rule ((has-qs-demand ctx (TArr fr to)))\n      ((has-qs-demand ctx fr)\n       (has-qs-demand ctx to)))\n(rule ((has-qs-demand ctx (TArr fr to))\n       (has-qs ctx fr qs1)\n       (has-qs ctx to qs2))\n      ((has-qs ctx (TArr fr to) (set-union qs1 qs2))))\n\n(rule ((has-qs-demand ctx (TVar x))\n       (ftvCtx ctx key-set)\n       (set-contains key-set x))\n      ((has-qs ctx (TVar x) (set-empty))))\n(rule ((has-qs-demand ctx (TVar x))\n       (ftvCtx ctx key-set)\n       (set-not-contains key-set x))\n      ((has-qs ctx (TVar x) (set-insert (set-empty) x))))\n\n(rule ((= sc (generalize ctx t)))\n      ((has-qs-demand ctx t)))\n(rewrite (generalize ctx t)\n         (Forall qs t)\n         :when ((has-qs ctx t qs)))\n\n(constructor subst-fresh (QuantifiedVs Type i64) Type :cost 1000)\n(rewrite (subst-fresh vs (TInt) c) (TInt))\n(rewrite (subst-fresh vs (TBool) c) (TBool))\n(rewrite (subst-fresh vs (TUnit) c) (TUnit))\n(rewrite (subst-fresh vs (TArr fr to) c) \n         (TArr (subst-fresh vs fr c) (subst-fresh vs to c)))\n(rule ((= otype (subst-fresh vs (TVar s) c))\n       (set-contains vs s))\n      ((union otype (TVar (Fresh s c)))))\n(rule ((= otype (subst-fresh vs (TVar s) c))\n       (set-not-contains vs s))\n      ((union otype (TVar s))))\n\n(rewrite (instantiate (Forall vs t) c)\n         (subst-fresh vs t c))\n\n;;;;;;;;;;;;;;;;;;;;;;\n;; Injectivity\n;;;;;;;;;;;;;;;;;;;;;;\n\n(rule ((= (TArr fr1 to1) (TArr fr2 to2)))\n      ((union fr1 fr2) \n       (union to1 to2)))\n\n;;;;;;;;;;;;;;;;;;;;;;\n;; Type inference\n;;;;;;;;;;;;;;;;;;;;;;\n\n; ctx |- expr : type\n(constructor typeof (Ctx Expr i64) Type :cost 1000)\n\n;; Basic types (TInt, TBool, TUnit)\n(rewrite (typeof ctx (Num x) c) (TInt))\n(rewrite (typeof ctx (True) c) (TBool))\n(rewrite (typeof ctx (False) c) (TBool))\n(rewrite (typeof ctx (MyUnit) c) (TUnit))\n\n; sc = lookup(ctx, x)\n; t = instantiate(sc)\n; ---------------\n; ctx |- x : t\n(rewrite (typeof ctx (Var x)  c)\n         (instantiate (lookup ctx x) c))\n\n(rewrite \n  (typeof ctx (Abs x e) c)\n  (TArr (TVar (Fresh x c)) \n        (typeof (Cons x (Forall (set-empty) (TVar (Fresh x c)))\n                      ctx)\n                e cc))\n    :when ((= cc (+ c 1))))\n\n(rule ((= to (typeof ctx (App e1 e2) c))\n       (= c1 (+ c 1))\n       (expr-size e1 sz)\n       (= c2 (+ c (+ sz 1))))\n      ((union (typeof ctx e1 c1) \n              (TArr (typeof ctx e2 c2) to))))\n\n(rewrite (typeof ctx (Let x e1 e2) c)\n         (typeof (Cons x (generalize ctx (typeof ctx e1 c1)) \n                       ctx)\n                 e2 c2)\n    :when ((= c1 (+ c 1))\n           (expr-size e1 sz)\n           (= c2 (+ c (+ sz 1)))))\n\n;;;;;;;;;;;;;;;;;;;;;;\n;; Occurs check\n;;;;;;;;;;;;;;;;;;;;;;\n(relation occurs-check (Ident Type))\n(constructor errors () Ident)\n(rule ((= (TVar x) (TArr fr to)))\n      ((occurs-check x fr)\n       (occurs-check x to)))\n(rule ((occurs-check x (TVar x)))\n      ;; ((set (errors) x)))\n      ((panic \"occurs check fail\")))\n(rule ((occurs-check x (TArr fr to)))\n      ((occurs-check x fr)\n       (occurs-check x to)))\n\n(relation base-types (Type))\n(base-types (TInt))\n(base-types (TBool))\n(base-types (TUnit))\n(rule ((base-types t)\n       (= t (TArr fr to)))\n      ((panic \"Unifying base types with functions\")) )\n(rule ((= (TInt) (TBool))) ((panic \"Unifying base types\")))\n(rule ((= (TInt) (TUnit))) ((panic \"Unifying base types\")))\n(rule ((= (TBool) (TUnit))) ((panic \"Unifying base types\")))\n;;;;;;;;;;;;;;;;;;;;;;\n;; TEST\n;;;;;;;;;;;;;;;;;;;;;;\n\n(push)\n(let id (Abs (V \"x\") (Var (V \"x\"))))\n(let t-id (typeof (Nil) id 0))\n(run 100)\n(check (= t-id (TArr (TVar (Fresh (V \"x\") 0)) (TVar (Fresh (V \"x\") 0)))))\n(pop)\n\n(push)\n(let let-poly (Let (V \"id\") (Abs (V \"x\") (Var (V \"x\")))\n                  (App (App (Var (V \"id\")) (Var (V \"id\")))\n                       (App (Var (V \"id\")) (True)))))\n(let t-let-poly (typeof (Nil) let-poly 0))\n(run 100)\n(check (= t-let-poly (TBool)))\n(pop)\n\n(push)\n(let id-id (App (Abs (V \"x\") (Var (V \"x\")))\n                   (Abs (V \"y\") (Var (V \"y\")))))\n(let t-id-id (typeof (Nil) id-id 0))\n(run 100)\n(check (= t-id-id (TArr (TVar (Fresh (V \"y\") 3)) (TVar (Fresh (V \"y\") 3)))))\n(pop)\n\n\n(push)\n(let let-true (Let (V \"x\") (True) (True)))\n(let t-let-true (typeof (Nil) let-true 0))\n(run 100)\n(check (= t-let-true (TBool)))\n(pop)\n\n(push)\n\n(let let-var-true (Let (V \"x\") (True) (Var (V \"x\"))))\n(let t-let-var-true (typeof (Nil) let-var-true 0))\n(run 100)\n(check (= t-let-var-true (TBool)))\n(pop)\n\n(push)\n\n(let abs-id (Abs (V \"x\") \n                    (Let (V \"y\") (Abs (V \"z\") (Var (V \"z\"))) (Var (V \"y\")))))\n(let t-abs-id (typeof (Nil) abs-id 0))\n(run 100)\n(let x (Fresh (V \"x\") 0))\n(let z (Fresh (Fresh (V \"z\") 2) 4))\n(check (= t-abs-id (TArr (TVar x) (TArr (TVar z) (TVar z)))))\n(pop)\n\n(push)\n\n(let let-env (Let (V \"x\") (True) \n                (Let (V \"f\") (Abs (V \"a\") (Var (V \"a\")))\n                (Let (V \"x\") (MyUnit)\n                (App (Var (V \"f\")) (Var (V \"x\")))\n                ))))\n(let t-let-env (typeof (Nil) let-env 0))\n(run 100)\n(check (= t-let-env (TUnit)))\n(pop)\n\n(push)\n(let let-env-2a (Let (V \"x\") (MyUnit)\n                   (Let (V \"f\") (Abs (V \"y\") (Var (V \"x\")))\n                   (Let (V \"x\") (True)\n                   (App (Var (V \"f\")) (Var (V \"x\")))))))\n(let t-let-env-2a (typeof (Nil) let-env-2a 0))\n(run 100)\n(check (= t-let-env-2a (TUnit)))\n(pop)\n\n(push)\n\n(let let-env-2b (App (Abs (V \"x\")\n                             (Let (V \"f\") (Abs (V \"y\") (Var (V \"x\")))\n                             (Let (V \"x\") (True)\n                             (App (Var (V \"f\")) (Var (V \"x\"))))))\n                        (MyUnit)))\n(let t-let-env-2b (typeof (Nil) let-env-2b 0))\n(run 100)\n(check (= t-let-env-2b (TUnit)))\n(pop)\n\n(push)\n\n;; ((lambda (x) ((lambda (f) ((lambda (x) (f x)) #t)) (lambda (y) x))) 5)\n(let let-env-hard (App (Abs (V \"x\") \n                               (App (Abs (V \"f\") \n                                         (App (Abs (V \"x\") (App (Var (V \"f\")) (Var (V \"x\")))) \n                                              (True)))\n                                    (Abs (V \"y\") (Var (V \"x\")))))\n                          (MyUnit)))\n(let t-let-env-hard (typeof (Nil) let-env-hard 0))\n(run 100)\n(check (= t-let-env-hard (TUnit)))\n(pop)\n\n(push)\n\n(let let-inst (Let (V \"id\") (Abs (V \"x\") (Var (V \"x\")))\n                 (Let (V \"iid\") (Abs (V \"y\") (Var (V \"id\")))\n                 (App (Var (V \"iid\")) \n                      (App (Var (V \"id\")) (True))))) )\n(let t-let-inst (typeof (Nil) let-inst 0))\n(run 100)\n(check (= t-let-inst  (TArr (TVar (Fresh (Fresh (Fresh (V \"x\") 1) 5) 7)) (TVar (Fresh (Fresh (Fresh (V \"x\") 1) 5) 7)))))\n(pop)\n\n",
  "unification-points-to": "(datatype FuncT (Func String))\n(datatype StmtT (Stmt String))\n(datatype ExprT (Expr String))\n(datatype FieldT (Field String))\n(datatype TypeT (Type String))\n(datatype AllocT (Alloc AllocT) (AllocVar ExprT))\n\n(relation func (FuncT ExprT TypeT TypeT))\n(relation func-stmt (FuncT StmtT))\n(relation assign (StmtT TypeT ExprT ExprT))\n(relation field-assign (StmtT ExprT FieldT ExprT))\n(relation store (StmtT ExprT ExprT))\n(relation expr (StmtT ExprT))\n(relation return (StmtT ExprT))\n(relation eq (ExprT ExprT ExprT))\n(relation call (ExprT FuncT ExprT))\n(relation add (ExprT ExprT ExprT))\n(relation field (ExprT ExprT FieldT))\n(relation struct-lit-field (ExprT FieldT ExprT))\n(relation addr (ExprT ExprT FieldT))\n(relation load (ExprT ExprT))\n(relation malloc (ExprT TypeT))\n\n;; typedef struct s {\n;;   int x;\n;;   int y;\n;; } s;\n\n;; int mul(struct s q) { ... }\n\n;; int fact(int i) {\n;;   int c = i == 0;\n;;   if (c) {\n;;     return 1;\n;;   } else {\n;;     int j = i + -1;\n;;     int r = fact(j);\n;;     int prod = mul((struct s){i, r});\n;;     return prod;\n;;   }\n;; }\n;; (func (Func \"fact\") (Expr \"i\") (Type \"int\") (Type \"int\"))\n;; (func-stmt (Func \"fact\") (Stmt \"int c = i == 0;\"))\n;; (func-stmt (Func \"fact\") (Stmt \"if ...\"))\n;; (func-stmt (Func \"fact\") (Stmt \"return 1\"))\n;; (func-stmt (Func \"fact\") (Stmt \"int j = i + -1\"))\n;; (func-stmt (Func \"fact\") (Stmt \"int r = fact(j)\"))\n;; (func-stmt (Func \"fact\") (Stmt \"int prod = mul({ x: i, y: r })\"))\n;; (func-stmt (Func \"fact\") (Stmt \"return prod\"))\n;; (assign (Stmt \"int c = i == 0\") (Type \"int\") (Expr \"c\") (Expr \"i == 0\"))\n;; (assign (Stmt \"int j = i + -1\") (Type \"int\") (Expr \"j\") (Expr \"i + -1\"))\n;; (assign (Stmt \"int r = fact(j)\") (Type \"int\") (Expr \"r\") (Expr \"fact(j)\"))\n;; (assign (Stmt \"int prod = mul({ x: i, y: r })\") (Type \"int\") (Expr \"prod\") (Expr \"mul({ x: i, y: r })\"))\n;; (eq (Expr \"i == 0\") (Expr \"i\") (Expr \"0\"))\n;; (add (Expr \"i + -1\") (Expr \"i\") (Expr \"-1\"))\n;; (call (Expr \"fact(j)\") (Func \"fact\") (Expr \"j\"))\n;; (call (Expr \"mul({ x: i, y: r })\") (Func \"mul\") (Expr \"{ x: i, y: r }\"))\n;; (return (Stmt \"return prod\") (Expr \"prod\"))\n\n;; typedef struct s {\n;;   int *x;\n;;   int *y;\n;; } s;\n\n;; void swap(struct s *r) {\n;;   int **xp = &(r->x);\n;;   int **yp = &(r->y);\n;;   int *a = *xp;\n;;   int *b = *yp;\n;;   *xp = a;\n;;   *yp = b;\n;; }\n\n;; int f(int i) {\n;;   struct s *sp = malloc(sizeof(struct s));\n;;   int *u = malloc(sizeof(int));\n;;   int *v = malloc(sizeof(int));\n;;   *u = i;\n;;   *v = i;\n;;   *sp = (struct s){u, v};\n;;   swap(sp);\n;;   int **zpp = &(sp->x);\n;;   int *zp = *zpp;\n;;   return *zp;\n;; }\n(func (Func \"swap\") (Expr \"r\") (Type \"void\") (Type \"{int *x; int *y;}*\"))\n;; statements\n(func-stmt (Func \"swap\") (Stmt \"int **xp = &(r->x)\"))\n(func-stmt (Func \"swap\") (Stmt \"int **yp = &(r->y)\"))\n(func-stmt (Func \"swap\") (Stmt \"int *z = *xp\"))\n(func-stmt (Func \"swap\") (Stmt \"int *w = *yp\"))\n(func-stmt (Func \"swap\") (Stmt \"*xp = a\"))\n(func-stmt (Func \"swap\") (Stmt \"*yp = b\"))\n(assign (Stmt \"int **xp = &(r->x)\") (Type \"int **\") (Expr \"xp\") (Expr \"&(r->x)\"))\n(assign (Stmt \"int **yp = &(r->x)\") (Type \"int **\") (Expr \"yp\") (Expr \"&(r->y)\"))\n(assign (Stmt \"int *a = *xp\") (Type \"int *\") (Expr \"a\") (Expr \"*xp\"))\n(assign (Stmt \"int *b = *yp\") (Type \"int *\") (Expr \"b\") (Expr \"*yp\"))\n(store (Stmt \"*xp = a\") (Expr \"xp\") (Expr \"a\"))\n(store (Stmt \"*yp = b\") (Expr \"yp\") (Expr \"b\"))\n;; expressions\n(addr (Expr \"&(r->x)\") (Expr \"r\") (Field \"x\"))\n(addr (Expr \"&(r->y)\") (Expr \"r\") (Field \"y\"))\n(load (Expr \"*xp\") (Expr \"xp\"))\n(load (Expr \"*yp\") (Expr \"yp\"))\n\n(func (Func \"f\") (Expr \"i\") (Type \"int\") (Type \"int\"))\n;; statements\n(func-stmt (Func \"f\") (Stmt \"struct s *sp = malloc(sizeof(struct s))\"))\n(func-stmt (Func \"f\") (Stmt \"int *u = malloc(sizeof(int))\"))\n(func-stmt (Func \"f\") (Stmt \"int *v = malloc(sizeof(int))\"))\n(func-stmt (Func \"f\") (Stmt \"*u = i\"))\n(func-stmt (Func \"f\") (Stmt \"*v = i\"))\n(func-stmt (Func \"f\") (Stmt \"*sp = (struct s){u, v}\"))\n(func-stmt (Func \"f\") (Stmt \"swap(sp)\"))\n(func-stmt (Func \"f\") (Stmt \"int **zpp = &(sp->x)\"))\n(func-stmt (Func \"f\") (Stmt \"int *zp = *zpp\"))\n(func-stmt (Func \"f\") (Stmt \"return *zp\"))\n(assign (Stmt \"struct s *sp = malloc(sizeof(struct s))\") (Type \"struct s*\") (Expr \"sp\") (Expr \"malloc(sizeof(struct s))\"))\n(assign (Stmt \"int *u = malloc(sizeof(int))\") (Type \"int *\") (Expr \"u\") (Expr \"malloc(sizeof(int))\"))\n(assign (Stmt \"int *v = malloc(sizeof(int))\") (Type \"int *\") (Expr \"v\") (Expr \"malloc(sizeof(int))\"))\n(store (Stmt \"*u = i\") (Expr \"u\") (Expr \"i\"))\n(store (Stmt \"*v = i\") (Expr \"v\") (Expr \"i\"))\n(store (Stmt \"*sp = (struct s){u, v}\") (Expr \"sp\") (Expr \"(struct s){u, v}\"))\n(expr (Stmt \"swap(sp)\") (Expr \"swap(sp)\"))\n(assign (Stmt \"int **zpp = &(sp->x)\") (Type \"int **\") (Expr \"zpp\") (Expr \"&(sp->x)\"))\n(assign (Stmt \"int *zp = *zpp\") (Type \"int *\") (Expr \"zp\") (Expr \"*zpp\"))\n(return (Stmt \"return *zp\") (Expr \"*zp\"))\n;; expressions\n(malloc (Expr \"malloc(sizeof(struct s))\") (Type \"struct s\"))\n(malloc (Expr \"malloc(sizeof(int))\") (Type \"int\"))\n(struct-lit-field (Expr \"(struct s){u, v}\") (Field \"x\") (Expr \"u\"))\n(struct-lit-field (Expr \"(struct s){u, v}\") (Field \"y\") (Expr \"v\"))\n(call (Expr \"swap(sp)\") (Func \"swap\") (Expr \"sp\"))\n(addr (Expr \"&(sp->x)\") (Expr \"sp\") (Field \"x\"))\n(load (Expr \"*zpp\") (Expr \"zpp\"))\n(load (Expr \"*zp\") (Expr \"zp\"))\n\n;; a variable points to its allocation\n(constructor expr-points-to (ExprT) AllocT)\n(constructor ptr-points-to (AllocT) AllocT)\n\n;; If `v = malloc(...)`, then `v -> alloc[v]`.\n(rule (\n    (assign s t1 v c)\n    (malloc c t2)\n)(\n    (union (expr-points-to v) (AllocVar v))\n))\n\n;; If `t v = e` and `e -> a`, then `v -> a`.\n(rule (\n    (assign s t v e)\n    (= (expr-points-to e) a)\n)(\n    (union (expr-points-to v) a)\n))\n\n;; If `*v = u`, `v -> a`, and `u -> b`, then `a -> b`.\n(rule (\n    (store s v u)\n    (= (expr-points-to v) a)\n    (= (expr-points-to u) b)\n)(\n    (union (ptr-points-to a) b)\n))\n\n;; If `e.f -> a` then `e -> a`.\n(rule (\n    (field ef e f)\n    (= (expr-points-to ef) a)\n)(\n    (union (expr-points-to e) a)\n))\n\n;; If `e -> a` then `e.f -> a`.\n(rule (\n    (= (expr-points-to e) a)\n    (field ef e f)\n)(\n    (union (expr-points-to ef) a)    \n))\n\n;; If `u -> a` and `a -> b`, then `&(u->f) -> b`.\n(rule (\n    (= (expr-points-to u) a)\n    (= (ptr-points-to a) b)\n    (addr e u f)\n)(\n    (union (expr-points-to e) b)\n))\n\n;; If `u -> a` and `&(u->f) -> b`, then `a -> b`.\n(rule (\n    (= (expr-points-to u) a)\n    (addr e u f)\n    (= (expr-points-to e) b)\n)(\n    (union (ptr-points-to a) b)\n))\n\n;; If `(struct t){..., x, ...}` and `x -> b`, then `(struct t){..., x, ...} -> b`.\n(rule (\n    (struct-lit-field l f x)\n    (= (expr-points-to x) b)\n)(\n    (union (expr-points-to l) b)    \n))\n\n;; If `f(t* x)`, `f(v)`, and `v -> a`, then `x -> a`.\n(rule (\n    (func f x in out)\n    (call e f v)\n    (= (expr-points-to v) a)\n)(\n    (union (expr-points-to x) a)  \n))\n\n;; If `return u` in `f` and `u -> a`, then `f(z) -> a`.\n(rule (\n    (call e f v)\n    (func-stmt f s)\n    (return s u)\n    (= (expr-points-to u) a)\n)(\n    (union (expr-points-to e) a)    \n))\n\n;; store rule\n(rule (\n    (load e u)\n    (= (expr-points-to u) a)\n    (= (ptr-points-to a) b)\n)(\n    (union (expr-points-to e) b)\n))\n\n(run 40)\n\n(check (= (AllocVar (Expr \"v\")) (AllocVar (Expr \"u\"))))\n(check (!= (AllocVar (Expr \"v\")) (AllocVar (Expr \"sp\"))))\n\n(query-extract :variants 100 (AllocVar (Expr \"u\")))\n(query-extract :variants 100 (AllocVar (Expr \"sp\")))\n",
  "unify": "(datatype Expr\n  (Mul Expr Expr)\n  (Var String)\n  (Lit i64)\n)\n\n; Assume injectivity of Mul for unification\n(rule ((= (Mul a b) (Mul c d)))\n      ((union a c)\n       (union b d)))\n\n;; (relation False (i64))\n; If any Literal make equal to something it can't be, false is derived\n;(rule ((= (Lit i) (Lit j)) (!= i j))\n;      ((False 0)))\n(rule ((= (Lit i) (Mul a b)))\n      ((panic \"Literal cannot be equal to a product\")))\n\n(union (Mul (Var \"a\") (Var \"a\")) \n     (Mul (Lit 1) (Lit 2)))\n\n\n(run 3)\n(check (= (Var \"a\") (Lit 1)))\n(check (= (Lit 2) (Lit 1)))\n; (check (False 0)) ;; this should fail because we don't want prove false",
  "unstable-fn": "(datatype Math\n  (Num i64)\n  (Var String)\n  (Add Math Math)\n  (Mul Math Math))\n\n(rewrite (Mul (Num x) (Num y)) (Num (* x y)))\n\n(datatype MathList\n  (Nil)\n  (Cons Math MathList))\n\n(sort MathFn (UnstableFn (Math) Math))\n\n\n(constructor square (Math) Math)\n(rewrite (square x) (Mul x x))\n\n(let square-fn (unstable-fn \"square\" ))\n\n;; test that we can call a function\n(let squared-3 (unstable-app square-fn (Num 3)))\n(check (= squared-3 (square (Num 3))))\n\n;; test that we can apply a function to a list\n\n(constructor list-map-math (MathList MathFn) MathList)\n(rewrite (list-map-math (Nil) fn) (Nil))\n(rewrite (list-map-math (Cons x xs) fn) (Cons (unstable-app fn x) (list-map-math xs fn)))\n\n(let x (Cons (Num 1) (Cons (Num 2) (Cons (Num 3) (Nil)))))\n(let squared-x (list-map-math x square-fn))\n(run-schedule (saturate (run)))\n(check (= squared-x (Cons (Num 1) (Cons (Num 4) (Cons (Num 9) (Nil))))))\n\n;; Test that we can partially apply a function in a rewrite rule\n\n(constructor list-multiply-by (MathList Math) MathList)\n(rewrite (list-multiply-by l i) (list-map-math l (unstable-fn \"Mul\" i)))\n\n(let doubled-x (list-multiply-by x (Num 2)))\n(run-schedule (saturate (run)))\n(check (= doubled-x (Cons (Num 2) (Cons (Num 4) (Cons (Num 6) (Nil))))))\n\n;; Test we can define a higher order compose function\n\n(constructor composed-math (MathFn MathFn Math) Math)\n(rewrite (composed-math f g v) (unstable-app f (unstable-app g v)))\n\n(let square-of-double (unstable-fn \"composed-math\" square-fn (unstable-fn \"Mul\" (Num 2))))\n\n(let squared-doubled-x (list-map-math x square-of-double))\n(run-schedule (saturate (run)))\n(check (= squared-doubled-x (Cons (Num 4) (Cons (Num 16) (Cons (Num 36) (Nil))))))\n\n\n;; See that it supports primitive values as well\n(sort i64Fun (UnstableFn (i64) i64))\n\n(constructor composed-i64-math (MathFn i64Fun i64) Math)\n(rewrite (composed-i64-math f g v) (unstable-app f (Num (unstable-app g v))))\n\n(let res (composed-i64-math square-fn (unstable-fn \"*\" 2) 4))\n(run-schedule (saturate (run)))\n(check (= res (Num 64)))\n\n;; Verify that function parsing works with a function with no args\n(sort TestNullaryFunction (UnstableFn () Math))\n;; Verify that we know the type of a function based on the string name\n(extract (unstable-fn \"square\"))\n",
  "until": "; A simple group\n(datatype G)\n(constructor IConst () G)\n(let I (IConst))\n(constructor AConst () G)\n(let A (AConst))\n(constructor BConst () G)\n(let B (BConst))\n\n(constructor g* (G G) G)\n(constructor inv (G) G)\n(birewrite (g* (g* a b) c) (g* a (g* b c))) ; assoc\n(rewrite (g* I a) a) ; idl\n(rewrite (g* a I) a) ; idr\n\n; A is cyclic of period 4\n(rewrite (g* A (g* A (g* A A))) I)\n\n(let A2 (g* A A))\n(let A4 (g* A2 A2))\n(let A8 (g* A4 A4))\n\n; non terminating rule\n(relation allgs (G))\n(rule ((allgs x)) ((allgs (g* B x))))\n(allgs A)\n\n; if you remove :until, this will take a very long time\n(run 10000 :until (= A8 I))\n(check (= A8 I))\n(check (!= B A))\n(check (!= I A))\n; If you need multiple stop conditions, consider using a (relation relation stop (unit))\n; With rules filling it in with different stop conditions of interest.\n",
  "vec": "(sort IVec (Vec i64))\n\n; Test vec-of\n(check (= (vec-of 1 2) (vec-push (vec-push (vec-empty) 1) 2)))\n\n; Test vec-append\n(check (= (vec-append (vec-of 1 2) (vec-of 3 4)) (vec-of 1 2 3 4)))\n\n; Test vec-pop\n(check (= (vec-pop (vec-of 1 2 3)) (vec-of 1 2)))\n\n; Test vec-not-contains\n(check (vec-not-contains (vec-of 1 2 3) 4))\n\n; Test vec-contains\n(check (vec-contains (vec-of 1 2 3) 2))\n\n; Test length\n(check (= (vec-length (vec-of 1 2 3)) 3))\n\n; Test vec-get\n(check (= (vec-get (vec-of 1 2 3) 1) 2))\n\n; Test vec-set\n(check (= (vec-set (vec-of 1 2 3) 1 4) (vec-of 1 4 3)))\n"
}